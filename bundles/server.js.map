{"version":3,"file":"server.js","mappings":"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","sources":["webpack://historyorsomething/./node_modules/@firebase/util/dist/index.esm2017.js","webpack://historyorsomething/./node_modules/firebase/app/dist/index.esm.js","webpack://historyorsomething/./node_modules/tslib/tslib.es6.js","webpack://historyorsomething/./node_modules/@firebase/auth/dist/esm2017/index-3b632d0b.js","webpack://historyorsomething/./node_modules/idb/build/wrap-idb-value.js","webpack://historyorsomething/./node_modules/idb/build/index.js","webpack://historyorsomething/./node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack://historyorsomething/./node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack://historyorsomething/./node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack://historyorsomething/webpack/bootstrap","webpack://historyorsomething/webpack/runtime/define property getters","webpack://historyorsomething/webpack/runtime/global","webpack://historyorsomething/webpack/runtime/hasOwnProperty shorthand","webpack://historyorsomething/./node_modules/@firebase/webchannel-wrapper/dist/index.esm2017.js","webpack://historyorsomething/./node_modules/@firebase/firestore/dist/index.esm2017.js","webpack://historyorsomething/./build/server-client.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    return typeof indexedDB === 'object';\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if (e.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.8.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { ErrorFactory, deepEqual, isBrowserExtension, isMobileCordova, isReactNative, FirebaseError, querystring, getModularInstance, base64Decode, getUA, isIE, createSubscribe, querystringDecode, extractQuerystring, isEmpty } from '@firebase/util';\nimport { SDK_VERSION, _getProvider, _registerComponent, registerVersion, getApp } from '@firebase/app';\nimport { __rest } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enum of factors that may be used for multifactor authentication.\r\n *\r\n * @public\r\n */\r\nconst FactorId = {\r\n    /** Phone as second factor */\r\n    PHONE: 'phone'\r\n};\r\n/**\r\n * Enumeration of supported providers.\r\n *\r\n * @public\r\n */\r\nconst ProviderId = {\r\n    /** Facebook provider ID */\r\n    FACEBOOK: 'facebook.com',\r\n    /** GitHub provider ID */\r\n    GITHUB: 'github.com',\r\n    /** Google provider ID */\r\n    GOOGLE: 'google.com',\r\n    /** Password provider */\r\n    PASSWORD: 'password',\r\n    /** Phone provider */\r\n    PHONE: 'phone',\r\n    /** Twitter provider ID */\r\n    TWITTER: 'twitter.com'\r\n};\r\n/**\r\n * Enumeration of supported sign-in methods.\r\n *\r\n * @public\r\n */\r\nconst SignInMethod = {\r\n    /** Email link sign in method */\r\n    EMAIL_LINK: 'emailLink',\r\n    /** Email/password sign in method */\r\n    EMAIL_PASSWORD: 'password',\r\n    /** Facebook sign in method */\r\n    FACEBOOK: 'facebook.com',\r\n    /** GitHub sign in method */\r\n    GITHUB: 'github.com',\r\n    /** Google sign in method */\r\n    GOOGLE: 'google.com',\r\n    /** Phone sign in method */\r\n    PHONE: 'phone',\r\n    /** Twitter sign in method */\r\n    TWITTER: 'twitter.com'\r\n};\r\n/**\r\n * Enumeration of supported operation types.\r\n *\r\n * @public\r\n */\r\nconst OperationType = {\r\n    /** Operation involving linking an additional provider to an already signed-in user. */\r\n    LINK: 'link',\r\n    /** Operation involving using a provider to reauthenticate an already signed-in user. */\r\n    REAUTHENTICATE: 'reauthenticate',\r\n    /** Operation involving signing in a user. */\r\n    SIGN_IN: 'signIn'\r\n};\r\n/**\r\n * An enumeration of the possible email action types.\r\n *\r\n * @public\r\n */\r\nconst ActionCodeOperation = {\r\n    /** The email link sign-in action. */\r\n    EMAIL_SIGNIN: 'EMAIL_SIGNIN',\r\n    /** The password reset action. */\r\n    PASSWORD_RESET: 'PASSWORD_RESET',\r\n    /** The email revocation action. */\r\n    RECOVER_EMAIL: 'RECOVER_EMAIL',\r\n    /** The revert second factor addition email action. */\r\n    REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',\r\n    /** The revert second factor addition email action. */\r\n    VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',\r\n    /** The email verification action. */\r\n    VERIFY_EMAIL: 'VERIFY_EMAIL'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _debugErrorMap() {\r\n    return {\r\n        [\"admin-restricted-operation\" /* ADMIN_ONLY_OPERATION */]: 'This operation is restricted to administrators only.',\r\n        [\"argument-error\" /* ARGUMENT_ERROR */]: '',\r\n        [\"app-not-authorized\" /* APP_NOT_AUTHORIZED */]: \"This app, identified by the domain where it's hosted, is not \" +\r\n            'authorized to use Firebase Authentication with the provided API key. ' +\r\n            'Review your key configuration in the Google API console.',\r\n        [\"app-not-installed\" /* APP_NOT_INSTALLED */]: 'The requested mobile application corresponding to the identifier (' +\r\n            'Android package name or iOS bundle ID) provided is not installed on ' +\r\n            'this device.',\r\n        [\"captcha-check-failed\" /* CAPTCHA_CHECK_FAILED */]: 'The reCAPTCHA response token provided is either invalid, expired, ' +\r\n            'already used or the domain associated with it does not match the list ' +\r\n            'of whitelisted domains.',\r\n        [\"code-expired\" /* CODE_EXPIRED */]: 'The SMS code has expired. Please re-send the verification code to try ' +\r\n            'again.',\r\n        [\"cordova-not-ready\" /* CORDOVA_NOT_READY */]: 'Cordova framework is not ready.',\r\n        [\"cors-unsupported\" /* CORS_UNSUPPORTED */]: 'This browser is not supported.',\r\n        [\"credential-already-in-use\" /* CREDENTIAL_ALREADY_IN_USE */]: 'This credential is already associated with a different user account.',\r\n        [\"custom-token-mismatch\" /* CREDENTIAL_MISMATCH */]: 'The custom token corresponds to a different audience.',\r\n        [\"requires-recent-login\" /* CREDENTIAL_TOO_OLD_LOGIN_AGAIN */]: 'This operation is sensitive and requires recent authentication. Log in ' +\r\n            'again before retrying this request.',\r\n        [\"dependent-sdk-initialized-before-auth\" /* DEPENDENT_SDK_INIT_BEFORE_AUTH */]: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\r\n            'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\r\n            'starting any other Firebase SDK.',\r\n        [\"dynamic-link-not-activated\" /* DYNAMIC_LINK_NOT_ACTIVATED */]: 'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\r\n            'conditions.',\r\n        [\"email-change-needs-verification\" /* EMAIL_CHANGE_NEEDS_VERIFICATION */]: 'Multi-factor users must always have a verified email.',\r\n        [\"email-already-in-use\" /* EMAIL_EXISTS */]: 'The email address is already in use by another account.',\r\n        [\"emulator-config-failed\" /* EMULATOR_CONFIG_FAILED */]: 'Auth instance has already been used to make a network call. Auth can ' +\r\n            'no longer be configured to use the emulator. Try calling ' +\r\n            '\"connectAuthEmulator()\" sooner.',\r\n        [\"expired-action-code\" /* EXPIRED_OOB_CODE */]: 'The action code has expired.',\r\n        [\"cancelled-popup-request\" /* EXPIRED_POPUP_REQUEST */]: 'This operation has been cancelled due to another conflicting popup being opened.',\r\n        [\"internal-error\" /* INTERNAL_ERROR */]: 'An internal AuthError has occurred.',\r\n        [\"invalid-app-credential\" /* INVALID_APP_CREDENTIAL */]: 'The phone verification request contains an invalid application verifier.' +\r\n            ' The reCAPTCHA token response is either invalid or expired.',\r\n        [\"invalid-app-id\" /* INVALID_APP_ID */]: 'The mobile app identifier is not registed for the current project.',\r\n        [\"invalid-user-token\" /* INVALID_AUTH */]: \"This user's credential isn't valid for this project. This can happen \" +\r\n            \"if the user's token has been tampered with, or if the user isn't for \" +\r\n            'the project associated with this API key.',\r\n        [\"invalid-auth-event\" /* INVALID_AUTH_EVENT */]: 'An internal AuthError has occurred.',\r\n        [\"invalid-verification-code\" /* INVALID_CODE */]: 'The SMS verification code used to create the phone auth credential is ' +\r\n            'invalid. Please resend the verification code sms and be sure to use the ' +\r\n            'verification code provided by the user.',\r\n        [\"invalid-continue-uri\" /* INVALID_CONTINUE_URI */]: 'The continue URL provided in the request is invalid.',\r\n        [\"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */]: 'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\r\n            'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\r\n            'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\r\n            'cordova-plugin-customurlscheme.',\r\n        [\"invalid-custom-token\" /* INVALID_CUSTOM_TOKEN */]: 'The custom token format is incorrect. Please check the documentation.',\r\n        [\"invalid-dynamic-link-domain\" /* INVALID_DYNAMIC_LINK_DOMAIN */]: 'The provided dynamic link domain is not configured or authorized for the current project.',\r\n        [\"invalid-email\" /* INVALID_EMAIL */]: 'The email address is badly formatted.',\r\n        [\"invalid-emulator-scheme\" /* INVALID_EMULATOR_SCHEME */]: 'Emulator URL must start with a valid scheme (http:// or https://).',\r\n        [\"invalid-api-key\" /* INVALID_API_KEY */]: 'Your API key is invalid, please check you have copied it correctly.',\r\n        [\"invalid-cert-hash\" /* INVALID_CERT_HASH */]: 'The SHA-1 certificate hash provided is invalid.',\r\n        [\"invalid-credential\" /* INVALID_IDP_RESPONSE */]: 'The supplied auth credential is malformed or has expired.',\r\n        [\"invalid-message-payload\" /* INVALID_MESSAGE_PAYLOAD */]: 'The email template corresponding to this action contains invalid characters in its message. ' +\r\n            'Please fix by going to the Auth email templates section in the Firebase Console.',\r\n        [\"invalid-multi-factor-session\" /* INVALID_MFA_SESSION */]: 'The request does not contain a valid proof of first factor successful sign-in.',\r\n        [\"invalid-oauth-provider\" /* INVALID_OAUTH_PROVIDER */]: 'EmailAuthProvider is not supported for this operation. This operation ' +\r\n            'only supports OAuth providers.',\r\n        [\"invalid-oauth-client-id\" /* INVALID_OAUTH_CLIENT_ID */]: 'The OAuth client ID provided is either invalid or does not match the ' +\r\n            'specified API key.',\r\n        [\"unauthorized-domain\" /* INVALID_ORIGIN */]: 'This domain is not authorized for OAuth operations for your Firebase ' +\r\n            'project. Edit the list of authorized domains from the Firebase console.',\r\n        [\"invalid-action-code\" /* INVALID_OOB_CODE */]: 'The action code is invalid. This can happen if the code is malformed, ' +\r\n            'expired, or has already been used.',\r\n        [\"wrong-password\" /* INVALID_PASSWORD */]: 'The password is invalid or the user does not have a password.',\r\n        [\"invalid-persistence-type\" /* INVALID_PERSISTENCE */]: 'The specified persistence type is invalid. It can only be local, session or none.',\r\n        [\"invalid-phone-number\" /* INVALID_PHONE_NUMBER */]: 'The format of the phone number provided is incorrect. Please enter the ' +\r\n            'phone number in a format that can be parsed into E.164 format. E.164 ' +\r\n            'phone numbers are written in the format [+][country code][subscriber ' +\r\n            'number including area code].',\r\n        [\"invalid-provider-id\" /* INVALID_PROVIDER_ID */]: 'The specified provider ID is invalid.',\r\n        [\"invalid-recipient-email\" /* INVALID_RECIPIENT_EMAIL */]: 'The email corresponding to this action failed to send as the provided ' +\r\n            'recipient email address is invalid.',\r\n        [\"invalid-sender\" /* INVALID_SENDER */]: 'The email template corresponding to this action contains an invalid sender email or name. ' +\r\n            'Please fix by going to the Auth email templates section in the Firebase Console.',\r\n        [\"invalid-verification-id\" /* INVALID_SESSION_INFO */]: 'The verification ID used to create the phone auth credential is invalid.',\r\n        [\"invalid-tenant-id\" /* INVALID_TENANT_ID */]: \"The Auth instance's tenant ID is invalid.\",\r\n        [\"login-blocked\" /* LOGIN_BLOCKED */]: \"Login blocked by user-provided method: {$originalMessage}\",\r\n        [\"missing-android-pkg-name\" /* MISSING_ANDROID_PACKAGE_NAME */]: 'An Android Package Name must be provided if the Android App is required to be installed.',\r\n        [\"auth-domain-config-required\" /* MISSING_AUTH_DOMAIN */]: 'Be sure to include authDomain when calling firebase.initializeApp(), ' +\r\n            'by following the instructions in the Firebase console.',\r\n        [\"missing-app-credential\" /* MISSING_APP_CREDENTIAL */]: 'The phone verification request is missing an application verifier ' +\r\n            'assertion. A reCAPTCHA response token needs to be provided.',\r\n        [\"missing-verification-code\" /* MISSING_CODE */]: 'The phone auth credential was created with an empty SMS verification code.',\r\n        [\"missing-continue-uri\" /* MISSING_CONTINUE_URI */]: 'A continue URL must be provided in the request.',\r\n        [\"missing-iframe-start\" /* MISSING_IFRAME_START */]: 'An internal AuthError has occurred.',\r\n        [\"missing-ios-bundle-id\" /* MISSING_IOS_BUNDLE_ID */]: 'An iOS Bundle ID must be provided if an App Store ID is provided.',\r\n        [\"missing-or-invalid-nonce\" /* MISSING_OR_INVALID_NONCE */]: 'The request does not contain a valid nonce. This can occur if the ' +\r\n            'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\r\n            'in the ID token payload.',\r\n        [\"missing-multi-factor-info\" /* MISSING_MFA_INFO */]: 'No second factor identifier is provided.',\r\n        [\"missing-multi-factor-session\" /* MISSING_MFA_SESSION */]: 'The request is missing proof of first factor successful sign-in.',\r\n        [\"missing-phone-number\" /* MISSING_PHONE_NUMBER */]: 'To send verification codes, provide a phone number for the recipient.',\r\n        [\"missing-verification-id\" /* MISSING_SESSION_INFO */]: 'The phone auth credential was created with an empty verification ID.',\r\n        [\"app-deleted\" /* MODULE_DESTROYED */]: 'This instance of FirebaseApp has been deleted.',\r\n        [\"multi-factor-info-not-found\" /* MFA_INFO_NOT_FOUND */]: 'The user does not have a second factor matching the identifier provided.',\r\n        [\"multi-factor-auth-required\" /* MFA_REQUIRED */]: 'Proof of ownership of a second factor is required to complete sign-in.',\r\n        [\"account-exists-with-different-credential\" /* NEED_CONFIRMATION */]: 'An account already exists with the same email address but different ' +\r\n            'sign-in credentials. Sign in using a provider associated with this ' +\r\n            'email address.',\r\n        [\"network-request-failed\" /* NETWORK_REQUEST_FAILED */]: 'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\r\n        [\"no-auth-event\" /* NO_AUTH_EVENT */]: 'An internal AuthError has occurred.',\r\n        [\"no-such-provider\" /* NO_SUCH_PROVIDER */]: 'User was not linked to an account with the given provider.',\r\n        [\"null-user\" /* NULL_USER */]: 'A null user object was provided as the argument for an operation which ' +\r\n            'requires a non-null user object.',\r\n        [\"operation-not-allowed\" /* OPERATION_NOT_ALLOWED */]: 'The given sign-in provider is disabled for this Firebase project. ' +\r\n            'Enable it in the Firebase console, under the sign-in method tab of the ' +\r\n            'Auth section.',\r\n        [\"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */]: 'This operation is not supported in the environment this application is ' +\r\n            'running on. \"location.protocol\" must be http, https or chrome-extension' +\r\n            ' and web storage must be enabled.',\r\n        [\"popup-blocked\" /* POPUP_BLOCKED */]: 'Unable to establish a connection with the popup. It may have been blocked by the browser.',\r\n        [\"popup-closed-by-user\" /* POPUP_CLOSED_BY_USER */]: 'The popup has been closed by the user before finalizing the operation.',\r\n        [\"provider-already-linked\" /* PROVIDER_ALREADY_LINKED */]: 'User can only be linked to one identity for the given provider.',\r\n        [\"quota-exceeded\" /* QUOTA_EXCEEDED */]: \"The project's quota for this operation has been exceeded.\",\r\n        [\"redirect-cancelled-by-user\" /* REDIRECT_CANCELLED_BY_USER */]: 'The redirect operation has been cancelled by the user before finalizing.',\r\n        [\"redirect-operation-pending\" /* REDIRECT_OPERATION_PENDING */]: 'A redirect sign-in operation is already pending.',\r\n        [\"rejected-credential\" /* REJECTED_CREDENTIAL */]: 'The request contains malformed or mismatching credentials.',\r\n        [\"second-factor-already-in-use\" /* SECOND_FACTOR_ALREADY_ENROLLED */]: 'The second factor is already enrolled on this account.',\r\n        [\"maximum-second-factor-count-exceeded\" /* SECOND_FACTOR_LIMIT_EXCEEDED */]: 'The maximum allowed number of second factors on a user has been exceeded.',\r\n        [\"tenant-id-mismatch\" /* TENANT_ID_MISMATCH */]: \"The provided tenant ID does not match the Auth instance's tenant ID\",\r\n        [\"timeout\" /* TIMEOUT */]: 'The operation has timed out.',\r\n        [\"user-token-expired\" /* TOKEN_EXPIRED */]: \"The user's credential is no longer valid. The user must sign in again.\",\r\n        [\"too-many-requests\" /* TOO_MANY_ATTEMPTS_TRY_LATER */]: 'We have blocked all requests from this device due to unusual activity. ' +\r\n            'Try again later.',\r\n        [\"unauthorized-continue-uri\" /* UNAUTHORIZED_DOMAIN */]: 'The domain of the continue URL is not whitelisted.  Please whitelist ' +\r\n            'the domain in the Firebase console.',\r\n        [\"unsupported-first-factor\" /* UNSUPPORTED_FIRST_FACTOR */]: 'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\r\n        [\"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */]: 'The current environment does not support the specified persistence type.',\r\n        [\"unsupported-tenant-operation\" /* UNSUPPORTED_TENANT_OPERATION */]: 'This operation is not supported in a multi-tenant context.',\r\n        [\"unverified-email\" /* UNVERIFIED_EMAIL */]: 'The operation requires a verified email.',\r\n        [\"user-cancelled\" /* USER_CANCELLED */]: 'The user did not grant your application the permissions it requested.',\r\n        [\"user-not-found\" /* USER_DELETED */]: 'There is no user record corresponding to this identifier. The user may ' +\r\n            'have been deleted.',\r\n        [\"user-disabled\" /* USER_DISABLED */]: 'The user account has been disabled by an administrator.',\r\n        [\"user-mismatch\" /* USER_MISMATCH */]: 'The supplied credentials do not correspond to the previously signed in user.',\r\n        [\"user-signed-out\" /* USER_SIGNED_OUT */]: '',\r\n        [\"weak-password\" /* WEAK_PASSWORD */]: 'The password must be 6 characters long or more.',\r\n        [\"web-storage-unsupported\" /* WEB_STORAGE_UNSUPPORTED */]: 'This browser is not supported or 3rd party cookies and data may be disabled.',\r\n        [\"already-initialized\" /* ALREADY_INITIALIZED */]: 'initializeAuth() has already been called with ' +\r\n            'different options. To avoid this error, call initializeAuth() with the ' +\r\n            'same options as when it was originally called, or call getAuth() to return the' +\r\n            ' already initialized instance.'\r\n    };\r\n}\r\nfunction _prodErrorMap() {\r\n    // We will include this one message in the prod error map since by the very\r\n    // nature of this error, developers will never be able to see the message\r\n    // using the debugErrorMap (which is installed during auth initialization).\r\n    return {\r\n        [\"dependent-sdk-initialized-before-auth\" /* DEPENDENT_SDK_INIT_BEFORE_AUTH */]: 'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\r\n            'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\r\n            'starting any other Firebase SDK.'\r\n    };\r\n}\r\n/**\r\n * A verbose error map with detailed descriptions for most error codes.\r\n *\r\n * See discussion at {@link AuthErrorMap}\r\n *\r\n * @public\r\n */\r\nconst debugErrorMap = _debugErrorMap;\r\n/**\r\n * A minimal error map with all verbose error messages stripped.\r\n *\r\n * See discussion at {@link AuthErrorMap}\r\n *\r\n * @public\r\n */\r\nconst prodErrorMap = _prodErrorMap;\r\nconst _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory('auth', 'Firebase', _prodErrorMap());\r\n/**\r\n * A map of potential `Auth` error codes, for easier comparison with errors\r\n * thrown by the SDK.\r\n *\r\n * @remarks\r\n * Note that you can't tree-shake individual keys\r\n * in the map, so by using the map you might substantially increase your\r\n * bundle size.\r\n *\r\n * @public\r\n */\r\nconst AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\r\n    ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\r\n    ARGUMENT_ERROR: 'auth/argument-error',\r\n    APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\r\n    APP_NOT_INSTALLED: 'auth/app-not-installed',\r\n    CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\r\n    CODE_EXPIRED: 'auth/code-expired',\r\n    CORDOVA_NOT_READY: 'auth/cordova-not-ready',\r\n    CORS_UNSUPPORTED: 'auth/cors-unsupported',\r\n    CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\r\n    CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\r\n    CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\r\n    DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\r\n    DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\r\n    EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\r\n    EMAIL_EXISTS: 'auth/email-already-in-use',\r\n    EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\r\n    EXPIRED_OOB_CODE: 'auth/expired-action-code',\r\n    EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\r\n    INTERNAL_ERROR: 'auth/internal-error',\r\n    INVALID_API_KEY: 'auth/invalid-api-key',\r\n    INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\r\n    INVALID_APP_ID: 'auth/invalid-app-id',\r\n    INVALID_AUTH: 'auth/invalid-user-token',\r\n    INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\r\n    INVALID_CERT_HASH: 'auth/invalid-cert-hash',\r\n    INVALID_CODE: 'auth/invalid-verification-code',\r\n    INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\r\n    INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\r\n    INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\r\n    INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\r\n    INVALID_EMAIL: 'auth/invalid-email',\r\n    INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\r\n    INVALID_IDP_RESPONSE: 'auth/invalid-credential',\r\n    INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\r\n    INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\r\n    INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\r\n    INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\r\n    INVALID_OOB_CODE: 'auth/invalid-action-code',\r\n    INVALID_ORIGIN: 'auth/unauthorized-domain',\r\n    INVALID_PASSWORD: 'auth/wrong-password',\r\n    INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\r\n    INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\r\n    INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\r\n    INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\r\n    INVALID_SENDER: 'auth/invalid-sender',\r\n    INVALID_SESSION_INFO: 'auth/invalid-verification-id',\r\n    INVALID_TENANT_ID: 'auth/invalid-tenant-id',\r\n    MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\r\n    MFA_REQUIRED: 'auth/multi-factor-auth-required',\r\n    MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\r\n    MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\r\n    MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\r\n    MISSING_CODE: 'auth/missing-verification-code',\r\n    MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\r\n    MISSING_IFRAME_START: 'auth/missing-iframe-start',\r\n    MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\r\n    MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\r\n    MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\r\n    MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\r\n    MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\r\n    MISSING_SESSION_INFO: 'auth/missing-verification-id',\r\n    MODULE_DESTROYED: 'auth/app-deleted',\r\n    NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\r\n    NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\r\n    NULL_USER: 'auth/null-user',\r\n    NO_AUTH_EVENT: 'auth/no-auth-event',\r\n    NO_SUCH_PROVIDER: 'auth/no-such-provider',\r\n    OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\r\n    OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\r\n    POPUP_BLOCKED: 'auth/popup-blocked',\r\n    POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\r\n    PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\r\n    QUOTA_EXCEEDED: 'auth/quota-exceeded',\r\n    REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\r\n    REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\r\n    REJECTED_CREDENTIAL: 'auth/rejected-credential',\r\n    SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\r\n    SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\r\n    TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\r\n    TIMEOUT: 'auth/timeout',\r\n    TOKEN_EXPIRED: 'auth/user-token-expired',\r\n    TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\r\n    UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\r\n    UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\r\n    UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\r\n    UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\r\n    UNVERIFIED_EMAIL: 'auth/unverified-email',\r\n    USER_CANCELLED: 'auth/user-cancelled',\r\n    USER_DELETED: 'auth/user-not-found',\r\n    USER_DISABLED: 'auth/user-disabled',\r\n    USER_MISMATCH: 'auth/user-mismatch',\r\n    USER_SIGNED_OUT: 'auth/user-signed-out',\r\n    WEAK_PASSWORD: 'auth/weak-password',\r\n    WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\r\n    ALREADY_INITIALIZED: 'auth/already-initialized'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/auth');\r\nfunction _logError(msg, ...args) {\r\n    if (logClient.logLevel <= LogLevel.ERROR) {\r\n        logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _fail(authOrCode, ...rest) {\r\n    throw createErrorInternal(authOrCode, ...rest);\r\n}\r\nfunction _createError(authOrCode, ...rest) {\r\n    return createErrorInternal(authOrCode, ...rest);\r\n}\r\nfunction _errorWithCustomMessage(auth, code, message) {\r\n    const errorMap = Object.assign(Object.assign({}, prodErrorMap()), { [code]: message });\r\n    const factory = new ErrorFactory('auth', 'Firebase', errorMap);\r\n    return factory.create(code, {\r\n        appName: auth.name,\r\n    });\r\n}\r\nfunction _assertInstanceOf(auth, object, instance) {\r\n    const constructorInstance = instance;\r\n    if (!(object instanceof constructorInstance)) {\r\n        if (constructorInstance.name !== object.constructor.name) {\r\n            _fail(auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        }\r\n        throw _errorWithCustomMessage(auth, \"argument-error\" /* ARGUMENT_ERROR */, `Type of ${object.constructor.name} does not match expected instance.` +\r\n            `Did you pass a reference from a different Auth SDK?`);\r\n    }\r\n}\r\nfunction createErrorInternal(authOrCode, ...rest) {\r\n    if (typeof authOrCode !== 'string') {\r\n        const code = rest[0];\r\n        const fullParams = [...rest.slice(1)];\r\n        if (fullParams[0]) {\r\n            fullParams[0].appName = authOrCode.name;\r\n        }\r\n        return authOrCode._errorFactory.create(code, ...fullParams);\r\n    }\r\n    return _DEFAULT_AUTH_ERROR_FACTORY.create(authOrCode, ...rest);\r\n}\r\nfunction _assert(assertion, authOrCode, ...rest) {\r\n    if (!assertion) {\r\n        throw createErrorInternal(authOrCode, ...rest);\r\n    }\r\n}\r\n/**\r\n * Unconditionally fails, throwing an internal error with the given message.\r\n *\r\n * @param failure type of failure encountered\r\n * @throws Error\r\n */\r\nfunction debugFail(failure) {\r\n    // Log the failure in addition to throw an exception, just in case the\r\n    // exception is swallowed.\r\n    const message = `INTERNAL ASSERTION FAILED: ` + failure;\r\n    _logError(message);\r\n    // NOTE: We don't use FirebaseError here because these are internal failures\r\n    // that cannot be handled by the user. (Also it would create a circular\r\n    // dependency between the error and assert modules which doesn't work.)\r\n    throw new Error(message);\r\n}\r\n/**\r\n * Fails if the given assertion condition is false, throwing an Error with the\r\n * given message if it did.\r\n *\r\n * @param assertion\r\n * @param message\r\n */\r\nfunction debugAssert(assertion, message) {\r\n    if (!assertion) {\r\n        debugFail(message);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst instanceCache = new Map();\r\nfunction _getInstance(cls) {\r\n    debugAssert(cls instanceof Function, 'Expected a class definition');\r\n    let instance = instanceCache.get(cls);\r\n    if (instance) {\r\n        debugAssert(instance instanceof cls, 'Instance stored in cache mismatched with class');\r\n        return instance;\r\n    }\r\n    instance = new cls();\r\n    instanceCache.set(cls, instance);\r\n    return instance;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Initializes an {@link Auth} instance with fine-grained control over\r\n * {@link Dependencies}.\r\n *\r\n * @remarks\r\n *\r\n * This function allows more control over the {@link Auth} instance than\r\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\r\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\r\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\r\n * need control over which persistence layer is used, or to minimize bundle\r\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\r\n *\r\n * For example, if your app only uses anonymous accounts and you only want\r\n * accounts saved for the current session, initialize `Auth` with:\r\n *\r\n * ```js\r\n * const auth = initializeAuth(app, {\r\n *   persistence: browserSessionPersistence,\r\n *   popupRedirectResolver: undefined,\r\n * });\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction initializeAuth(app, deps) {\r\n    const provider = _getProvider(app, 'auth');\r\n    if (provider.isInitialized()) {\r\n        const auth = provider.getImmediate();\r\n        const initialOptions = provider.getOptions();\r\n        if (deepEqual(initialOptions, deps !== null && deps !== void 0 ? deps : {})) {\r\n            return auth;\r\n        }\r\n        else {\r\n            _fail(auth, \"already-initialized\" /* ALREADY_INITIALIZED */);\r\n        }\r\n    }\r\n    const auth = provider.initialize({ options: deps });\r\n    return auth;\r\n}\r\nfunction _initializeAuthInstance(auth, deps) {\r\n    const persistence = (deps === null || deps === void 0 ? void 0 : deps.persistence) || [];\r\n    const hierarchy = (Array.isArray(persistence) ? persistence : [persistence]).map(_getInstance);\r\n    if (deps === null || deps === void 0 ? void 0 : deps.errorMap) {\r\n        auth._updateErrorMap(deps.errorMap);\r\n    }\r\n    // This promise is intended to float; auth initialization happens in the\r\n    // background, meanwhile the auth object may be used by the app.\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    auth._initializeWithPersistence(hierarchy, deps === null || deps === void 0 ? void 0 : deps.popupRedirectResolver);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _getCurrentUrl() {\r\n    var _a;\r\n    return (typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.href)) || '';\r\n}\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return (typeof self !== 'undefined' && ((_a = self.location) === null || _a === void 0 ? void 0 : _a.protocol)) || null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Determine whether the browser is working online\r\n */\r\nfunction _isOnline() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        navigator &&\r\n        'onLine' in navigator &&\r\n        typeof navigator.onLine === 'boolean' &&\r\n        // Apply only for traditional web apps and Chrome extensions.\r\n        // This is especially true for Cordova apps which have unreliable\r\n        // navigator.onLine behavior unless cordova-plugin-network-information is\r\n        // installed which overwrites the native navigator.onLine value and\r\n        // defines navigator.connection.\r\n        (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)) {\r\n        return navigator.onLine;\r\n    }\r\n    // If we can't determine the state, assume it is online.\r\n    return true;\r\n}\r\nfunction _getUserLanguage() {\r\n    if (typeof navigator === 'undefined') {\r\n        return null;\r\n    }\r\n    const navigatorLanguage = navigator;\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language ||\r\n        // Couldn't determine language.\r\n        null);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A structure to help pick between a range of long and short delay durations\r\n * depending on the current environment. In general, the long delay is used for\r\n * mobile environments whereas short delays are used for desktop environments.\r\n */\r\nclass Delay {\r\n    constructor(shortDelay, longDelay) {\r\n        this.shortDelay = shortDelay;\r\n        this.longDelay = longDelay;\r\n        // Internal error when improperly initialized.\r\n        debugAssert(longDelay > shortDelay, 'Short delay should be less than long delay!');\r\n        this.isMobile = isMobileCordova() || isReactNative();\r\n    }\r\n    get() {\r\n        if (!_isOnline()) {\r\n            // Pick the shorter timeout.\r\n            return Math.min(5000 /* OFFLINE */, this.shortDelay);\r\n        }\r\n        // If running in a mobile environment, return the long delay, otherwise\r\n        // return the short delay.\r\n        // This could be improved in the future to dynamically change based on other\r\n        // variables instead of just reading the current environment.\r\n        return this.isMobile ? this.longDelay : this.shortDelay;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _emulatorUrl(config, path) {\r\n    debugAssert(config.emulator, 'Emulator should always be set here');\r\n    const { url } = config.emulator;\r\n    if (!path) {\r\n        return url;\r\n    }\r\n    return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FetchProvider {\r\n    static initialize(fetchImpl, headersImpl, responseImpl) {\r\n        this.fetchImpl = fetchImpl;\r\n        if (headersImpl) {\r\n            this.headersImpl = headersImpl;\r\n        }\r\n        if (responseImpl) {\r\n            this.responseImpl = responseImpl;\r\n        }\r\n    }\r\n    static fetch() {\r\n        if (this.fetchImpl) {\r\n            return this.fetchImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'fetch' in self) {\r\n            return self.fetch;\r\n        }\r\n        debugFail('Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n    static headers() {\r\n        if (this.headersImpl) {\r\n            return this.headersImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'Headers' in self) {\r\n            return self.Headers;\r\n        }\r\n        debugFail('Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n    static response() {\r\n        if (this.responseImpl) {\r\n            return this.responseImpl;\r\n        }\r\n        if (typeof self !== 'undefined' && 'Response' in self) {\r\n            return self.Response;\r\n        }\r\n        debugFail('Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Map from errors returned by the server to errors to developer visible errors\r\n */\r\nconst SERVER_ERROR_MAP = {\r\n    // Custom token errors.\r\n    [\"CREDENTIAL_MISMATCH\" /* CREDENTIAL_MISMATCH */]: \"custom-token-mismatch\" /* CREDENTIAL_MISMATCH */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_CUSTOM_TOKEN\" /* MISSING_CUSTOM_TOKEN */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Create Auth URI errors.\r\n    [\"INVALID_IDENTIFIER\" /* INVALID_IDENTIFIER */]: \"invalid-email\" /* INVALID_EMAIL */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_CONTINUE_URI\" /* MISSING_CONTINUE_URI */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Sign in with email and password errors (some apply to sign up too).\r\n    [\"INVALID_PASSWORD\" /* INVALID_PASSWORD */]: \"wrong-password\" /* INVALID_PASSWORD */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_PASSWORD\" /* MISSING_PASSWORD */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Sign up with email and password errors.\r\n    [\"EMAIL_EXISTS\" /* EMAIL_EXISTS */]: \"email-already-in-use\" /* EMAIL_EXISTS */,\r\n    [\"PASSWORD_LOGIN_DISABLED\" /* PASSWORD_LOGIN_DISABLED */]: \"operation-not-allowed\" /* OPERATION_NOT_ALLOWED */,\r\n    // Verify assertion for sign in with credential errors:\r\n    [\"INVALID_IDP_RESPONSE\" /* INVALID_IDP_RESPONSE */]: \"invalid-credential\" /* INVALID_IDP_RESPONSE */,\r\n    [\"INVALID_PENDING_TOKEN\" /* INVALID_PENDING_TOKEN */]: \"invalid-credential\" /* INVALID_IDP_RESPONSE */,\r\n    [\"FEDERATED_USER_ID_ALREADY_LINKED\" /* FEDERATED_USER_ID_ALREADY_LINKED */]: \"credential-already-in-use\" /* CREDENTIAL_ALREADY_IN_USE */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_REQ_TYPE\" /* MISSING_REQ_TYPE */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Send Password reset email errors:\r\n    [\"EMAIL_NOT_FOUND\" /* EMAIL_NOT_FOUND */]: \"user-not-found\" /* USER_DELETED */,\r\n    [\"RESET_PASSWORD_EXCEED_LIMIT\" /* RESET_PASSWORD_EXCEED_LIMIT */]: \"too-many-requests\" /* TOO_MANY_ATTEMPTS_TRY_LATER */,\r\n    [\"EXPIRED_OOB_CODE\" /* EXPIRED_OOB_CODE */]: \"expired-action-code\" /* EXPIRED_OOB_CODE */,\r\n    [\"INVALID_OOB_CODE\" /* INVALID_OOB_CODE */]: \"invalid-action-code\" /* INVALID_OOB_CODE */,\r\n    // This can only happen if the SDK sends a bad request.\r\n    [\"MISSING_OOB_CODE\" /* MISSING_OOB_CODE */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n    // Operations that require ID token in request:\r\n    [\"CREDENTIAL_TOO_OLD_LOGIN_AGAIN\" /* CREDENTIAL_TOO_OLD_LOGIN_AGAIN */]: \"requires-recent-login\" /* CREDENTIAL_TOO_OLD_LOGIN_AGAIN */,\r\n    [\"INVALID_ID_TOKEN\" /* INVALID_ID_TOKEN */]: \"invalid-user-token\" /* INVALID_AUTH */,\r\n    [\"TOKEN_EXPIRED\" /* TOKEN_EXPIRED */]: \"user-token-expired\" /* TOKEN_EXPIRED */,\r\n    [\"USER_NOT_FOUND\" /* USER_NOT_FOUND */]: \"user-token-expired\" /* TOKEN_EXPIRED */,\r\n    // Other errors.\r\n    [\"TOO_MANY_ATTEMPTS_TRY_LATER\" /* TOO_MANY_ATTEMPTS_TRY_LATER */]: \"too-many-requests\" /* TOO_MANY_ATTEMPTS_TRY_LATER */,\r\n    // Phone Auth related errors.\r\n    [\"INVALID_CODE\" /* INVALID_CODE */]: \"invalid-verification-code\" /* INVALID_CODE */,\r\n    [\"INVALID_SESSION_INFO\" /* INVALID_SESSION_INFO */]: \"invalid-verification-id\" /* INVALID_SESSION_INFO */,\r\n    [\"INVALID_TEMPORARY_PROOF\" /* INVALID_TEMPORARY_PROOF */]: \"invalid-credential\" /* INVALID_IDP_RESPONSE */,\r\n    [\"MISSING_SESSION_INFO\" /* MISSING_SESSION_INFO */]: \"missing-verification-id\" /* MISSING_SESSION_INFO */,\r\n    [\"SESSION_EXPIRED\" /* SESSION_EXPIRED */]: \"code-expired\" /* CODE_EXPIRED */,\r\n    // Other action code errors when additional settings passed.\r\n    // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\r\n    // This is OK as this error will be caught by client side validation.\r\n    [\"MISSING_ANDROID_PACKAGE_NAME\" /* MISSING_ANDROID_PACKAGE_NAME */]: \"missing-android-pkg-name\" /* MISSING_ANDROID_PACKAGE_NAME */,\r\n    [\"UNAUTHORIZED_DOMAIN\" /* UNAUTHORIZED_DOMAIN */]: \"unauthorized-continue-uri\" /* UNAUTHORIZED_DOMAIN */,\r\n    // getProjectConfig errors when clientId is passed.\r\n    [\"INVALID_OAUTH_CLIENT_ID\" /* INVALID_OAUTH_CLIENT_ID */]: \"invalid-oauth-client-id\" /* INVALID_OAUTH_CLIENT_ID */,\r\n    // User actions (sign-up or deletion) disabled errors.\r\n    [\"ADMIN_ONLY_OPERATION\" /* ADMIN_ONLY_OPERATION */]: \"admin-restricted-operation\" /* ADMIN_ONLY_OPERATION */,\r\n    // Multi factor related errors.\r\n    [\"INVALID_MFA_PENDING_CREDENTIAL\" /* INVALID_MFA_PENDING_CREDENTIAL */]: \"invalid-multi-factor-session\" /* INVALID_MFA_SESSION */,\r\n    [\"MFA_ENROLLMENT_NOT_FOUND\" /* MFA_ENROLLMENT_NOT_FOUND */]: \"multi-factor-info-not-found\" /* MFA_INFO_NOT_FOUND */,\r\n    [\"MISSING_MFA_ENROLLMENT_ID\" /* MISSING_MFA_ENROLLMENT_ID */]: \"missing-multi-factor-info\" /* MISSING_MFA_INFO */,\r\n    [\"MISSING_MFA_PENDING_CREDENTIAL\" /* MISSING_MFA_PENDING_CREDENTIAL */]: \"missing-multi-factor-session\" /* MISSING_MFA_SESSION */,\r\n    [\"SECOND_FACTOR_EXISTS\" /* SECOND_FACTOR_EXISTS */]: \"second-factor-already-in-use\" /* SECOND_FACTOR_ALREADY_ENROLLED */,\r\n    [\"SECOND_FACTOR_LIMIT_EXCEEDED\" /* SECOND_FACTOR_LIMIT_EXCEEDED */]: \"maximum-second-factor-count-exceeded\" /* SECOND_FACTOR_LIMIT_EXCEEDED */,\r\n    // Blocking functions related errors.\r\n    [\"BLOCKING_FUNCTION_ERROR_RESPONSE\" /* BLOCKING_FUNCTION_ERROR_RESPONSE */]: \"internal-error\" /* INTERNAL_ERROR */,\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_API_TIMEOUT_MS = new Delay(30000, 60000);\r\nfunction _addTidIfNecessary(auth, request) {\r\n    if (auth.tenantId && !request.tenantId) {\r\n        return Object.assign(Object.assign({}, request), { tenantId: auth.tenantId });\r\n    }\r\n    return request;\r\n}\r\nasync function _performApiRequest(auth, method, path, request, customErrorMap = {}) {\r\n    return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\r\n        let body = {};\r\n        let params = {};\r\n        if (request) {\r\n            if (method === \"GET\" /* GET */) {\r\n                params = request;\r\n            }\r\n            else {\r\n                body = {\r\n                    body: JSON.stringify(request)\r\n                };\r\n            }\r\n        }\r\n        const query = querystring(Object.assign({ key: auth.config.apiKey }, params)).slice(1);\r\n        const headers = await auth._getAdditionalHeaders();\r\n        headers[\"Content-Type\" /* CONTENT_TYPE */] = 'application/json';\r\n        if (auth.languageCode) {\r\n            headers[\"X-Firebase-Locale\" /* X_FIREBASE_LOCALE */] = auth.languageCode;\r\n        }\r\n        return FetchProvider.fetch()(_getFinalTarget(auth, auth.config.apiHost, path, query), Object.assign({ method,\r\n            headers, referrerPolicy: 'no-referrer' }, body));\r\n    });\r\n}\r\nasync function _performFetchWithErrorHandling(auth, customErrorMap, fetchFn) {\r\n    auth._canInitEmulator = false;\r\n    const errorMap = Object.assign(Object.assign({}, SERVER_ERROR_MAP), customErrorMap);\r\n    try {\r\n        const networkTimeout = new NetworkTimeout(auth);\r\n        const response = await Promise.race([\r\n            fetchFn(),\r\n            networkTimeout.promise\r\n        ]);\r\n        // If we've reached this point, the fetch succeeded and the networkTimeout\r\n        // didn't throw; clear the network timeout delay so that Node won't hang\r\n        networkTimeout.clearNetworkTimeout();\r\n        const json = await response.json();\r\n        if ('needConfirmation' in json) {\r\n            throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* NEED_CONFIRMATION */, json);\r\n        }\r\n        if (response.ok && !('errorMessage' in json)) {\r\n            return json;\r\n        }\r\n        else {\r\n            const errorMessage = response.ok ? json.errorMessage : json.error.message;\r\n            const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\r\n            if (serverErrorCode === \"FEDERATED_USER_ID_ALREADY_LINKED\" /* FEDERATED_USER_ID_ALREADY_LINKED */) {\r\n                throw _makeTaggedError(auth, \"credential-already-in-use\" /* CREDENTIAL_ALREADY_IN_USE */, json);\r\n            }\r\n            else if (serverErrorCode === \"EMAIL_EXISTS\" /* EMAIL_EXISTS */) {\r\n                throw _makeTaggedError(auth, \"email-already-in-use\" /* EMAIL_EXISTS */, json);\r\n            }\r\n            const authError = errorMap[serverErrorCode] ||\r\n                serverErrorCode\r\n                    .toLowerCase()\r\n                    .replace(/[_\\s]+/g, '-');\r\n            if (serverErrorMessage) {\r\n                throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\r\n            }\r\n            else {\r\n                _fail(auth, authError);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            throw e;\r\n        }\r\n        _fail(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */);\r\n    }\r\n}\r\nasync function _performSignInRequest(auth, method, path, request, customErrorMap = {}) {\r\n    const serverResponse = (await _performApiRequest(auth, method, path, request, customErrorMap));\r\n    if ('mfaPendingCredential' in serverResponse) {\r\n        _fail(auth, \"multi-factor-auth-required\" /* MFA_REQUIRED */, {\r\n            _serverResponse: serverResponse\r\n        });\r\n    }\r\n    return serverResponse;\r\n}\r\nfunction _getFinalTarget(auth, host, path, query) {\r\n    const base = `${host}${path}?${query}`;\r\n    if (!auth.config.emulator) {\r\n        return `${auth.config.apiScheme}://${base}`;\r\n    }\r\n    return _emulatorUrl(auth.config, base);\r\n}\r\nclass NetworkTimeout {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        // Node timers and browser timers are fundamentally incompatible, but we\r\n        // don't care about the value here\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.timer = null;\r\n        this.promise = new Promise((_, reject) => {\r\n            this.timer = setTimeout(() => {\r\n                return reject(_createError(this.auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */));\r\n            }, DEFAULT_API_TIMEOUT_MS.get());\r\n        });\r\n    }\r\n    clearNetworkTimeout() {\r\n        clearTimeout(this.timer);\r\n    }\r\n}\r\nfunction _makeTaggedError(auth, code, response) {\r\n    const errorParams = {\r\n        appName: auth.name\r\n    };\r\n    if (response.email) {\r\n        errorParams.email = response.email;\r\n    }\r\n    if (response.phoneNumber) {\r\n        errorParams.phoneNumber = response.phoneNumber;\r\n    }\r\n    const error = _createError(auth, code, errorParams);\r\n    // We know customData is defined on error because errorParams is defined\r\n    error.customData._tokenResponse = response;\r\n    return error;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteAccount(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:delete\" /* DELETE_ACCOUNT */, request);\r\n}\r\nasync function deleteLinkedAccounts(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:update\" /* SET_ACCOUNT_INFO */, request);\r\n}\r\nasync function getAccountInfo(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:lookup\" /* GET_ACCOUNT_INFO */, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction utcTimestampToDateString(utcTimestamp) {\r\n    if (!utcTimestamp) {\r\n        return undefined;\r\n    }\r\n    try {\r\n        // Convert to date object.\r\n        const date = new Date(Number(utcTimestamp));\r\n        // Test date is valid.\r\n        if (!isNaN(date.getTime())) {\r\n            // Convert to UTC date string.\r\n            return date.toUTCString();\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Do nothing. undefined will be returned.\r\n    }\r\n    return undefined;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\r\n *\r\n * @remarks\r\n * Returns the current token if it has not expired or if it will not expire in the next five\r\n * minutes. Otherwise, this will refresh the token and return a new one.\r\n *\r\n * @param user - The user.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nfunction getIdToken(user, forceRefresh = false) {\r\n    return getModularInstance(user).getIdToken(forceRefresh);\r\n}\r\n/**\r\n * Returns a deserialized JSON Web Token (JWT) used to identitfy the user to a Firebase service.\r\n *\r\n * @remarks\r\n * Returns the current token if it has not expired or if it will not expire in the next five\r\n * minutes. Otherwise, this will refresh the token and return a new one.\r\n *\r\n * @param user - The user.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nasync function getIdTokenResult(user, forceRefresh = false) {\r\n    const userInternal = getModularInstance(user);\r\n    const token = await userInternal.getIdToken(forceRefresh);\r\n    const claims = _parseToken(token);\r\n    _assert(claims && claims.exp && claims.auth_time && claims.iat, userInternal.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    const firebase = typeof claims.firebase === 'object' ? claims.firebase : undefined;\r\n    const signInProvider = firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_provider'];\r\n    return {\r\n        claims,\r\n        token,\r\n        authTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.auth_time)),\r\n        issuedAtTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.iat)),\r\n        expirationTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.exp)),\r\n        signInProvider: signInProvider || null,\r\n        signInSecondFactor: (firebase === null || firebase === void 0 ? void 0 : firebase['sign_in_second_factor']) || null\r\n    };\r\n}\r\nfunction secondsStringToMilliseconds(seconds) {\r\n    return Number(seconds) * 1000;\r\n}\r\nfunction _parseToken(token) {\r\n    const [algorithm, payload, signature] = token.split('.');\r\n    if (algorithm === undefined ||\r\n        payload === undefined ||\r\n        signature === undefined) {\r\n        _logError('JWT malformed, contained fewer than 3 sections');\r\n        return null;\r\n    }\r\n    try {\r\n        const decoded = base64Decode(payload);\r\n        if (!decoded) {\r\n            _logError('Failed to decode base64 JWT payload');\r\n            return null;\r\n        }\r\n        return JSON.parse(decoded);\r\n    }\r\n    catch (e) {\r\n        _logError('Caught error parsing JWT payload as JSON', e);\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\r\n */\r\nfunction _tokenExpiresIn(token) {\r\n    const parsedToken = _parseToken(token);\r\n    _assert(parsedToken, \"internal-error\" /* INTERNAL_ERROR */);\r\n    _assert(typeof parsedToken.exp !== 'undefined', \"internal-error\" /* INTERNAL_ERROR */);\r\n    _assert(typeof parsedToken.iat !== 'undefined', \"internal-error\" /* INTERNAL_ERROR */);\r\n    return Number(parsedToken.exp) - Number(parsedToken.iat);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _logoutIfInvalidated(user, promise, bypassAuthState = false) {\r\n    if (bypassAuthState) {\r\n        return promise;\r\n    }\r\n    try {\r\n        return await promise;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError && isUserInvalidated(e)) {\r\n            if (user.auth.currentUser === user) {\r\n                await user.auth.signOut();\r\n            }\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isUserInvalidated({ code }) {\r\n    return (code === `auth/${\"user-disabled\" /* USER_DISABLED */}` ||\r\n        code === `auth/${\"user-token-expired\" /* TOKEN_EXPIRED */}`);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ProactiveRefresh {\r\n    constructor(user) {\r\n        this.user = user;\r\n        this.isRunning = false;\r\n        // Node timers and browser timers return fundamentally different types.\r\n        // We don't actually care what the value is but TS won't accept unknown and\r\n        // we can't cast properly in both environments.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.timerId = null;\r\n        this.errorBackoff = 30000 /* RETRY_BACKOFF_MIN */;\r\n    }\r\n    _start() {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = true;\r\n        this.schedule();\r\n    }\r\n    _stop() {\r\n        if (!this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = false;\r\n        if (this.timerId !== null) {\r\n            clearTimeout(this.timerId);\r\n        }\r\n    }\r\n    getInterval(wasError) {\r\n        var _a;\r\n        if (wasError) {\r\n            const interval = this.errorBackoff;\r\n            this.errorBackoff = Math.min(this.errorBackoff * 2, 960000 /* RETRY_BACKOFF_MAX */);\r\n            return interval;\r\n        }\r\n        else {\r\n            // Reset the error backoff\r\n            this.errorBackoff = 30000 /* RETRY_BACKOFF_MIN */;\r\n            const expTime = (_a = this.user.stsTokenManager.expirationTime) !== null && _a !== void 0 ? _a : 0;\r\n            const interval = expTime - Date.now() - 300000 /* OFFSET */;\r\n            return Math.max(0, interval);\r\n        }\r\n    }\r\n    schedule(wasError = false) {\r\n        if (!this.isRunning) {\r\n            // Just in case...\r\n            return;\r\n        }\r\n        const interval = this.getInterval(wasError);\r\n        this.timerId = setTimeout(async () => {\r\n            await this.iteration();\r\n        }, interval);\r\n    }\r\n    async iteration() {\r\n        try {\r\n            await this.user.getIdToken(true);\r\n        }\r\n        catch (e) {\r\n            // Only retry on network errors\r\n            if (e.code === `auth/${\"network-request-failed\" /* NETWORK_REQUEST_FAILED */}`) {\r\n                this.schedule(/* wasError */ true);\r\n            }\r\n            return;\r\n        }\r\n        this.schedule();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass UserMetadata {\r\n    constructor(createdAt, lastLoginAt) {\r\n        this.createdAt = createdAt;\r\n        this.lastLoginAt = lastLoginAt;\r\n        this._initializeTime();\r\n    }\r\n    _initializeTime() {\r\n        this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\r\n        this.creationTime = utcTimestampToDateString(this.createdAt);\r\n    }\r\n    _copy(metadata) {\r\n        this.createdAt = metadata.createdAt;\r\n        this.lastLoginAt = metadata.lastLoginAt;\r\n        this._initializeTime();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            createdAt: this.createdAt,\r\n            lastLoginAt: this.lastLoginAt\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _reloadWithoutSaving(user) {\r\n    var _a;\r\n    const auth = user.auth;\r\n    const idToken = await user.getIdToken();\r\n    const response = await _logoutIfInvalidated(user, getAccountInfo(auth, { idToken }));\r\n    _assert(response === null || response === void 0 ? void 0 : response.users.length, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    const coreAccount = response.users[0];\r\n    user._notifyReloadListener(coreAccount);\r\n    const newProviderData = ((_a = coreAccount.providerUserInfo) === null || _a === void 0 ? void 0 : _a.length)\r\n        ? extractProviderData(coreAccount.providerUserInfo)\r\n        : [];\r\n    const providerData = mergeProviderData(user.providerData, newProviderData);\r\n    // Preserves the non-nonymous status of the stored user, even if no more\r\n    // credentials (federated or email/password) are linked to the user. If\r\n    // the user was previously anonymous, then use provider data to update.\r\n    // On the other hand, if it was not anonymous before, it should never be\r\n    // considered anonymous now.\r\n    const oldIsAnonymous = user.isAnonymous;\r\n    const newIsAnonymous = !(user.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);\r\n    const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\r\n    const updates = {\r\n        uid: coreAccount.localId,\r\n        displayName: coreAccount.displayName || null,\r\n        photoURL: coreAccount.photoUrl || null,\r\n        email: coreAccount.email || null,\r\n        emailVerified: coreAccount.emailVerified || false,\r\n        phoneNumber: coreAccount.phoneNumber || null,\r\n        tenantId: coreAccount.tenantId || null,\r\n        providerData,\r\n        metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\r\n        isAnonymous\r\n    };\r\n    Object.assign(user, updates);\r\n}\r\n/**\r\n * Reloads user account data, if signed in.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nasync function reload(user) {\r\n    const userInternal = getModularInstance(user);\r\n    await _reloadWithoutSaving(userInternal);\r\n    // Even though the current user hasn't changed, update\r\n    // current user will trigger a persistence update w/ the\r\n    // new info.\r\n    await userInternal.auth._persistUserIfCurrent(userInternal);\r\n    userInternal.auth._notifyListenersIfCurrent(userInternal);\r\n}\r\nfunction mergeProviderData(original, newData) {\r\n    const deduped = original.filter(o => !newData.some(n => n.providerId === o.providerId));\r\n    return [...deduped, ...newData];\r\n}\r\nfunction extractProviderData(providers) {\r\n    return providers.map((_a) => {\r\n        var { providerId } = _a, provider = __rest(_a, [\"providerId\"]);\r\n        return {\r\n            providerId,\r\n            uid: provider.rawId || '',\r\n            displayName: provider.displayName || null,\r\n            email: provider.email || null,\r\n            phoneNumber: provider.phoneNumber || null,\r\n            photoURL: provider.photoUrl || null\r\n        };\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function requestStsToken(auth, refreshToken) {\r\n    const response = await _performFetchWithErrorHandling(auth, {}, async () => {\r\n        const body = querystring({\r\n            'grant_type': 'refresh_token',\r\n            'refresh_token': refreshToken\r\n        }).slice(1);\r\n        const { tokenApiHost, apiKey } = auth.config;\r\n        const url = _getFinalTarget(auth, tokenApiHost, \"/v1/token\" /* TOKEN */, `key=${apiKey}`);\r\n        const headers = await auth._getAdditionalHeaders();\r\n        headers[\"Content-Type\" /* CONTENT_TYPE */] = 'application/x-www-form-urlencoded';\r\n        return FetchProvider.fetch()(url, {\r\n            method: \"POST\" /* POST */,\r\n            headers,\r\n            body\r\n        });\r\n    });\r\n    // The response comes back in snake_case. Convert to camel:\r\n    return {\r\n        accessToken: response.access_token,\r\n        expiresIn: response.expires_in,\r\n        refreshToken: response.refresh_token\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\r\n * it references AuthInternal which has a circular dependency with UserInternal.\r\n *\r\n * @internal\r\n */\r\nclass StsTokenManager {\r\n    constructor() {\r\n        this.refreshToken = null;\r\n        this.accessToken = null;\r\n        this.expirationTime = null;\r\n    }\r\n    get isExpired() {\r\n        return (!this.expirationTime ||\r\n            Date.now() > this.expirationTime - 30000 /* TOKEN_REFRESH */);\r\n    }\r\n    updateFromServerResponse(response) {\r\n        _assert(response.idToken, \"internal-error\" /* INTERNAL_ERROR */);\r\n        _assert(typeof response.idToken !== 'undefined', \"internal-error\" /* INTERNAL_ERROR */);\r\n        _assert(typeof response.refreshToken !== 'undefined', \"internal-error\" /* INTERNAL_ERROR */);\r\n        const expiresIn = 'expiresIn' in response && typeof response.expiresIn !== 'undefined'\r\n            ? Number(response.expiresIn)\r\n            : _tokenExpiresIn(response.idToken);\r\n        this.updateTokensAndExpiration(response.idToken, response.refreshToken, expiresIn);\r\n    }\r\n    async getToken(auth, forceRefresh = false) {\r\n        _assert(!this.accessToken || this.refreshToken, auth, \"user-token-expired\" /* TOKEN_EXPIRED */);\r\n        if (!forceRefresh && this.accessToken && !this.isExpired) {\r\n            return this.accessToken;\r\n        }\r\n        if (this.refreshToken) {\r\n            await this.refresh(auth, this.refreshToken);\r\n            return this.accessToken;\r\n        }\r\n        return null;\r\n    }\r\n    clearRefreshToken() {\r\n        this.refreshToken = null;\r\n    }\r\n    async refresh(auth, oldToken) {\r\n        const { accessToken, refreshToken, expiresIn } = await requestStsToken(auth, oldToken);\r\n        this.updateTokensAndExpiration(accessToken, refreshToken, Number(expiresIn));\r\n    }\r\n    updateTokensAndExpiration(accessToken, refreshToken, expiresInSec) {\r\n        this.refreshToken = refreshToken || null;\r\n        this.accessToken = accessToken || null;\r\n        this.expirationTime = Date.now() + expiresInSec * 1000;\r\n    }\r\n    static fromJSON(appName, object) {\r\n        const { refreshToken, accessToken, expirationTime } = object;\r\n        const manager = new StsTokenManager();\r\n        if (refreshToken) {\r\n            _assert(typeof refreshToken === 'string', \"internal-error\" /* INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.refreshToken = refreshToken;\r\n        }\r\n        if (accessToken) {\r\n            _assert(typeof accessToken === 'string', \"internal-error\" /* INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.accessToken = accessToken;\r\n        }\r\n        if (expirationTime) {\r\n            _assert(typeof expirationTime === 'number', \"internal-error\" /* INTERNAL_ERROR */, {\r\n                appName\r\n            });\r\n            manager.expirationTime = expirationTime;\r\n        }\r\n        return manager;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            refreshToken: this.refreshToken,\r\n            accessToken: this.accessToken,\r\n            expirationTime: this.expirationTime\r\n        };\r\n    }\r\n    _assign(stsTokenManager) {\r\n        this.accessToken = stsTokenManager.accessToken;\r\n        this.refreshToken = stsTokenManager.refreshToken;\r\n        this.expirationTime = stsTokenManager.expirationTime;\r\n    }\r\n    _clone() {\r\n        return Object.assign(new StsTokenManager(), this.toJSON());\r\n    }\r\n    _performRefresh() {\r\n        return debugFail('not implemented');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction assertStringOrUndefined(assertion, appName) {\r\n    _assert(typeof assertion === 'string' || typeof assertion === 'undefined', \"internal-error\" /* INTERNAL_ERROR */, { appName });\r\n}\r\nclass UserImpl {\r\n    constructor(_a) {\r\n        var { uid, auth, stsTokenManager } = _a, opt = __rest(_a, [\"uid\", \"auth\", \"stsTokenManager\"]);\r\n        // For the user object, provider is always Firebase.\r\n        this.providerId = \"firebase\" /* FIREBASE */;\r\n        this.proactiveRefresh = new ProactiveRefresh(this);\r\n        this.reloadUserInfo = null;\r\n        this.reloadListener = null;\r\n        this.uid = uid;\r\n        this.auth = auth;\r\n        this.stsTokenManager = stsTokenManager;\r\n        this.accessToken = stsTokenManager.accessToken;\r\n        this.displayName = opt.displayName || null;\r\n        this.email = opt.email || null;\r\n        this.emailVerified = opt.emailVerified || false;\r\n        this.phoneNumber = opt.phoneNumber || null;\r\n        this.photoURL = opt.photoURL || null;\r\n        this.isAnonymous = opt.isAnonymous || false;\r\n        this.tenantId = opt.tenantId || null;\r\n        this.providerData = opt.providerData ? [...opt.providerData] : [];\r\n        this.metadata = new UserMetadata(opt.createdAt || undefined, opt.lastLoginAt || undefined);\r\n    }\r\n    async getIdToken(forceRefresh) {\r\n        const accessToken = await _logoutIfInvalidated(this, this.stsTokenManager.getToken(this.auth, forceRefresh));\r\n        _assert(accessToken, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        if (this.accessToken !== accessToken) {\r\n            this.accessToken = accessToken;\r\n            await this.auth._persistUserIfCurrent(this);\r\n            this.auth._notifyListenersIfCurrent(this);\r\n        }\r\n        return accessToken;\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return getIdTokenResult(this, forceRefresh);\r\n    }\r\n    reload() {\r\n        return reload(this);\r\n    }\r\n    _assign(user) {\r\n        if (this === user) {\r\n            return;\r\n        }\r\n        _assert(this.uid === user.uid, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        this.displayName = user.displayName;\r\n        this.photoURL = user.photoURL;\r\n        this.email = user.email;\r\n        this.emailVerified = user.emailVerified;\r\n        this.phoneNumber = user.phoneNumber;\r\n        this.isAnonymous = user.isAnonymous;\r\n        this.tenantId = user.tenantId;\r\n        this.providerData = user.providerData.map(userInfo => (Object.assign({}, userInfo)));\r\n        this.metadata._copy(user.metadata);\r\n        this.stsTokenManager._assign(user.stsTokenManager);\r\n    }\r\n    _clone(auth) {\r\n        return new UserImpl(Object.assign(Object.assign({}, this), { auth, stsTokenManager: this.stsTokenManager._clone() }));\r\n    }\r\n    _onReload(callback) {\r\n        // There should only ever be one listener, and that is a single instance of MultiFactorUser\r\n        _assert(!this.reloadListener, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        this.reloadListener = callback;\r\n        if (this.reloadUserInfo) {\r\n            this._notifyReloadListener(this.reloadUserInfo);\r\n            this.reloadUserInfo = null;\r\n        }\r\n    }\r\n    _notifyReloadListener(userInfo) {\r\n        if (this.reloadListener) {\r\n            this.reloadListener(userInfo);\r\n        }\r\n        else {\r\n            // If no listener is subscribed yet, save the result so it's available when they do subscribe\r\n            this.reloadUserInfo = userInfo;\r\n        }\r\n    }\r\n    _startProactiveRefresh() {\r\n        this.proactiveRefresh._start();\r\n    }\r\n    _stopProactiveRefresh() {\r\n        this.proactiveRefresh._stop();\r\n    }\r\n    async _updateTokensIfNecessary(response, reload = false) {\r\n        let tokensRefreshed = false;\r\n        if (response.idToken &&\r\n            response.idToken !== this.stsTokenManager.accessToken) {\r\n            this.stsTokenManager.updateFromServerResponse(response);\r\n            tokensRefreshed = true;\r\n        }\r\n        if (reload) {\r\n            await _reloadWithoutSaving(this);\r\n        }\r\n        await this.auth._persistUserIfCurrent(this);\r\n        if (tokensRefreshed) {\r\n            this.auth._notifyListenersIfCurrent(this);\r\n        }\r\n    }\r\n    async delete() {\r\n        const idToken = await this.getIdToken();\r\n        await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\r\n        this.stsTokenManager.clearRefreshToken();\r\n        // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\r\n        //       cancels pending actions...\r\n        return this.auth.signOut();\r\n    }\r\n    toJSON() {\r\n        return Object.assign(Object.assign({ uid: this.uid, email: this.email || undefined, emailVerified: this.emailVerified, displayName: this.displayName || undefined, isAnonymous: this.isAnonymous, photoURL: this.photoURL || undefined, phoneNumber: this.phoneNumber || undefined, tenantId: this.tenantId || undefined, providerData: this.providerData.map(userInfo => (Object.assign({}, userInfo))), stsTokenManager: this.stsTokenManager.toJSON(), \r\n            // Redirect event ID must be maintained in case there is a pending\r\n            // redirect event.\r\n            _redirectEventId: this._redirectEventId }, this.metadata.toJSON()), { \r\n            // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\r\n            apiKey: this.auth.config.apiKey, appName: this.auth.name });\r\n    }\r\n    get refreshToken() {\r\n        return this.stsTokenManager.refreshToken || '';\r\n    }\r\n    static _fromJSON(auth, object) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h;\r\n        const displayName = (_a = object.displayName) !== null && _a !== void 0 ? _a : undefined;\r\n        const email = (_b = object.email) !== null && _b !== void 0 ? _b : undefined;\r\n        const phoneNumber = (_c = object.phoneNumber) !== null && _c !== void 0 ? _c : undefined;\r\n        const photoURL = (_d = object.photoURL) !== null && _d !== void 0 ? _d : undefined;\r\n        const tenantId = (_e = object.tenantId) !== null && _e !== void 0 ? _e : undefined;\r\n        const _redirectEventId = (_f = object._redirectEventId) !== null && _f !== void 0 ? _f : undefined;\r\n        const createdAt = (_g = object.createdAt) !== null && _g !== void 0 ? _g : undefined;\r\n        const lastLoginAt = (_h = object.lastLoginAt) !== null && _h !== void 0 ? _h : undefined;\r\n        const { uid, emailVerified, isAnonymous, providerData, stsTokenManager: plainObjectTokenManager } = object;\r\n        _assert(uid && plainObjectTokenManager, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        const stsTokenManager = StsTokenManager.fromJSON(this.name, plainObjectTokenManager);\r\n        _assert(typeof uid === 'string', auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        assertStringOrUndefined(displayName, auth.name);\r\n        assertStringOrUndefined(email, auth.name);\r\n        _assert(typeof emailVerified === 'boolean', auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        _assert(typeof isAnonymous === 'boolean', auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        assertStringOrUndefined(phoneNumber, auth.name);\r\n        assertStringOrUndefined(photoURL, auth.name);\r\n        assertStringOrUndefined(tenantId, auth.name);\r\n        assertStringOrUndefined(_redirectEventId, auth.name);\r\n        assertStringOrUndefined(createdAt, auth.name);\r\n        assertStringOrUndefined(lastLoginAt, auth.name);\r\n        const user = new UserImpl({\r\n            uid,\r\n            auth,\r\n            email,\r\n            emailVerified,\r\n            displayName,\r\n            isAnonymous,\r\n            photoURL,\r\n            phoneNumber,\r\n            tenantId,\r\n            stsTokenManager,\r\n            createdAt,\r\n            lastLoginAt\r\n        });\r\n        if (providerData && Array.isArray(providerData)) {\r\n            user.providerData = providerData.map(userInfo => (Object.assign({}, userInfo)));\r\n        }\r\n        if (_redirectEventId) {\r\n            user._redirectEventId = _redirectEventId;\r\n        }\r\n        return user;\r\n    }\r\n    /**\r\n     * Initialize a User from an idToken server response\r\n     * @param auth\r\n     * @param idTokenResponse\r\n     */\r\n    static async _fromIdTokenResponse(auth, idTokenResponse, isAnonymous = false) {\r\n        const stsTokenManager = new StsTokenManager();\r\n        stsTokenManager.updateFromServerResponse(idTokenResponse);\r\n        // Initialize the Firebase Auth user.\r\n        const user = new UserImpl({\r\n            uid: idTokenResponse.localId,\r\n            auth,\r\n            stsTokenManager,\r\n            isAnonymous\r\n        });\r\n        // Updates the user info and data and resolves with a user instance.\r\n        await _reloadWithoutSaving(user);\r\n        return user;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass InMemoryPersistence {\r\n    constructor() {\r\n        this.type = \"NONE\" /* NONE */;\r\n        this.storage = {};\r\n    }\r\n    async _isAvailable() {\r\n        return true;\r\n    }\r\n    async _set(key, value) {\r\n        this.storage[key] = value;\r\n    }\r\n    async _get(key) {\r\n        const value = this.storage[key];\r\n        return value === undefined ? null : value;\r\n    }\r\n    async _remove(key) {\r\n        delete this.storage[key];\r\n    }\r\n    _addListener(_key, _listener) {\r\n        // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\r\n        return;\r\n    }\r\n    _removeListener(_key, _listener) {\r\n        // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\r\n        return;\r\n    }\r\n}\r\nInMemoryPersistence.type = 'NONE';\r\n/**\r\n * An implementation of {@link Persistence} of type 'NONE'.\r\n *\r\n * @public\r\n */\r\nconst inMemoryPersistence = InMemoryPersistence;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _persistenceKeyName(key, apiKey, appName) {\r\n    return `${\"firebase\" /* PERSISTENCE */}:${key}:${apiKey}:${appName}`;\r\n}\r\nclass PersistenceUserManager {\r\n    constructor(persistence, auth, userKey) {\r\n        this.persistence = persistence;\r\n        this.auth = auth;\r\n        this.userKey = userKey;\r\n        const { config, name } = this.auth;\r\n        this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\r\n        this.fullPersistenceKey = _persistenceKeyName(\"persistence\" /* PERSISTENCE_USER */, config.apiKey, name);\r\n        this.boundEventHandler = auth._onStorageEvent.bind(auth);\r\n        this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\r\n    }\r\n    setCurrentUser(user) {\r\n        return this.persistence._set(this.fullUserKey, user.toJSON());\r\n    }\r\n    async getCurrentUser() {\r\n        const blob = await this.persistence._get(this.fullUserKey);\r\n        return blob ? UserImpl._fromJSON(this.auth, blob) : null;\r\n    }\r\n    removeCurrentUser() {\r\n        return this.persistence._remove(this.fullUserKey);\r\n    }\r\n    savePersistenceForRedirect() {\r\n        return this.persistence._set(this.fullPersistenceKey, this.persistence.type);\r\n    }\r\n    async setPersistence(newPersistence) {\r\n        if (this.persistence === newPersistence) {\r\n            return;\r\n        }\r\n        const currentUser = await this.getCurrentUser();\r\n        await this.removeCurrentUser();\r\n        this.persistence = newPersistence;\r\n        if (currentUser) {\r\n            return this.setCurrentUser(currentUser);\r\n        }\r\n    }\r\n    delete() {\r\n        this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\r\n    }\r\n    static async create(auth, persistenceHierarchy, userKey = \"authUser\" /* AUTH_USER */) {\r\n        if (!persistenceHierarchy.length) {\r\n            return new PersistenceUserManager(_getInstance(inMemoryPersistence), auth, userKey);\r\n        }\r\n        // Eliminate any persistences that are not available\r\n        const availablePersistences = (await Promise.all(persistenceHierarchy.map(async (persistence) => {\r\n            if (await persistence._isAvailable()) {\r\n                return persistence;\r\n            }\r\n            return undefined;\r\n        }))).filter(persistence => persistence);\r\n        // Fall back to the first persistence listed, or in memory if none available\r\n        let selectedPersistence = availablePersistences[0] ||\r\n            _getInstance(inMemoryPersistence);\r\n        const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\r\n        // Pull out the existing user, setting the chosen persistence to that\r\n        // persistence if the user exists.\r\n        let userToMigrate = null;\r\n        // Note, here we check for a user in _all_ persistences, not just the\r\n        // ones deemed available. If we can migrate a user out of a broken\r\n        // persistence, we will (but only if that persistence supports migration).\r\n        for (const persistence of persistenceHierarchy) {\r\n            try {\r\n                const blob = await persistence._get(key);\r\n                if (blob) {\r\n                    const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\r\n                    if (persistence !== selectedPersistence) {\r\n                        userToMigrate = user;\r\n                    }\r\n                    selectedPersistence = persistence;\r\n                    break;\r\n                }\r\n            }\r\n            catch (_a) { }\r\n        }\r\n        // If we find the user in a persistence that does support migration, use\r\n        // that migration path (of only persistences that support migration)\r\n        const migrationHierarchy = availablePersistences.filter(p => p._shouldAllowMigration);\r\n        // If the persistence does _not_ allow migration, just finish off here\r\n        if (!selectedPersistence._shouldAllowMigration ||\r\n            !migrationHierarchy.length) {\r\n            return new PersistenceUserManager(selectedPersistence, auth, userKey);\r\n        }\r\n        selectedPersistence = migrationHierarchy[0];\r\n        if (userToMigrate) {\r\n            // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\r\n            // we'll just let it bubble to surface the error.\r\n            await selectedPersistence._set(key, userToMigrate.toJSON());\r\n        }\r\n        // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\r\n        // such as users getting stuck with a previous account after signing out and refreshing the tab.\r\n        await Promise.all(persistenceHierarchy.map(async (persistence) => {\r\n            if (persistence !== selectedPersistence) {\r\n                try {\r\n                    await persistence._remove(key);\r\n                }\r\n                catch (_a) { }\r\n            }\r\n        }));\r\n        return new PersistenceUserManager(selectedPersistence, auth, userKey);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Determine the browser for the purposes of reporting usage to the API\r\n */\r\nfunction _getBrowserName(userAgent) {\r\n    const ua = userAgent.toLowerCase();\r\n    if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\r\n        return \"Opera\" /* OPERA */;\r\n    }\r\n    else if (_isIEMobile(ua)) {\r\n        // Windows phone IEMobile browser.\r\n        return \"IEMobile\" /* IEMOBILE */;\r\n    }\r\n    else if (ua.includes('msie') || ua.includes('trident/')) {\r\n        return \"IE\" /* IE */;\r\n    }\r\n    else if (ua.includes('edge/')) {\r\n        return \"Edge\" /* EDGE */;\r\n    }\r\n    else if (_isFirefox(ua)) {\r\n        return \"Firefox\" /* FIREFOX */;\r\n    }\r\n    else if (ua.includes('silk/')) {\r\n        return \"Silk\" /* SILK */;\r\n    }\r\n    else if (_isBlackBerry(ua)) {\r\n        // Blackberry browser.\r\n        return \"Blackberry\" /* BLACKBERRY */;\r\n    }\r\n    else if (_isWebOS(ua)) {\r\n        // WebOS default browser.\r\n        return \"Webos\" /* WEBOS */;\r\n    }\r\n    else if (_isSafari(ua)) {\r\n        return \"Safari\" /* SAFARI */;\r\n    }\r\n    else if ((ua.includes('chrome/') || _isChromeIOS(ua)) &&\r\n        !ua.includes('edge/')) {\r\n        return \"Chrome\" /* CHROME */;\r\n    }\r\n    else if (_isAndroid(ua)) {\r\n        // Android stock browser.\r\n        return \"Android\" /* ANDROID */;\r\n    }\r\n    else {\r\n        // Most modern browsers have name/version at end of user agent string.\r\n        const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\r\n        const matches = userAgent.match(re);\r\n        if ((matches === null || matches === void 0 ? void 0 : matches.length) === 2) {\r\n            return matches[1];\r\n        }\r\n    }\r\n    return \"Other\" /* OTHER */;\r\n}\r\nfunction _isFirefox(ua = getUA()) {\r\n    return /firefox\\//i.test(ua);\r\n}\r\nfunction _isSafari(userAgent = getUA()) {\r\n    const ua = userAgent.toLowerCase();\r\n    return (ua.includes('safari/') &&\r\n        !ua.includes('chrome/') &&\r\n        !ua.includes('crios/') &&\r\n        !ua.includes('android'));\r\n}\r\nfunction _isChromeIOS(ua = getUA()) {\r\n    return /crios\\//i.test(ua);\r\n}\r\nfunction _isIEMobile(ua = getUA()) {\r\n    return /iemobile/i.test(ua);\r\n}\r\nfunction _isAndroid(ua = getUA()) {\r\n    return /android/i.test(ua);\r\n}\r\nfunction _isBlackBerry(ua = getUA()) {\r\n    return /blackberry/i.test(ua);\r\n}\r\nfunction _isWebOS(ua = getUA()) {\r\n    return /webos/i.test(ua);\r\n}\r\nfunction _isIOS(ua = getUA()) {\r\n    return /iphone|ipad|ipod/i.test(ua);\r\n}\r\nfunction _isIOS7Or8(ua = getUA()) {\r\n    return (/(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\r\n        /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua));\r\n}\r\nfunction _isIOSStandalone(ua = getUA()) {\r\n    var _a;\r\n    return _isIOS(ua) && !!((_a = window.navigator) === null || _a === void 0 ? void 0 : _a.standalone);\r\n}\r\nfunction _isIE10() {\r\n    return isIE() && document.documentMode === 10;\r\n}\r\nfunction _isMobileBrowser(ua = getUA()) {\r\n    // TODO: implement getBrowserName equivalent for OS.\r\n    return (_isIOS(ua) ||\r\n        _isAndroid(ua) ||\r\n        _isWebOS(ua) ||\r\n        _isBlackBerry(ua) ||\r\n        /windows phone/i.test(ua) ||\r\n        _isIEMobile(ua));\r\n}\r\nfunction _isIframe() {\r\n    try {\r\n        // Check that the current window is not the top window.\r\n        // If so, return true.\r\n        return !!(window && window !== window.top);\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/*\r\n * Determine the SDK version string\r\n */\r\nfunction _getClientVersion(clientPlatform, frameworks = []) {\r\n    let reportedPlatform;\r\n    switch (clientPlatform) {\r\n        case \"Browser\" /* BROWSER */:\r\n            // In a browser environment, report the browser name.\r\n            reportedPlatform = _getBrowserName(getUA());\r\n            break;\r\n        case \"Worker\" /* WORKER */:\r\n            // Technically a worker runs from a browser but we need to differentiate a\r\n            // worker from a browser.\r\n            // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\r\n            reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\r\n            break;\r\n        default:\r\n            reportedPlatform = clientPlatform;\r\n    }\r\n    const reportedFrameworks = frameworks.length\r\n        ? frameworks.join(',')\r\n        : 'FirebaseCore-web'; /* default value if no other framework is used */\r\n    return `${reportedPlatform}/${\"JsCore\" /* CORE */}/${SDK_VERSION}/${reportedFrameworks}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AuthMiddlewareQueue {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.queue = [];\r\n    }\r\n    pushCallback(callback, onAbort) {\r\n        // The callback could be sync or async. Wrap it into a\r\n        // function that is always async.\r\n        const wrappedCallback = (user) => new Promise((resolve, reject) => {\r\n            try {\r\n                const result = callback(user);\r\n                // Either resolve with existing promise or wrap a non-promise\r\n                // return value into a promise.\r\n                resolve(result);\r\n            }\r\n            catch (e) {\r\n                // Sync callback throws.\r\n                reject(e);\r\n            }\r\n        });\r\n        // Attach the onAbort if present\r\n        wrappedCallback.onAbort = onAbort;\r\n        this.queue.push(wrappedCallback);\r\n        const index = this.queue.length - 1;\r\n        return () => {\r\n            // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\r\n            // indexing of other elements.\r\n            this.queue[index] = () => Promise.resolve();\r\n        };\r\n    }\r\n    async runMiddleware(nextUser) {\r\n        if (this.auth.currentUser === nextUser) {\r\n            return;\r\n        }\r\n        // While running the middleware, build a temporary stack of onAbort\r\n        // callbacks to call if one middleware callback rejects.\r\n        const onAbortStack = [];\r\n        try {\r\n            for (const beforeStateCallback of this.queue) {\r\n                await beforeStateCallback(nextUser);\r\n                // Only push the onAbort if the callback succeeds\r\n                if (beforeStateCallback.onAbort) {\r\n                    onAbortStack.push(beforeStateCallback.onAbort);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Run all onAbort, with separate try/catch to ignore any errors and\r\n            // continue\r\n            onAbortStack.reverse();\r\n            for (const onAbort of onAbortStack) {\r\n                try {\r\n                    onAbort();\r\n                }\r\n                catch (_) { /* swallow error */ }\r\n            }\r\n            throw this.auth._errorFactory.create(\"login-blocked\" /* LOGIN_BLOCKED */, { originalMessage: e.message });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AuthImpl {\r\n    constructor(app, heartbeatServiceProvider, config) {\r\n        this.app = app;\r\n        this.heartbeatServiceProvider = heartbeatServiceProvider;\r\n        this.config = config;\r\n        this.currentUser = null;\r\n        this.emulatorConfig = null;\r\n        this.operations = Promise.resolve();\r\n        this.authStateSubscription = new Subscription(this);\r\n        this.idTokenSubscription = new Subscription(this);\r\n        this.beforeStateQueue = new AuthMiddlewareQueue(this);\r\n        this.redirectUser = null;\r\n        this.isProactiveRefreshEnabled = false;\r\n        // Any network calls will set this to true and prevent subsequent emulator\r\n        // initialization\r\n        this._canInitEmulator = true;\r\n        this._isInitialized = false;\r\n        this._deleted = false;\r\n        this._initializationPromise = null;\r\n        this._popupRedirectResolver = null;\r\n        this._errorFactory = _DEFAULT_AUTH_ERROR_FACTORY;\r\n        // Tracks the last notified UID for state change listeners to prevent\r\n        // repeated calls to the callbacks. Undefined means it's never been\r\n        // called, whereas null means it's been called with a signed out user\r\n        this.lastNotifiedUid = undefined;\r\n        this.languageCode = null;\r\n        this.tenantId = null;\r\n        this.settings = { appVerificationDisabledForTesting: false };\r\n        this.frameworks = [];\r\n        this.name = app.name;\r\n        this.clientVersion = config.sdkClientVersion;\r\n    }\r\n    _initializeWithPersistence(persistenceHierarchy, popupRedirectResolver) {\r\n        if (popupRedirectResolver) {\r\n            this._popupRedirectResolver = _getInstance(popupRedirectResolver);\r\n        }\r\n        // Have to check for app deletion throughout initialization (after each\r\n        // promise resolution)\r\n        this._initializationPromise = this.queue(async () => {\r\n            var _a, _b;\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            this.persistenceManager = await PersistenceUserManager.create(this, persistenceHierarchy);\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            // Initialize the resolver early if necessary (only applicable to web:\r\n            // this will cause the iframe to load immediately in certain cases)\r\n            if ((_a = this._popupRedirectResolver) === null || _a === void 0 ? void 0 : _a._shouldInitProactively) {\r\n                // If this fails, don't halt auth loading\r\n                try {\r\n                    await this._popupRedirectResolver._initialize(this);\r\n                }\r\n                catch (e) { /* Ignore the error */ }\r\n            }\r\n            await this.initializeCurrentUser(popupRedirectResolver);\r\n            this.lastNotifiedUid = ((_b = this.currentUser) === null || _b === void 0 ? void 0 : _b.uid) || null;\r\n            if (this._deleted) {\r\n                return;\r\n            }\r\n            this._isInitialized = true;\r\n        });\r\n        return this._initializationPromise;\r\n    }\r\n    /**\r\n     * If the persistence is changed in another window, the user manager will let us know\r\n     */\r\n    async _onStorageEvent() {\r\n        if (this._deleted) {\r\n            return;\r\n        }\r\n        const user = await this.assertedPersistence.getCurrentUser();\r\n        if (!this.currentUser && !user) {\r\n            // No change, do nothing (was signed out and remained signed out).\r\n            return;\r\n        }\r\n        // If the same user is to be synchronized.\r\n        if (this.currentUser && user && this.currentUser.uid === user.uid) {\r\n            // Data update, simply copy data changes.\r\n            this._currentUser._assign(user);\r\n            // If tokens changed from previous user tokens, this will trigger\r\n            // notifyAuthListeners_.\r\n            await this.currentUser.getIdToken();\r\n            return;\r\n        }\r\n        // Update current Auth state. Either a new login or logout.\r\n        // Skip blocking callbacks, they should not apply to a change in another tab.\r\n        await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\r\n    }\r\n    async initializeCurrentUser(popupRedirectResolver) {\r\n        var _a;\r\n        // First check to see if we have a pending redirect event.\r\n        const previouslyStoredUser = (await this.assertedPersistence.getCurrentUser());\r\n        let futureCurrentUser = previouslyStoredUser;\r\n        let needsTocheckMiddleware = false;\r\n        if (popupRedirectResolver && this.config.authDomain) {\r\n            await this.getOrInitRedirectPersistenceManager();\r\n            const redirectUserEventId = (_a = this.redirectUser) === null || _a === void 0 ? void 0 : _a._redirectEventId;\r\n            const storedUserEventId = futureCurrentUser === null || futureCurrentUser === void 0 ? void 0 : futureCurrentUser._redirectEventId;\r\n            const result = await this.tryRedirectSignIn(popupRedirectResolver);\r\n            // If the stored user (i.e. the old \"currentUser\") has a redirectId that\r\n            // matches the redirect user, then we want to initially sign in with the\r\n            // new user object from result.\r\n            // TODO(samgho): More thoroughly test all of this\r\n            if ((!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\r\n                (result === null || result === void 0 ? void 0 : result.user)) {\r\n                futureCurrentUser = result.user;\r\n                needsTocheckMiddleware = true;\r\n            }\r\n        }\r\n        // If no user in persistence, there is no current user. Set to null.\r\n        if (!futureCurrentUser) {\r\n            return this.directlySetCurrentUser(null);\r\n        }\r\n        if (!futureCurrentUser._redirectEventId) {\r\n            // This isn't a redirect link operation, we can reload and bail.\r\n            // First though, ensure that we check the middleware is happy.\r\n            if (needsTocheckMiddleware) {\r\n                try {\r\n                    await this.beforeStateQueue.runMiddleware(futureCurrentUser);\r\n                }\r\n                catch (e) {\r\n                    futureCurrentUser = previouslyStoredUser;\r\n                    // We know this is available since the bit is only set when the\r\n                    // resolver is available\r\n                    this._popupRedirectResolver._overrideRedirectResult(this, () => Promise.reject(e));\r\n                }\r\n            }\r\n            if (futureCurrentUser) {\r\n                return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\r\n            }\r\n            else {\r\n                return this.directlySetCurrentUser(null);\r\n            }\r\n        }\r\n        _assert(this._popupRedirectResolver, this, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        await this.getOrInitRedirectPersistenceManager();\r\n        // If the redirect user's event ID matches the current user's event ID,\r\n        // DO NOT reload the current user, otherwise they'll be cleared from storage.\r\n        // This is important for the reauthenticateWithRedirect() flow.\r\n        if (this.redirectUser &&\r\n            this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId) {\r\n            return this.directlySetCurrentUser(futureCurrentUser);\r\n        }\r\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\r\n    }\r\n    async tryRedirectSignIn(redirectResolver) {\r\n        // The redirect user needs to be checked (and signed in if available)\r\n        // during auth initialization. All of the normal sign in and link/reauth\r\n        // flows call back into auth and push things onto the promise queue. We\r\n        // need to await the result of the redirect sign in *inside the promise\r\n        // queue*. This presents a problem: we run into deadlock. See:\r\n        //    ┌> [Initialization] ─────┐\r\n        //    ┌> [<other queue tasks>] │\r\n        //    └─ [getRedirectResult] <─┘\r\n        //    where [] are tasks on the queue and arrows denote awaits\r\n        // Initialization will never complete because it's waiting on something\r\n        // that's waiting for initialization to complete!\r\n        //\r\n        // Instead, this method calls getRedirectResult() (stored in\r\n        // _completeRedirectFn) with an optional parameter that instructs all of\r\n        // the underlying auth operations to skip anything that mutates auth state.\r\n        let result = null;\r\n        try {\r\n            // We know this._popupRedirectResolver is set since redirectResolver\r\n            // is passed in. The _completeRedirectFn expects the unwrapped extern.\r\n            result = await this._popupRedirectResolver._completeRedirectFn(this, redirectResolver, true);\r\n        }\r\n        catch (e) {\r\n            // Swallow any errors here; the code can retrieve them in\r\n            // getRedirectResult().\r\n            await this._setRedirectUser(null);\r\n        }\r\n        return result;\r\n    }\r\n    async reloadAndSetCurrentUserOrClear(user) {\r\n        try {\r\n            await _reloadWithoutSaving(user);\r\n        }\r\n        catch (e) {\r\n            if (e.code !== `auth/${\"network-request-failed\" /* NETWORK_REQUEST_FAILED */}`) {\r\n                // Something's wrong with the user's token. Log them out and remove\r\n                // them from storage\r\n                return this.directlySetCurrentUser(null);\r\n            }\r\n        }\r\n        return this.directlySetCurrentUser(user);\r\n    }\r\n    useDeviceLanguage() {\r\n        this.languageCode = _getUserLanguage();\r\n    }\r\n    async _delete() {\r\n        this._deleted = true;\r\n    }\r\n    async updateCurrentUser(userExtern) {\r\n        // The public updateCurrentUser method needs to make a copy of the user,\r\n        // and also check that the project matches\r\n        const user = userExtern\r\n            ? getModularInstance(userExtern)\r\n            : null;\r\n        if (user) {\r\n            _assert(user.auth.config.apiKey === this.config.apiKey, this, \"invalid-user-token\" /* INVALID_AUTH */);\r\n        }\r\n        return this._updateCurrentUser(user && user._clone(this));\r\n    }\r\n    async _updateCurrentUser(user, skipBeforeStateCallbacks = false) {\r\n        if (this._deleted) {\r\n            return;\r\n        }\r\n        if (user) {\r\n            _assert(this.tenantId === user.tenantId, this, \"tenant-id-mismatch\" /* TENANT_ID_MISMATCH */);\r\n        }\r\n        if (!skipBeforeStateCallbacks) {\r\n            await this.beforeStateQueue.runMiddleware(user);\r\n        }\r\n        return this.queue(async () => {\r\n            await this.directlySetCurrentUser(user);\r\n            this.notifyAuthListeners();\r\n        });\r\n    }\r\n    async signOut() {\r\n        // Run first, to block _setRedirectUser() if any callbacks fail.\r\n        await this.beforeStateQueue.runMiddleware(null);\r\n        // Clear the redirect user when signOut is called\r\n        if (this.redirectPersistenceManager || this._popupRedirectResolver) {\r\n            await this._setRedirectUser(null);\r\n        }\r\n        // Prevent callbacks from being called again in _updateCurrentUser, as\r\n        // they were already called in the first line.\r\n        return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\r\n    }\r\n    setPersistence(persistence) {\r\n        return this.queue(async () => {\r\n            await this.assertedPersistence.setPersistence(_getInstance(persistence));\r\n        });\r\n    }\r\n    _getPersistence() {\r\n        return this.assertedPersistence.persistence.type;\r\n    }\r\n    _updateErrorMap(errorMap) {\r\n        this._errorFactory = new ErrorFactory('auth', 'Firebase', errorMap());\r\n    }\r\n    onAuthStateChanged(nextOrObserver, error, completed) {\r\n        return this.registerStateListener(this.authStateSubscription, nextOrObserver, error, completed);\r\n    }\r\n    beforeAuthStateChanged(callback, onAbort) {\r\n        return this.beforeStateQueue.pushCallback(callback, onAbort);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, error, completed) {\r\n        return this.registerStateListener(this.idTokenSubscription, nextOrObserver, error, completed);\r\n    }\r\n    toJSON() {\r\n        var _a;\r\n        return {\r\n            apiKey: this.config.apiKey,\r\n            authDomain: this.config.authDomain,\r\n            appName: this.name,\r\n            currentUser: (_a = this._currentUser) === null || _a === void 0 ? void 0 : _a.toJSON()\r\n        };\r\n    }\r\n    async _setRedirectUser(user, popupRedirectResolver) {\r\n        const redirectManager = await this.getOrInitRedirectPersistenceManager(popupRedirectResolver);\r\n        return user === null\r\n            ? redirectManager.removeCurrentUser()\r\n            : redirectManager.setCurrentUser(user);\r\n    }\r\n    async getOrInitRedirectPersistenceManager(popupRedirectResolver) {\r\n        if (!this.redirectPersistenceManager) {\r\n            const resolver = (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\r\n                this._popupRedirectResolver;\r\n            _assert(resolver, this, \"argument-error\" /* ARGUMENT_ERROR */);\r\n            this.redirectPersistenceManager = await PersistenceUserManager.create(this, [_getInstance(resolver._redirectPersistence)], \"redirectUser\" /* REDIRECT_USER */);\r\n            this.redirectUser =\r\n                await this.redirectPersistenceManager.getCurrentUser();\r\n        }\r\n        return this.redirectPersistenceManager;\r\n    }\r\n    async _redirectUserForId(id) {\r\n        var _a, _b;\r\n        // Make sure we've cleared any pending persistence actions if we're not in\r\n        // the initializer\r\n        if (this._isInitialized) {\r\n            await this.queue(async () => { });\r\n        }\r\n        if (((_a = this._currentUser) === null || _a === void 0 ? void 0 : _a._redirectEventId) === id) {\r\n            return this._currentUser;\r\n        }\r\n        if (((_b = this.redirectUser) === null || _b === void 0 ? void 0 : _b._redirectEventId) === id) {\r\n            return this.redirectUser;\r\n        }\r\n        return null;\r\n    }\r\n    async _persistUserIfCurrent(user) {\r\n        if (user === this.currentUser) {\r\n            return this.queue(async () => this.directlySetCurrentUser(user));\r\n        }\r\n    }\r\n    /** Notifies listeners only if the user is current */\r\n    _notifyListenersIfCurrent(user) {\r\n        if (user === this.currentUser) {\r\n            this.notifyAuthListeners();\r\n        }\r\n    }\r\n    _key() {\r\n        return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\r\n    }\r\n    _startProactiveRefresh() {\r\n        this.isProactiveRefreshEnabled = true;\r\n        if (this.currentUser) {\r\n            this._currentUser._startProactiveRefresh();\r\n        }\r\n    }\r\n    _stopProactiveRefresh() {\r\n        this.isProactiveRefreshEnabled = false;\r\n        if (this.currentUser) {\r\n            this._currentUser._stopProactiveRefresh();\r\n        }\r\n    }\r\n    /** Returns the current user cast as the internal type */\r\n    get _currentUser() {\r\n        return this.currentUser;\r\n    }\r\n    notifyAuthListeners() {\r\n        var _a, _b;\r\n        if (!this._isInitialized) {\r\n            return;\r\n        }\r\n        this.idTokenSubscription.next(this.currentUser);\r\n        const currentUid = (_b = (_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : null;\r\n        if (this.lastNotifiedUid !== currentUid) {\r\n            this.lastNotifiedUid = currentUid;\r\n            this.authStateSubscription.next(this.currentUser);\r\n        }\r\n    }\r\n    registerStateListener(subscription, nextOrObserver, error, completed) {\r\n        if (this._deleted) {\r\n            return () => { };\r\n        }\r\n        const cb = typeof nextOrObserver === 'function'\r\n            ? nextOrObserver\r\n            : nextOrObserver.next.bind(nextOrObserver);\r\n        const promise = this._isInitialized\r\n            ? Promise.resolve()\r\n            : this._initializationPromise;\r\n        _assert(promise, this, \"internal-error\" /* INTERNAL_ERROR */);\r\n        // The callback needs to be called asynchronously per the spec.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        promise.then(() => cb(this.currentUser));\r\n        if (typeof nextOrObserver === 'function') {\r\n            return subscription.addObserver(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return subscription.addObserver(nextOrObserver);\r\n        }\r\n    }\r\n    /**\r\n     * Unprotected (from race conditions) method to set the current user. This\r\n     * should only be called from within a queued callback. This is necessary\r\n     * because the queue shouldn't rely on another queued callback.\r\n     */\r\n    async directlySetCurrentUser(user) {\r\n        if (this.currentUser && this.currentUser !== user) {\r\n            this._currentUser._stopProactiveRefresh();\r\n            if (user && this.isProactiveRefreshEnabled) {\r\n                user._startProactiveRefresh();\r\n            }\r\n        }\r\n        this.currentUser = user;\r\n        if (user) {\r\n            await this.assertedPersistence.setCurrentUser(user);\r\n        }\r\n        else {\r\n            await this.assertedPersistence.removeCurrentUser();\r\n        }\r\n    }\r\n    queue(action) {\r\n        // In case something errors, the callback still should be called in order\r\n        // to keep the promise chain alive\r\n        this.operations = this.operations.then(action, action);\r\n        return this.operations;\r\n    }\r\n    get assertedPersistence() {\r\n        _assert(this.persistenceManager, this, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.persistenceManager;\r\n    }\r\n    _logFramework(framework) {\r\n        if (!framework || this.frameworks.includes(framework)) {\r\n            return;\r\n        }\r\n        this.frameworks.push(framework);\r\n        // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\r\n        // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\r\n        this.frameworks.sort();\r\n        this.clientVersion = _getClientVersion(this.config.clientPlatform, this._getFrameworks());\r\n    }\r\n    _getFrameworks() {\r\n        return this.frameworks;\r\n    }\r\n    async _getAdditionalHeaders() {\r\n        var _a;\r\n        // Additional headers on every request\r\n        const headers = {\r\n            [\"X-Client-Version\" /* X_CLIENT_VERSION */]: this.clientVersion,\r\n        };\r\n        if (this.app.options.appId) {\r\n            headers[\"X-Firebase-gmpid\" /* X_FIREBASE_GMPID */] = this.app.options.appId;\r\n        }\r\n        // If the heartbeat service exists, add the heartbeat string\r\n        const heartbeatsHeader = await ((_a = this.heartbeatServiceProvider.getImmediate({\r\n            optional: true,\r\n        })) === null || _a === void 0 ? void 0 : _a.getHeartbeatsHeader());\r\n        if (heartbeatsHeader) {\r\n            headers[\"X-Firebase-Client\" /* X_FIREBASE_CLIENT */] = heartbeatsHeader;\r\n        }\r\n        return headers;\r\n    }\r\n}\r\n/**\r\n * Method to be used to cast down to our private implmentation of Auth.\r\n * It will also handle unwrapping from the compat type if necessary\r\n *\r\n * @param auth Auth object passed in from developer\r\n */\r\nfunction _castAuth(auth) {\r\n    return getModularInstance(auth);\r\n}\r\n/** Helper class to wrap subscriber logic */\r\nclass Subscription {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.observer = null;\r\n        this.addObserver = createSubscribe(observer => (this.observer = observer));\r\n    }\r\n    get next() {\r\n        _assert(this.observer, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.observer.next.bind(this.observer);\r\n    }\r\n}\n\n/**\r\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\r\n * Firebase Auth services.\r\n *\r\n * @remarks\r\n * This must be called synchronously immediately following the first call to\r\n * {@link initializeAuth}.  Do not use with production credentials as emulator\r\n * traffic is not encrypted.\r\n *\r\n *\r\n * @example\r\n * ```javascript\r\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\r\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\r\n * `true` to disable the warning banner attached to the DOM.\r\n *\r\n * @public\r\n */\r\nfunction connectAuthEmulator(auth, url, options) {\r\n    const authInternal = _castAuth(auth);\r\n    _assert(authInternal._canInitEmulator, authInternal, \"emulator-config-failed\" /* EMULATOR_CONFIG_FAILED */);\r\n    _assert(/^https?:\\/\\//.test(url), authInternal, \"invalid-emulator-scheme\" /* INVALID_EMULATOR_SCHEME */);\r\n    const disableWarnings = !!(options === null || options === void 0 ? void 0 : options.disableWarnings);\r\n    const protocol = extractProtocol(url);\r\n    const { host, port } = extractHostAndPort(url);\r\n    const portStr = port === null ? '' : `:${port}`;\r\n    // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\r\n    authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\r\n    authInternal.settings.appVerificationDisabledForTesting = true;\r\n    authInternal.emulatorConfig = Object.freeze({\r\n        host,\r\n        port,\r\n        protocol: protocol.replace(':', ''),\r\n        options: Object.freeze({ disableWarnings })\r\n    });\r\n    if (!disableWarnings) {\r\n        emitEmulatorWarning();\r\n    }\r\n}\r\nfunction extractProtocol(url) {\r\n    const protocolEnd = url.indexOf(':');\r\n    return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\r\n}\r\nfunction extractHostAndPort(url) {\r\n    const protocol = extractProtocol(url);\r\n    const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\r\n    if (!authority) {\r\n        return { host: '', port: null };\r\n    }\r\n    const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\r\n    const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\r\n    if (bracketedIPv6) {\r\n        const host = bracketedIPv6[1];\r\n        return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\r\n    }\r\n    else {\r\n        const [host, port] = hostAndPort.split(':');\r\n        return { host, port: parsePort(port) };\r\n    }\r\n}\r\nfunction parsePort(portStr) {\r\n    if (!portStr) {\r\n        return null;\r\n    }\r\n    const port = Number(portStr);\r\n    if (isNaN(port)) {\r\n        return null;\r\n    }\r\n    return port;\r\n}\r\nfunction emitEmulatorWarning() {\r\n    function attachBanner() {\r\n        const el = document.createElement('p');\r\n        const sty = el.style;\r\n        el.innerText =\r\n            'Running in emulator mode. Do not use with production credentials.';\r\n        sty.position = 'fixed';\r\n        sty.width = '100%';\r\n        sty.backgroundColor = '#ffffff';\r\n        sty.border = '.1em solid #000000';\r\n        sty.color = '#b50000';\r\n        sty.bottom = '0px';\r\n        sty.left = '0px';\r\n        sty.margin = '0px';\r\n        sty.zIndex = '10000';\r\n        sty.textAlign = 'center';\r\n        el.classList.add('firebase-emulator-warning');\r\n        document.body.appendChild(el);\r\n    }\r\n    if (typeof console !== 'undefined' && typeof console.info === 'function') {\r\n        console.info('WARNING: You are using the Auth Emulator,' +\r\n            ' which is intended for local testing only.  Do not use with' +\r\n            ' production credentials.');\r\n    }\r\n    if (typeof window !== 'undefined' &&\r\n        typeof document !== 'undefined') {\r\n        if (document.readyState === 'loading') {\r\n            window.addEventListener('DOMContentLoaded', attachBanner);\r\n        }\r\n        else {\r\n            attachBanner();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface that represents the credentials returned by an {@link AuthProvider}.\r\n *\r\n * @remarks\r\n * Implementations specify the details about each auth provider's credential requirements.\r\n *\r\n * @public\r\n */\r\nclass AuthCredential {\r\n    /** @internal */\r\n    constructor(\r\n    /**\r\n     * The authentication provider ID for the credential.\r\n     *\r\n     * @remarks\r\n     * For example, 'facebook.com', or 'google.com'.\r\n     */\r\n    providerId, \r\n    /**\r\n     * The authentication sign in method for the credential.\r\n     *\r\n     * @remarks\r\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\r\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\r\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\r\n     */\r\n    signInMethod) {\r\n        this.providerId = providerId;\r\n        this.signInMethod = signInMethod;\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     *\r\n     * @returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(_auth) {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(_auth, _idToken) {\r\n        return debugFail('not implemented');\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(_auth) {\r\n        return debugFail('not implemented');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function resetPassword(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:resetPassword\" /* RESET_PASSWORD */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function updateEmailPassword(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:update\" /* SET_ACCOUNT_INFO */, request);\r\n}\r\nasync function applyActionCode$1(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:update\" /* SET_ACCOUNT_INFO */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithPassword(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithPassword\" /* SIGN_IN_WITH_PASSWORD */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function sendOobCode(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:sendOobCode\" /* SEND_OOB_CODE */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function sendEmailVerification$1(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function sendPasswordResetEmail$1(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function sendSignInLinkToEmail$1(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\r\nasync function verifyAndChangeEmail(auth, request) {\r\n    return sendOobCode(auth, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithEmailLink$1(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithEmailLink\" /* SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function signInWithEmailLinkForLinking(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithEmailLink\" /* SIGN_IN_WITH_EMAIL_LINK */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\r\n * {@link ProviderId}.PASSWORD\r\n *\r\n * @remarks\r\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\r\n * {@link SignInMethod}.EMAIL_LINK.\r\n *\r\n * @public\r\n */\r\nclass EmailAuthCredential extends AuthCredential {\r\n    /** @internal */\r\n    constructor(\r\n    /** @internal */\r\n    _email, \r\n    /** @internal */\r\n    _password, signInMethod, \r\n    /** @internal */\r\n    _tenantId = null) {\r\n        super(\"password\" /* PASSWORD */, signInMethod);\r\n        this._email = _email;\r\n        this._password = _password;\r\n        this._tenantId = _tenantId;\r\n    }\r\n    /** @internal */\r\n    static _fromEmailAndPassword(email, password) {\r\n        return new EmailAuthCredential(email, password, \"password\" /* EMAIL_PASSWORD */);\r\n    }\r\n    /** @internal */\r\n    static _fromEmailAndCode(email, oobCode, tenantId = null) {\r\n        return new EmailAuthCredential(email, oobCode, \"emailLink\" /* EMAIL_LINK */, tenantId);\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON} */\r\n    toJSON() {\r\n        return {\r\n            email: this._email,\r\n            password: this._password,\r\n            signInMethod: this.signInMethod,\r\n            tenantId: this._tenantId\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\r\n     *\r\n     * @param json - Either `object` or the stringified representation of the object. When string is\r\n     * provided, `JSON.parse` would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        if ((obj === null || obj === void 0 ? void 0 : obj.email) && (obj === null || obj === void 0 ? void 0 : obj.password)) {\r\n            if (obj.signInMethod === \"password\" /* EMAIL_PASSWORD */) {\r\n                return this._fromEmailAndPassword(obj.email, obj.password);\r\n            }\r\n            else if (obj.signInMethod === \"emailLink\" /* EMAIL_LINK */) {\r\n                return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /** @internal */\r\n    async _getIdTokenResponse(auth) {\r\n        switch (this.signInMethod) {\r\n            case \"password\" /* EMAIL_PASSWORD */:\r\n                return signInWithPassword(auth, {\r\n                    returnSecureToken: true,\r\n                    email: this._email,\r\n                    password: this._password\r\n                });\r\n            case \"emailLink\" /* EMAIL_LINK */:\r\n                return signInWithEmailLink$1(auth, {\r\n                    email: this._email,\r\n                    oobCode: this._password\r\n                });\r\n            default:\r\n                _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    /** @internal */\r\n    async _linkToIdToken(auth, idToken) {\r\n        switch (this.signInMethod) {\r\n            case \"password\" /* EMAIL_PASSWORD */:\r\n                return updateEmailPassword(auth, {\r\n                    idToken,\r\n                    returnSecureToken: true,\r\n                    email: this._email,\r\n                    password: this._password\r\n                });\r\n            case \"emailLink\" /* EMAIL_LINK */:\r\n                return signInWithEmailLinkForLinking(auth, {\r\n                    idToken,\r\n                    email: this._email,\r\n                    oobCode: this._password\r\n                });\r\n            default:\r\n                _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        return this._getIdTokenResponse(auth);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithIdp(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithIdp\" /* SIGN_IN_WITH_IDP */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IDP_REQUEST_URI$1 = 'http://localhost';\r\n/**\r\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\r\n *\r\n * @remarks\r\n * Implementations specify the details about each auth provider's credential requirements.\r\n *\r\n * @public\r\n */\r\nclass OAuthCredential extends AuthCredential {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.pendingToken = null;\r\n    }\r\n    /** @internal */\r\n    static _fromParams(params) {\r\n        const cred = new OAuthCredential(params.providerId, params.signInMethod);\r\n        if (params.idToken || params.accessToken) {\r\n            // OAuth 2 and either ID token or access token.\r\n            if (params.idToken) {\r\n                cred.idToken = params.idToken;\r\n            }\r\n            if (params.accessToken) {\r\n                cred.accessToken = params.accessToken;\r\n            }\r\n            // Add nonce if available and no pendingToken is present.\r\n            if (params.nonce && !params.pendingToken) {\r\n                cred.nonce = params.nonce;\r\n            }\r\n            if (params.pendingToken) {\r\n                cred.pendingToken = params.pendingToken;\r\n            }\r\n        }\r\n        else if (params.oauthToken && params.oauthTokenSecret) {\r\n            // OAuth 1 and OAuth token with token secret\r\n            cred.accessToken = params.oauthToken;\r\n            cred.secret = params.oauthTokenSecret;\r\n        }\r\n        else {\r\n            _fail(\"argument-error\" /* ARGUMENT_ERROR */);\r\n        }\r\n        return cred;\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON}  */\r\n    toJSON() {\r\n        return {\r\n            idToken: this.idToken,\r\n            accessToken: this.accessToken,\r\n            secret: this.secret,\r\n            nonce: this.nonce,\r\n            pendingToken: this.pendingToken,\r\n            providerId: this.providerId,\r\n            signInMethod: this.signInMethod\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        const { providerId, signInMethod } = obj, rest = __rest(obj, [\"providerId\", \"signInMethod\"]);\r\n        if (!providerId || !signInMethod) {\r\n            return null;\r\n        }\r\n        const cred = new OAuthCredential(providerId, signInMethod);\r\n        cred.idToken = rest.idToken || undefined;\r\n        cred.accessToken = rest.accessToken || undefined;\r\n        cred.secret = rest.secret;\r\n        cred.nonce = rest.nonce;\r\n        cred.pendingToken = rest.pendingToken || null;\r\n        return cred;\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        const request = this.buildRequest();\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        const request = this.buildRequest();\r\n        request.idToken = idToken;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        const request = this.buildRequest();\r\n        request.autoCreate = false;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    buildRequest() {\r\n        const request = {\r\n            requestUri: IDP_REQUEST_URI$1,\r\n            returnSecureToken: true\r\n        };\r\n        if (this.pendingToken) {\r\n            request.pendingToken = this.pendingToken;\r\n        }\r\n        else {\r\n            const postBody = {};\r\n            if (this.idToken) {\r\n                postBody['id_token'] = this.idToken;\r\n            }\r\n            if (this.accessToken) {\r\n                postBody['access_token'] = this.accessToken;\r\n            }\r\n            if (this.secret) {\r\n                postBody['oauth_token_secret'] = this.secret;\r\n            }\r\n            postBody['providerId'] = this.providerId;\r\n            if (this.nonce && !this.pendingToken) {\r\n                postBody['nonce'] = this.nonce;\r\n            }\r\n            request.postBody = querystring(postBody);\r\n        }\r\n        return request;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function sendPhoneVerificationCode(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:sendVerificationCode\" /* SEND_VERIFICATION_CODE */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function signInWithPhoneNumber$1(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithPhoneNumber\" /* SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request));\r\n}\r\nasync function linkWithPhoneNumber$1(auth, request) {\r\n    const response = await _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithPhoneNumber\" /* SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, request));\r\n    if (response.temporaryProof) {\r\n        throw _makeTaggedError(auth, \"account-exists-with-different-credential\" /* NEED_CONFIRMATION */, response);\r\n    }\r\n    return response;\r\n}\r\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_ = {\r\n    [\"USER_NOT_FOUND\" /* USER_NOT_FOUND */]: \"user-not-found\" /* USER_DELETED */\r\n};\r\nasync function verifyPhoneNumberForExisting(auth, request) {\r\n    const apiRequest = Object.assign(Object.assign({}, request), { operation: 'REAUTH' });\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithPhoneNumber\" /* SIGN_IN_WITH_PHONE_NUMBER */, _addTidIfNecessary(auth, apiRequest), VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents the credentials returned by {@link PhoneAuthProvider}.\r\n *\r\n * @public\r\n */\r\nclass PhoneAuthCredential extends AuthCredential {\r\n    constructor(params) {\r\n        super(\"phone\" /* PHONE */, \"phone\" /* PHONE */);\r\n        this.params = params;\r\n    }\r\n    /** @internal */\r\n    static _fromVerification(verificationId, verificationCode) {\r\n        return new PhoneAuthCredential({ verificationId, verificationCode });\r\n    }\r\n    /** @internal */\r\n    static _fromTokenResponse(phoneNumber, temporaryProof) {\r\n        return new PhoneAuthCredential({ phoneNumber, temporaryProof });\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        return signInWithPhoneNumber$1(auth, this._makeVerificationRequest());\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        return linkWithPhoneNumber$1(auth, Object.assign({ idToken }, this._makeVerificationRequest()));\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\r\n    }\r\n    /** @internal */\r\n    _makeVerificationRequest() {\r\n        const { temporaryProof, phoneNumber, verificationId, verificationCode } = this.params;\r\n        if (temporaryProof && phoneNumber) {\r\n            return { temporaryProof, phoneNumber };\r\n        }\r\n        return {\r\n            sessionInfo: verificationId,\r\n            code: verificationCode\r\n        };\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON} */\r\n    toJSON() {\r\n        const obj = {\r\n            providerId: this.providerId\r\n        };\r\n        if (this.params.phoneNumber) {\r\n            obj.phoneNumber = this.params.phoneNumber;\r\n        }\r\n        if (this.params.temporaryProof) {\r\n            obj.temporaryProof = this.params.temporaryProof;\r\n        }\r\n        if (this.params.verificationCode) {\r\n            obj.verificationCode = this.params.verificationCode;\r\n        }\r\n        if (this.params.verificationId) {\r\n            obj.verificationId = this.params.verificationId;\r\n        }\r\n        return obj;\r\n    }\r\n    /** Generates a phone credential based on a plain object or a JSON string. */\r\n    static fromJSON(json) {\r\n        if (typeof json === 'string') {\r\n            json = JSON.parse(json);\r\n        }\r\n        const { verificationId, verificationCode, phoneNumber, temporaryProof } = json;\r\n        if (!verificationCode &&\r\n            !verificationId &&\r\n            !phoneNumber &&\r\n            !temporaryProof) {\r\n            return null;\r\n        }\r\n        return new PhoneAuthCredential({\r\n            verificationId,\r\n            verificationCode,\r\n            phoneNumber,\r\n            temporaryProof\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Maps the mode string in action code URL to Action Code Info operation.\r\n *\r\n * @param mode\r\n */\r\nfunction parseMode(mode) {\r\n    switch (mode) {\r\n        case 'recoverEmail':\r\n            return \"RECOVER_EMAIL\" /* RECOVER_EMAIL */;\r\n        case 'resetPassword':\r\n            return \"PASSWORD_RESET\" /* PASSWORD_RESET */;\r\n        case 'signIn':\r\n            return \"EMAIL_SIGNIN\" /* EMAIL_SIGNIN */;\r\n        case 'verifyEmail':\r\n            return \"VERIFY_EMAIL\" /* VERIFY_EMAIL */;\r\n        case 'verifyAndChangeEmail':\r\n            return \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */;\r\n        case 'revertSecondFactorAddition':\r\n            return \"REVERT_SECOND_FACTOR_ADDITION\" /* REVERT_SECOND_FACTOR_ADDITION */;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n/**\r\n * Helper to parse FDL links\r\n *\r\n * @param url\r\n */\r\nfunction parseDeepLink(url) {\r\n    const link = querystringDecode(extractQuerystring(url))['link'];\r\n    // Double link case (automatic redirect).\r\n    const doubleDeepLink = link\r\n        ? querystringDecode(extractQuerystring(link))['deep_link_id']\r\n        : null;\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = querystringDecode(extractQuerystring(url))['deep_link_id'];\r\n    const iOSDoubleDeepLink = iOSDeepLink\r\n        ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\r\n        : null;\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * A utility class to parse email action URLs such as password reset, email verification,\r\n * email link sign in, etc.\r\n *\r\n * @public\r\n */\r\nclass ActionCodeURL {\r\n    /**\r\n     * @param actionLink - The link from which to extract the URL.\r\n     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\r\n     *\r\n     * @internal\r\n     */\r\n    constructor(actionLink) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        const searchParams = querystringDecode(extractQuerystring(actionLink));\r\n        const apiKey = (_a = searchParams[\"apiKey\" /* API_KEY */]) !== null && _a !== void 0 ? _a : null;\r\n        const code = (_b = searchParams[\"oobCode\" /* CODE */]) !== null && _b !== void 0 ? _b : null;\r\n        const operation = parseMode((_c = searchParams[\"mode\" /* MODE */]) !== null && _c !== void 0 ? _c : null);\r\n        // Validate API key, code and mode.\r\n        _assert(apiKey && code && operation, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        this.apiKey = apiKey;\r\n        this.operation = operation;\r\n        this.code = code;\r\n        this.continueUrl = (_d = searchParams[\"continueUrl\" /* CONTINUE_URL */]) !== null && _d !== void 0 ? _d : null;\r\n        this.languageCode = (_e = searchParams[\"languageCode\" /* LANGUAGE_CODE */]) !== null && _e !== void 0 ? _e : null;\r\n        this.tenantId = (_f = searchParams[\"tenantId\" /* TENANT_ID */]) !== null && _f !== void 0 ? _f : null;\r\n    }\r\n    /**\r\n     * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\r\n     * otherwise returns null.\r\n     *\r\n     * @param link  - The email action link string.\r\n     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\r\n     *\r\n     * @public\r\n     */\r\n    static parseLink(link) {\r\n        const actionLink = parseDeepLink(link);\r\n        try {\r\n            return new ActionCodeURL(actionLink);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Parses the email action link string and returns an {@link ActionCodeURL} if\r\n * the link is valid, otherwise returns null.\r\n *\r\n * @public\r\n */\r\nfunction parseActionCodeURL(link) {\r\n    return ActionCodeURL.parseLink(link);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating {@link EmailAuthCredential}.\r\n *\r\n * @public\r\n */\r\nclass EmailAuthProvider {\r\n    constructor() {\r\n        /**\r\n         * Always set to {@link ProviderId}.PASSWORD, even for email link.\r\n         */\r\n        this.providerId = EmailAuthProvider.PROVIDER_ID;\r\n    }\r\n    /**\r\n     * Initialize an {@link AuthCredential} using an email and password.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const authCredential = EmailAuthProvider.credential(email, password);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n     * ```\r\n     *\r\n     * @param email - Email address.\r\n     * @param password - User account password.\r\n     * @returns The auth provider credential.\r\n     */\r\n    static credential(email, password) {\r\n        return EmailAuthCredential._fromEmailAndPassword(email, password);\r\n    }\r\n    /**\r\n     * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\r\n     * email link operation.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * await sendSignInLinkToEmail(auth, email);\r\n     * // Obtain emailLink from user.\r\n     * const userCredential = await signInWithEmailLink(auth, email, emailLink);\r\n     * ```\r\n     *\r\n     * @param auth - The {@link Auth} instance used to verify the link.\r\n     * @param email - Email address.\r\n     * @param emailLink - Sign-in email link.\r\n     * @returns - The auth provider credential.\r\n     */\r\n    static credentialWithLink(email, emailLink) {\r\n        const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\r\n        _assert(actionCodeUrl, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        return EmailAuthCredential._fromEmailAndCode(email, actionCodeUrl.code, actionCodeUrl.tenantId);\r\n    }\r\n}\r\n/**\r\n * Always set to {@link ProviderId}.PASSWORD, even for email link.\r\n */\r\nEmailAuthProvider.PROVIDER_ID = \"password\" /* PASSWORD */;\r\n/**\r\n * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\r\n */\r\nEmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD = \"password\" /* EMAIL_PASSWORD */;\r\n/**\r\n * Always set to {@link SignInMethod}.EMAIL_LINK.\r\n */\r\nEmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD = \"emailLink\" /* EMAIL_LINK */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\r\n *\r\n * This class is not meant to be instantiated directly.\r\n *\r\n * @public\r\n */\r\nclass FederatedAuthProvider {\r\n    /**\r\n     * Constructor for generic OAuth providers.\r\n     *\r\n     * @param providerId - Provider for which credentials should be generated.\r\n     */\r\n    constructor(providerId) {\r\n        this.providerId = providerId;\r\n        /** @internal */\r\n        this.defaultLanguageCode = null;\r\n        /** @internal */\r\n        this.customParameters = {};\r\n    }\r\n    /**\r\n     * Set the language gode.\r\n     *\r\n     * @param languageCode - language code\r\n     */\r\n    setDefaultLanguage(languageCode) {\r\n        this.defaultLanguageCode = languageCode;\r\n    }\r\n    /**\r\n     * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\r\n     * operations.\r\n     *\r\n     * @remarks\r\n     * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\r\n     * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\r\n     *\r\n     * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\r\n     */\r\n    setCustomParameters(customOAuthParameters) {\r\n        this.customParameters = customOAuthParameters;\r\n        return this;\r\n    }\r\n    /**\r\n     * Retrieve the current list of {@link CustomParameters}.\r\n     */\r\n    getCustomParameters() {\r\n        return this.customParameters;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Common code to all OAuth providers. This is separate from the\r\n * {@link OAuthProvider} so that child providers (like\r\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\r\n * Instead, they rely on a static `credential` method.\r\n */\r\nclass BaseOAuthProvider extends FederatedAuthProvider {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** @internal */\r\n        this.scopes = [];\r\n    }\r\n    /**\r\n     * Add an OAuth scope to the credential.\r\n     *\r\n     * @param scope - Provider OAuth scope to add.\r\n     */\r\n    addScope(scope) {\r\n        // If not already added, add scope to list.\r\n        if (!this.scopes.includes(scope)) {\r\n            this.scopes.push(scope);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Retrieve the current list of OAuth scopes.\r\n     */\r\n    getScopes() {\r\n        return [...this.scopes];\r\n    }\r\n}\r\n/**\r\n * Provider for generating generic {@link OAuthCredential}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new OAuthProvider('google.com');\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a OAuth Access Token for the provider.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new OAuthProvider('google.com');\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a OAuth Access Token for the provider.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n * @public\r\n */\r\nclass OAuthProvider extends BaseOAuthProvider {\r\n    /**\r\n     * Creates an {@link OAuthCredential} from a JSON string or a plain object.\r\n     * @param json - A plain object or a JSON string\r\n     */\r\n    static credentialFromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        _assert('providerId' in obj && 'signInMethod' in obj, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        return OAuthCredential._fromParams(obj);\r\n    }\r\n    /**\r\n     * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\r\n     *\r\n     * @remarks\r\n     * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\r\n     * the raw nonce must match the nonce field in the ID token.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // `googleUser` from the onsuccess Google Sign In callback.\r\n     * // Initialize a generate OAuth provider with a `google.com` providerId.\r\n     * const provider = new OAuthProvider('google.com');\r\n     * const credential = provider.credential({\r\n     *   idToken: googleUser.getAuthResponse().id_token,\r\n     * });\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param params - Either the options object containing the ID token, access token and raw nonce\r\n     * or the ID token string.\r\n     */\r\n    credential(params) {\r\n        return this._credential(Object.assign(Object.assign({}, params), { nonce: params.rawNonce }));\r\n    }\r\n    /** An internal credential method that accepts more permissive options */\r\n    _credential(params) {\r\n        _assert(params.idToken || params.accessToken, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        // For OAuthCredential, sign in method is same as providerId.\r\n        return OAuthCredential._fromParams(Object.assign(Object.assign({}, params), { providerId: this.providerId, signInMethod: this.providerId }));\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return OAuthProvider.oauthCredentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return OAuthProvider.oauthCredentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static oauthCredentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce, providerId } = tokenResponse;\r\n        if (!oauthAccessToken &&\r\n            !oauthTokenSecret &&\r\n            !oauthIdToken &&\r\n            !pendingToken) {\r\n            return null;\r\n        }\r\n        if (!providerId) {\r\n            return null;\r\n        }\r\n        try {\r\n            return new OAuthProvider(providerId)._credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                nonce,\r\n                pendingToken\r\n            });\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('user_birthday');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * provider.addScope('user_birthday');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Facebook Access Token.\r\n * const credential = FacebookAuthProvider.credentialFromResult(result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass FacebookAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"facebook.com\" /* FACEBOOK */);\r\n    }\r\n    /**\r\n     * Creates a credential for Facebook.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // `event` from the Facebook auth.authResponseChange callback.\r\n     * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param accessToken - Facebook access token.\r\n     */\r\n    static credential(accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: FacebookAuthProvider.PROVIDER_ID,\r\n            signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return FacebookAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return FacebookAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\r\n            return null;\r\n        }\r\n        if (!tokenResponse.oauthAccessToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod}.FACEBOOK. */\r\nFacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD = \"facebook.com\" /* FACEBOOK */;\r\n/** Always set to {@link ProviderId}.FACEBOOK. */\r\nFacebookAuthProvider.PROVIDER_ID = \"facebook.com\" /* FACEBOOK */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new GoogleAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Google Access Token.\r\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new GoogleAuthProvider();\r\n * provider.addScope('profile');\r\n * provider.addScope('email');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Google Access Token.\r\n * const credential = GoogleAuthProvider.credentialFromResult(result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass GoogleAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"google.com\" /* GOOGLE */);\r\n        this.addScope('profile');\r\n    }\r\n    /**\r\n     * Creates a credential for Google. At least one of ID token and access token is required.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * // \\`googleUser\\` from the onsuccess Google Sign In callback.\r\n     * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\r\n     * const result = await signInWithCredential(credential);\r\n     * ```\r\n     *\r\n     * @param idToken - Google ID token.\r\n     * @param accessToken - Google access token.\r\n     */\r\n    static credential(idToken, accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: GoogleAuthProvider.PROVIDER_ID,\r\n            signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\r\n            idToken,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return GoogleAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return GoogleAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthIdToken, oauthAccessToken } = tokenResponse;\r\n        if (!oauthIdToken && !oauthAccessToken) {\r\n            // This could be an oauth 1 credential or a phone credential\r\n            return null;\r\n        }\r\n        try {\r\n            return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod}.GOOGLE. */\r\nGoogleAuthProvider.GOOGLE_SIGN_IN_METHOD = \"google.com\" /* GOOGLE */;\r\n/** Always set to {@link ProviderId}.GOOGLE. */\r\nGoogleAuthProvider.PROVIDER_ID = \"google.com\" /* GOOGLE */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\r\n *\r\n * @remarks\r\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\r\n * the {@link signInWithPopup} handler:\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new GithubAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * provider.addScope('repo');\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Github Access Token.\r\n *   const credential = GithubAuthProvider.credentialFromResult(result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new GithubAuthProvider();\r\n * provider.addScope('repo');\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Github Access Token.\r\n * const credential = GithubAuthProvider.credentialFromResult(result);\r\n * const token = credential.accessToken;\r\n * ```\r\n * @public\r\n */\r\nclass GithubAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"github.com\" /* GITHUB */);\r\n    }\r\n    /**\r\n     * Creates a credential for Github.\r\n     *\r\n     * @param accessToken - Github access token.\r\n     */\r\n    static credential(accessToken) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: GithubAuthProvider.PROVIDER_ID,\r\n            signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\r\n            accessToken\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return GithubAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return GithubAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\r\n            return null;\r\n        }\r\n        if (!tokenResponse.oauthAccessToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod}.GITHUB. */\r\nGithubAuthProvider.GITHUB_SIGN_IN_METHOD = \"github.com\" /* GITHUB */;\r\n/** Always set to {@link ProviderId}.GITHUB. */\r\nGithubAuthProvider.PROVIDER_ID = \"github.com\" /* GITHUB */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IDP_REQUEST_URI = 'http://localhost';\r\n/**\r\n * @public\r\n */\r\nclass SAMLAuthCredential extends AuthCredential {\r\n    /** @internal */\r\n    constructor(providerId, pendingToken) {\r\n        super(providerId, providerId);\r\n        this.pendingToken = pendingToken;\r\n    }\r\n    /** @internal */\r\n    _getIdTokenResponse(auth) {\r\n        const request = this.buildRequest();\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _linkToIdToken(auth, idToken) {\r\n        const request = this.buildRequest();\r\n        request.idToken = idToken;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** @internal */\r\n    _getReauthenticationResolver(auth) {\r\n        const request = this.buildRequest();\r\n        request.autoCreate = false;\r\n        return signInWithIdp(auth, request);\r\n    }\r\n    /** {@inheritdoc AuthCredential.toJSON}  */\r\n    toJSON() {\r\n        return {\r\n            signInMethod: this.signInMethod,\r\n            providerId: this.providerId,\r\n            pendingToken: this.pendingToken\r\n        };\r\n    }\r\n    /**\r\n     * Static method to deserialize a JSON representation of an object into an\r\n     * {@link  AuthCredential}.\r\n     *\r\n     * @param json - Input can be either Object or the stringified representation of the object.\r\n     * When string is provided, JSON.parse would be called first.\r\n     *\r\n     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\r\n     */\r\n    static fromJSON(json) {\r\n        const obj = typeof json === 'string' ? JSON.parse(json) : json;\r\n        const { providerId, signInMethod, pendingToken } = obj;\r\n        if (!providerId ||\r\n            !signInMethod ||\r\n            !pendingToken ||\r\n            providerId !== signInMethod) {\r\n            return null;\r\n        }\r\n        return new SAMLAuthCredential(providerId, pendingToken);\r\n    }\r\n    /**\r\n     * Helper static method to avoid exposing the constructor to end users.\r\n     *\r\n     * @internal\r\n     */\r\n    static _create(providerId, pendingToken) {\r\n        return new SAMLAuthCredential(providerId, pendingToken);\r\n    }\r\n    buildRequest() {\r\n        return {\r\n            requestUri: IDP_REQUEST_URI,\r\n            returnSecureToken: true,\r\n            pendingToken: this.pendingToken\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SAML_PROVIDER_PREFIX = 'saml.';\r\n/**\r\n * An {@link AuthProvider} for SAML.\r\n *\r\n * @public\r\n */\r\nclass SAMLAuthProvider extends FederatedAuthProvider {\r\n    /**\r\n     * Constructor. The providerId must start with \"saml.\"\r\n     * @param providerId - SAML provider ID.\r\n     */\r\n    constructor(providerId) {\r\n        _assert(providerId.startsWith(SAML_PROVIDER_PREFIX), \"argument-error\" /* ARGUMENT_ERROR */);\r\n        super(providerId);\r\n    }\r\n    /**\r\n     * Generates an {@link AuthCredential} from a {@link UserCredential} after a\r\n     * successful SAML flow completes.\r\n     *\r\n     * @remarks\r\n     *\r\n     * For example, to get an {@link AuthCredential}, you could write the\r\n     * following code:\r\n     *\r\n     * ```js\r\n     * const userCredential = await signInWithPopup(auth, samlProvider);\r\n     * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\r\n     * ```\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return SAMLAuthProvider.samlCredentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return SAMLAuthProvider.samlCredentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    /**\r\n     * Creates an {@link AuthCredential} from a JSON string or a plain object.\r\n     * @param json - A plain object or a JSON string\r\n     */\r\n    static credentialFromJSON(json) {\r\n        const credential = SAMLAuthCredential.fromJSON(json);\r\n        _assert(credential, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        return credential;\r\n    }\r\n    static samlCredentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { pendingToken, providerId } = tokenResponse;\r\n        if (!pendingToken || !providerId) {\r\n            return null;\r\n        }\r\n        try {\r\n            return SAMLAuthCredential._create(providerId, pendingToken);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new TwitterAuthProvider();\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Twitter Access Token and Secret.\r\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\r\n *   const token = credential.accessToken;\r\n *   const secret = credential.secret;\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new TwitterAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Twitter Access Token and Secret.\r\n * const credential = TwitterAuthProvider.credentialFromResult(result);\r\n * const token = credential.accessToken;\r\n * const secret = credential.secret;\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass TwitterAuthProvider extends BaseOAuthProvider {\r\n    constructor() {\r\n        super(\"twitter.com\" /* TWITTER */);\r\n    }\r\n    /**\r\n     * Creates a credential for Twitter.\r\n     *\r\n     * @param token - Twitter access token.\r\n     * @param secret - Twitter secret.\r\n     */\r\n    static credential(token, secret) {\r\n        return OAuthCredential._fromParams({\r\n            providerId: TwitterAuthProvider.PROVIDER_ID,\r\n            signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\r\n            oauthToken: token,\r\n            oauthTokenSecret: secret\r\n        });\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        return TwitterAuthProvider.credentialFromTaggedObject(userCredential);\r\n    }\r\n    /**\r\n     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\r\n     * thrown during a sign-in, link, or reauthenticate operation.\r\n     *\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromError(error) {\r\n        return TwitterAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { oauthAccessToken, oauthTokenSecret } = tokenResponse;\r\n        if (!oauthAccessToken || !oauthTokenSecret) {\r\n            return null;\r\n        }\r\n        try {\r\n            return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\r\n        }\r\n        catch (_a) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/** Always set to {@link SignInMethod}.TWITTER. */\r\nTwitterAuthProvider.TWITTER_SIGN_IN_METHOD = \"twitter.com\" /* TWITTER */;\r\n/** Always set to {@link ProviderId}.TWITTER. */\r\nTwitterAuthProvider.PROVIDER_ID = \"twitter.com\" /* TWITTER */;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signUp(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signUp\" /* SIGN_UP */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass UserCredentialImpl {\r\n    constructor(params) {\r\n        this.user = params.user;\r\n        this.providerId = params.providerId;\r\n        this._tokenResponse = params._tokenResponse;\r\n        this.operationType = params.operationType;\r\n    }\r\n    static async _fromIdTokenResponse(auth, operationType, idTokenResponse, isAnonymous = false) {\r\n        const user = await UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous);\r\n        const providerId = providerIdForResponse(idTokenResponse);\r\n        const userCred = new UserCredentialImpl({\r\n            user,\r\n            providerId,\r\n            _tokenResponse: idTokenResponse,\r\n            operationType\r\n        });\r\n        return userCred;\r\n    }\r\n    static async _forOperation(user, operationType, response) {\r\n        await user._updateTokensIfNecessary(response, /* reload */ true);\r\n        const providerId = providerIdForResponse(response);\r\n        return new UserCredentialImpl({\r\n            user,\r\n            providerId,\r\n            _tokenResponse: response,\r\n            operationType\r\n        });\r\n    }\r\n}\r\nfunction providerIdForResponse(response) {\r\n    if (response.providerId) {\r\n        return response.providerId;\r\n    }\r\n    if ('phoneNumber' in response) {\r\n        return \"phone\" /* PHONE */;\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Asynchronously signs in as an anonymous user.\r\n *\r\n * @remarks\r\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\r\n * new anonymous user identity will be created and returned.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n *\r\n * @public\r\n */\r\nasync function signInAnonymously(auth) {\r\n    var _a;\r\n    const authInternal = _castAuth(auth);\r\n    await authInternal._initializationPromise;\r\n    if ((_a = authInternal.currentUser) === null || _a === void 0 ? void 0 : _a.isAnonymous) {\r\n        // If an anonymous user is already signed in, no need to sign them in again.\r\n        return new UserCredentialImpl({\r\n            user: authInternal.currentUser,\r\n            providerId: null,\r\n            operationType: \"signIn\" /* SIGN_IN */\r\n        });\r\n    }\r\n    const response = await signUp(authInternal, {\r\n        returnSecureToken: true\r\n    });\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* SIGN_IN */, response, true);\r\n    await authInternal._updateCurrentUser(userCredential.user);\r\n    return userCredential;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorError extends FirebaseError {\r\n    constructor(auth, error, operationType, user) {\r\n        var _a;\r\n        super(error.code, error.message);\r\n        this.operationType = operationType;\r\n        this.user = user;\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, MultiFactorError.prototype);\r\n        this.customData = {\r\n            appName: auth.name,\r\n            tenantId: (_a = auth.tenantId) !== null && _a !== void 0 ? _a : undefined,\r\n            _serverResponse: error.customData._serverResponse,\r\n            operationType,\r\n        };\r\n    }\r\n    static _fromErrorAndOperation(auth, error, operationType, user) {\r\n        return new MultiFactorError(auth, error, operationType, user);\r\n    }\r\n}\r\nfunction _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user) {\r\n    const idTokenProvider = operationType === \"reauthenticate\" /* REAUTHENTICATE */\r\n        ? credential._getReauthenticationResolver(auth)\r\n        : credential._getIdTokenResponse(auth);\r\n    return idTokenProvider.catch(error => {\r\n        if (error.code === `auth/${\"multi-factor-auth-required\" /* MFA_REQUIRED */}`) {\r\n            throw MultiFactorError._fromErrorAndOperation(auth, error, operationType, user);\r\n        }\r\n        throw error;\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Takes a set of UserInfo provider data and converts it to a set of names\r\n */\r\nfunction providerDataAsNames(providerData) {\r\n    return new Set(providerData\r\n        .map(({ providerId }) => providerId)\r\n        .filter(pid => !!pid));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Unlinks a provider from a user account.\r\n *\r\n * @param user - The user.\r\n * @param providerId - The provider to unlink.\r\n *\r\n * @public\r\n */\r\nasync function unlink(user, providerId) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(true, userInternal, providerId);\r\n    const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\r\n        idToken: await userInternal.getIdToken(),\r\n        deleteProvider: [providerId]\r\n    });\r\n    const providersLeft = providerDataAsNames(providerUserInfo || []);\r\n    userInternal.providerData = userInternal.providerData.filter(pd => providersLeft.has(pd.providerId));\r\n    if (!providersLeft.has(\"phone\" /* PHONE */)) {\r\n        userInternal.phoneNumber = null;\r\n    }\r\n    await userInternal.auth._persistUserIfCurrent(userInternal);\r\n    return userInternal;\r\n}\r\nasync function _link$1(user, credential, bypassAuthState = false) {\r\n    const response = await _logoutIfInvalidated(user, credential._linkToIdToken(user.auth, await user.getIdToken()), bypassAuthState);\r\n    return UserCredentialImpl._forOperation(user, \"link\" /* LINK */, response);\r\n}\r\nasync function _assertLinkedStatus(expected, user, provider) {\r\n    await _reloadWithoutSaving(user);\r\n    const providerIds = providerDataAsNames(user.providerData);\r\n    const code = expected === false\r\n        ? \"provider-already-linked\" /* PROVIDER_ALREADY_LINKED */\r\n        : \"no-such-provider\" /* NO_SUCH_PROVIDER */;\r\n    _assert(providerIds.has(provider) === expected, user.auth, code);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _reauthenticate(user, credential, bypassAuthState = false) {\r\n    const { auth } = user;\r\n    const operationType = \"reauthenticate\" /* REAUTHENTICATE */;\r\n    try {\r\n        const response = await _logoutIfInvalidated(user, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user), bypassAuthState);\r\n        _assert(response.idToken, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        const parsed = _parseToken(response.idToken);\r\n        _assert(parsed, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        const { sub: localId } = parsed;\r\n        _assert(user.uid === localId, auth, \"user-mismatch\" /* USER_MISMATCH */);\r\n        return UserCredentialImpl._forOperation(user, operationType, response);\r\n    }\r\n    catch (e) {\r\n        // Convert user deleted error into user mismatch\r\n        if ((e === null || e === void 0 ? void 0 : e.code) === `auth/${\"user-not-found\" /* USER_DELETED */}`) {\r\n            _fail(auth, \"user-mismatch\" /* USER_MISMATCH */);\r\n        }\r\n        throw e;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _signInWithCredential(auth, credential, bypassAuthState = false) {\r\n    const operationType = \"signIn\" /* SIGN_IN */;\r\n    const response = await _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential);\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, operationType, response);\r\n    if (!bypassAuthState) {\r\n        await auth._updateCurrentUser(userCredential.user);\r\n    }\r\n    return userCredential;\r\n}\r\n/**\r\n * Asynchronously signs in with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function signInWithCredential(auth, credential) {\r\n    return _signInWithCredential(_castAuth(auth), credential);\r\n}\r\n/**\r\n * Links the user account with the given credentials.\r\n *\r\n * @remarks\r\n * An {@link AuthProvider} can be used to generate the credential.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function linkWithCredential(user, credential) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(false, userInternal, credential.providerId);\r\n    return _link$1(userInternal, credential);\r\n}\r\n/**\r\n * Re-authenticates a user using a fresh credential.\r\n *\r\n * @remarks\r\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\r\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error.\r\n *\r\n * @param user - The user.\r\n * @param credential - The auth credential.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithCredential(user, credential) {\r\n    return _reauthenticate(getModularInstance(user), credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function signInWithCustomToken$1(auth, request) {\r\n    return _performSignInRequest(auth, \"POST\" /* POST */, \"/v1/accounts:signInWithCustomToken\" /* SIGN_IN_WITH_CUSTOM_TOKEN */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Asynchronously signs in using a custom token.\r\n *\r\n * @remarks\r\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\r\n * be generated by an auth backend using the\r\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\r\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\r\n *\r\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param customToken - The custom token to sign in with.\r\n *\r\n * @public\r\n */\r\nasync function signInWithCustomToken(auth, customToken) {\r\n    const authInternal = _castAuth(auth);\r\n    const response = await signInWithCustomToken$1(authInternal, {\r\n        token: customToken,\r\n        returnSecureToken: true\r\n    });\r\n    const cred = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* SIGN_IN */, response);\r\n    await authInternal._updateCurrentUser(cred.user);\r\n    return cred;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorInfoImpl {\r\n    constructor(factorId, response) {\r\n        this.factorId = factorId;\r\n        this.uid = response.mfaEnrollmentId;\r\n        this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\r\n        this.displayName = response.displayName;\r\n    }\r\n    static _fromServerResponse(auth, enrollment) {\r\n        if ('phoneInfo' in enrollment) {\r\n            return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\r\n        }\r\n        return _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    }\r\n}\r\nclass PhoneMultiFactorInfoImpl extends MultiFactorInfoImpl {\r\n    constructor(response) {\r\n        super(\"phone\" /* PHONE */, response);\r\n        this.phoneNumber = response.phoneInfo;\r\n    }\r\n    static _fromServerResponse(_auth, enrollment) {\r\n        return new PhoneMultiFactorInfoImpl(enrollment);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _setActionCodeSettingsOnRequest(auth, request, actionCodeSettings) {\r\n    var _a;\r\n    _assert(((_a = actionCodeSettings.url) === null || _a === void 0 ? void 0 : _a.length) > 0, auth, \"invalid-continue-uri\" /* INVALID_CONTINUE_URI */);\r\n    _assert(typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\r\n        actionCodeSettings.dynamicLinkDomain.length > 0, auth, \"invalid-dynamic-link-domain\" /* INVALID_DYNAMIC_LINK_DOMAIN */);\r\n    request.continueUrl = actionCodeSettings.url;\r\n    request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\r\n    request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\r\n    if (actionCodeSettings.iOS) {\r\n        _assert(actionCodeSettings.iOS.bundleId.length > 0, auth, \"missing-ios-bundle-id\" /* MISSING_IOS_BUNDLE_ID */);\r\n        request.iOSBundleId = actionCodeSettings.iOS.bundleId;\r\n    }\r\n    if (actionCodeSettings.android) {\r\n        _assert(actionCodeSettings.android.packageName.length > 0, auth, \"missing-android-pkg-name\" /* MISSING_ANDROID_PACKAGE_NAME */);\r\n        request.androidInstallApp = actionCodeSettings.android.installApp;\r\n        request.androidMinimumVersionCode =\r\n            actionCodeSettings.android.minimumVersion;\r\n        request.androidPackageName = actionCodeSettings.android.packageName;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sends a password reset email to the given email address.\r\n *\r\n * @remarks\r\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\r\n * the email sent to the user, along with the new password specified by the user.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain code from user.\r\n * await confirmPasswordReset('user@example.com', code);\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendPasswordResetEmail(auth, email, actionCodeSettings) {\r\n    const authModular = getModularInstance(auth);\r\n    const request = {\r\n        requestType: \"PASSWORD_RESET\" /* PASSWORD_RESET */,\r\n        email\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\r\n    }\r\n    await sendPasswordResetEmail$1(authModular, request);\r\n}\r\n/**\r\n * Completes the password reset process, given a confirmation code and new password.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param oobCode - A confirmation code sent to the user.\r\n * @param newPassword - The new password.\r\n *\r\n * @public\r\n */\r\nasync function confirmPasswordReset(auth, oobCode, newPassword) {\r\n    await resetPassword(getModularInstance(auth), {\r\n        oobCode,\r\n        newPassword\r\n    });\r\n    // Do not return the email.\r\n}\r\n/**\r\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param oobCode - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function applyActionCode(auth, oobCode) {\r\n    await applyActionCode$1(getModularInstance(auth), { oobCode });\r\n}\r\n/**\r\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @returns metadata about the code.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param oobCode - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function checkActionCode(auth, oobCode) {\r\n    const authModular = getModularInstance(auth);\r\n    const response = await resetPassword(authModular, { oobCode });\r\n    // Email could be empty only if the request type is EMAIL_SIGNIN or\r\n    // VERIFY_AND_CHANGE_EMAIL.\r\n    // New email should not be empty if the request type is\r\n    // VERIFY_AND_CHANGE_EMAIL.\r\n    // Multi-factor info could not be empty if the request type is\r\n    // REVERT_SECOND_FACTOR_ADDITION.\r\n    const operation = response.requestType;\r\n    _assert(operation, authModular, \"internal-error\" /* INTERNAL_ERROR */);\r\n    switch (operation) {\r\n        case \"EMAIL_SIGNIN\" /* EMAIL_SIGNIN */:\r\n            break;\r\n        case \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */:\r\n            _assert(response.newEmail, authModular, \"internal-error\" /* INTERNAL_ERROR */);\r\n            break;\r\n        case \"REVERT_SECOND_FACTOR_ADDITION\" /* REVERT_SECOND_FACTOR_ADDITION */:\r\n            _assert(response.mfaInfo, authModular, \"internal-error\" /* INTERNAL_ERROR */);\r\n        // fall through\r\n        default:\r\n            _assert(response.email, authModular, \"internal-error\" /* INTERNAL_ERROR */);\r\n    }\r\n    // The multi-factor info for revert second factor addition\r\n    let multiFactorInfo = null;\r\n    if (response.mfaInfo) {\r\n        multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(_castAuth(authModular), response.mfaInfo);\r\n    }\r\n    return {\r\n        data: {\r\n            email: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */\r\n                ? response.newEmail\r\n                : response.email) || null,\r\n            previousEmail: (response.requestType === \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */\r\n                ? response.email\r\n                : response.newEmail) || null,\r\n            multiFactorInfo\r\n        },\r\n        operation\r\n    };\r\n}\r\n/**\r\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\r\n *\r\n * @returns the user's email address if valid.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param code - A verification code sent to the user.\r\n *\r\n * @public\r\n */\r\nasync function verifyPasswordResetCode(auth, code) {\r\n    const { data } = await checkActionCode(getModularInstance(auth), code);\r\n    // Email should always be present since a code was sent to it\r\n    return data.email;\r\n}\r\n/**\r\n * Creates a new user account associated with the specified email address and password.\r\n *\r\n * @remarks\r\n * On successful creation of the user account, this user will also be signed in to your application.\r\n *\r\n * User account creation can fail if the account already exists or the password is invalid.\r\n *\r\n * Note: The email address acts as a unique identifier for the user and enables an email-based\r\n * password reset. This function will create a new user account and set the initial user password.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n * @param password - The user's chosen password.\r\n *\r\n * @public\r\n */\r\nasync function createUserWithEmailAndPassword(auth, email, password) {\r\n    const authInternal = _castAuth(auth);\r\n    const response = await signUp(authInternal, {\r\n        returnSecureToken: true,\r\n        email,\r\n        password\r\n    });\r\n    const userCredential = await UserCredentialImpl._fromIdTokenResponse(authInternal, \"signIn\" /* SIGN_IN */, response);\r\n    await authInternal._updateCurrentUser(userCredential.user);\r\n    return userCredential;\r\n}\r\n/**\r\n * Asynchronously signs in using an email and password.\r\n *\r\n * @remarks\r\n * Fails with an error if the email address and password do not match.\r\n *\r\n * Note: The user's password is NOT the password used to access the user's email account. The\r\n * email address serves as a unique identifier for the user, and the password is used to access\r\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The users email address.\r\n * @param password - The users password.\r\n *\r\n * @public\r\n */\r\nfunction signInWithEmailAndPassword(auth, email, password) {\r\n    return signInWithCredential(getModularInstance(auth), EmailAuthProvider.credential(email, password));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sends a sign-in email link to the user with the specified email.\r\n *\r\n * @remarks\r\n * The sign-in operation has to always be completed in the app unlike other out of band email\r\n * actions (password reset and email verifications). This is because, at the end of the flow,\r\n * the user is expected to be signed in and their Auth state persisted within the app.\r\n *\r\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\r\n * address and the email link supplied in the email sent to the user.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain emailLink from the user.\r\n * if(isSignInWithEmailLink(auth, emailLink)) {\r\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\r\n * }\r\n * ```\r\n *\r\n * @param authInternal - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendSignInLinkToEmail(auth, email, actionCodeSettings) {\r\n    const authModular = getModularInstance(auth);\r\n    const request = {\r\n        requestType: \"EMAIL_SIGNIN\" /* EMAIL_SIGNIN */,\r\n        email\r\n    };\r\n    _assert(actionCodeSettings.handleCodeInApp, authModular, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\r\n    }\r\n    await sendSignInLinkToEmail$1(authModular, request);\r\n}\r\n/**\r\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param emailLink - The link sent to the user's email address.\r\n *\r\n * @public\r\n */\r\nfunction isSignInWithEmailLink(auth, emailLink) {\r\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\r\n    return (actionCodeUrl === null || actionCodeUrl === void 0 ? void 0 : actionCodeUrl.operation) === \"EMAIL_SIGNIN\" /* EMAIL_SIGNIN */;\r\n}\r\n/**\r\n * Asynchronously signs in using an email and sign-in email link.\r\n *\r\n * @remarks\r\n * If no link is passed, the link is inferred from the current URL.\r\n *\r\n * Fails with an error if the email address is invalid or OTP in email link expires.\r\n *\r\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\r\n * // Obtain emailLink from the user.\r\n * if(isSignInWithEmailLink(auth, emailLink)) {\r\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\r\n * }\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n * @param emailLink - The link sent to the user's email address.\r\n *\r\n * @public\r\n */\r\nasync function signInWithEmailLink(auth, email, emailLink) {\r\n    const authModular = getModularInstance(auth);\r\n    const credential = EmailAuthProvider.credentialWithLink(email, emailLink || _getCurrentUrl());\r\n    // Check if the tenant ID in the email link matches the tenant ID on Auth\r\n    // instance.\r\n    _assert(credential._tenantId === (authModular.tenantId || null), authModular, \"tenant-id-mismatch\" /* TENANT_ID_MISMATCH */);\r\n    return signInWithCredential(authModular, credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function createAuthUri(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:createAuthUri\" /* CREATE_AUTH_URI */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Gets the list of possible sign in methods for the given email address.\r\n *\r\n * @remarks\r\n * This is useful to differentiate methods of sign-in for the same provider, eg.\r\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\r\n * {@link SignInMethod}.EMAIL_PASSWORD and\r\n * {@link SignInMethod}.EMAIL_LINK.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param email - The user's email address.\r\n *\r\n * @public\r\n */\r\nasync function fetchSignInMethodsForEmail(auth, email) {\r\n    // createAuthUri returns an error if continue URI is not http or https.\r\n    // For environments like Cordova, Chrome extensions, native frameworks, file\r\n    // systems, etc, use http://localhost as continue URL.\r\n    const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\r\n    const request = {\r\n        identifier: email,\r\n        continueUri\r\n    };\r\n    const { signinMethods } = await createAuthUri(getModularInstance(auth), request);\r\n    return signinMethods || [];\r\n}\r\n/**\r\n * Sends a verification email to a user.\r\n *\r\n * @remarks\r\n * The verification process is completed by calling {@link applyActionCode}.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await sendEmailVerification(user, actionCodeSettings);\r\n * // Obtain code from the user.\r\n * await applyActionCode(auth, code);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function sendEmailVerification(user, actionCodeSettings) {\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        requestType: \"VERIFY_EMAIL\" /* VERIFY_EMAIL */,\r\n        idToken\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\r\n    }\r\n    const { email } = await sendEmailVerification$1(userInternal.auth, request);\r\n    if (email !== user.email) {\r\n        await user.reload();\r\n    }\r\n}\r\n/**\r\n * Sends a verification email to a new email address.\r\n *\r\n * @remarks\r\n * The user's email will be updated to the new one after being verified.\r\n *\r\n * If you have a custom email action handler, you can complete the verification process by calling\r\n * {@link applyActionCode}.\r\n *\r\n * @example\r\n * ```javascript\r\n * const actionCodeSettings = {\r\n *   url: 'https://www.example.com/?email=user@example.com',\r\n *   iOS: {\r\n *      bundleId: 'com.example.ios'\r\n *   },\r\n *   android: {\r\n *     packageName: 'com.example.android',\r\n *     installApp: true,\r\n *     minimumVersion: '12'\r\n *   },\r\n *   handleCodeInApp: true\r\n * };\r\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\r\n * // Obtain code from the user.\r\n * await applyActionCode(auth, code);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param newEmail - The new email address to be verified before update.\r\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\r\n *\r\n * @public\r\n */\r\nasync function verifyBeforeUpdateEmail(user, newEmail, actionCodeSettings) {\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        requestType: \"VERIFY_AND_CHANGE_EMAIL\" /* VERIFY_AND_CHANGE_EMAIL */,\r\n        idToken,\r\n        newEmail\r\n    };\r\n    if (actionCodeSettings) {\r\n        _setActionCodeSettingsOnRequest(userInternal.auth, request, actionCodeSettings);\r\n    }\r\n    const { email } = await verifyAndChangeEmail(userInternal.auth, request);\r\n    if (email !== user.email) {\r\n        // If the local copy of the email on user is outdated, reload the\r\n        // user.\r\n        await user.reload();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function updateProfile$1(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v1/accounts:update\" /* SET_ACCOUNT_INFO */, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates a user's profile data.\r\n *\r\n * @param user - The user.\r\n * @param profile - The profile's `displayName` and `photoURL` to update.\r\n *\r\n * @public\r\n */\r\nasync function updateProfile(user, { displayName, photoURL: photoUrl }) {\r\n    if (displayName === undefined && photoUrl === undefined) {\r\n        return;\r\n    }\r\n    const userInternal = getModularInstance(user);\r\n    const idToken = await userInternal.getIdToken();\r\n    const profileRequest = {\r\n        idToken,\r\n        displayName,\r\n        photoUrl,\r\n        returnSecureToken: true\r\n    };\r\n    const response = await _logoutIfInvalidated(userInternal, updateProfile$1(userInternal.auth, profileRequest));\r\n    userInternal.displayName = response.displayName || null;\r\n    userInternal.photoURL = response.photoUrl || null;\r\n    // Update the password provider as well\r\n    const passwordProvider = userInternal.providerData.find(({ providerId }) => providerId === \"password\" /* PASSWORD */);\r\n    if (passwordProvider) {\r\n        passwordProvider.displayName = userInternal.displayName;\r\n        passwordProvider.photoURL = userInternal.photoURL;\r\n    }\r\n    await userInternal._updateTokensIfNecessary(response);\r\n}\r\n/**\r\n * Updates the user's email address.\r\n *\r\n * @remarks\r\n * An email will be sent to the original email address (if it was set) that allows to revoke the\r\n * email address change, in order to protect them from account hijacking.\r\n *\r\n * Important: this is a security sensitive operation that requires the user to have recently signed\r\n * in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n * @param newEmail - The new email address.\r\n *\r\n * @public\r\n */\r\nfunction updateEmail(user, newEmail) {\r\n    return updateEmailOrPassword(getModularInstance(user), newEmail, null);\r\n}\r\n/**\r\n * Updates the user's password.\r\n *\r\n * @remarks\r\n * Important: this is a security sensitive operation that requires the user to have recently signed\r\n * in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n * @param newPassword - The new password.\r\n *\r\n * @public\r\n */\r\nfunction updatePassword(user, newPassword) {\r\n    return updateEmailOrPassword(getModularInstance(user), null, newPassword);\r\n}\r\nasync function updateEmailOrPassword(user, email, password) {\r\n    const { auth } = user;\r\n    const idToken = await user.getIdToken();\r\n    const request = {\r\n        idToken,\r\n        returnSecureToken: true\r\n    };\r\n    if (email) {\r\n        request.email = email;\r\n    }\r\n    if (password) {\r\n        request.password = password;\r\n    }\r\n    const response = await _logoutIfInvalidated(user, updateEmailPassword(auth, request));\r\n    await user._updateTokensIfNecessary(response, /* reload */ true);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Parse the `AdditionalUserInfo` from the ID token response.\r\n *\r\n */\r\nfunction _fromIdTokenResponse(idTokenResponse) {\r\n    var _a, _b;\r\n    if (!idTokenResponse) {\r\n        return null;\r\n    }\r\n    const { providerId } = idTokenResponse;\r\n    const profile = idTokenResponse.rawUserInfo\r\n        ? JSON.parse(idTokenResponse.rawUserInfo)\r\n        : {};\r\n    const isNewUser = idTokenResponse.isNewUser ||\r\n        idTokenResponse.kind === \"identitytoolkit#SignupNewUserResponse\" /* SignupNewUser */;\r\n    if (!providerId && (idTokenResponse === null || idTokenResponse === void 0 ? void 0 : idTokenResponse.idToken)) {\r\n        const signInProvider = (_b = (_a = _parseToken(idTokenResponse.idToken)) === null || _a === void 0 ? void 0 : _a.firebase) === null || _b === void 0 ? void 0 : _b['sign_in_provider'];\r\n        if (signInProvider) {\r\n            const filteredProviderId = signInProvider !== \"anonymous\" /* ANONYMOUS */ &&\r\n                signInProvider !== \"custom\" /* CUSTOM */\r\n                ? signInProvider\r\n                : null;\r\n            // Uses generic class in accordance with the legacy SDK.\r\n            return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\r\n        }\r\n    }\r\n    if (!providerId) {\r\n        return null;\r\n    }\r\n    switch (providerId) {\r\n        case \"facebook.com\" /* FACEBOOK */:\r\n            return new FacebookAdditionalUserInfo(isNewUser, profile);\r\n        case \"github.com\" /* GITHUB */:\r\n            return new GithubAdditionalUserInfo(isNewUser, profile);\r\n        case \"google.com\" /* GOOGLE */:\r\n            return new GoogleAdditionalUserInfo(isNewUser, profile);\r\n        case \"twitter.com\" /* TWITTER */:\r\n            return new TwitterAdditionalUserInfo(isNewUser, profile, idTokenResponse.screenName || null);\r\n        case \"custom\" /* CUSTOM */:\r\n        case \"anonymous\" /* ANONYMOUS */:\r\n            return new GenericAdditionalUserInfo(isNewUser, null);\r\n        default:\r\n            return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\r\n    }\r\n}\r\nclass GenericAdditionalUserInfo {\r\n    constructor(isNewUser, providerId, profile = {}) {\r\n        this.isNewUser = isNewUser;\r\n        this.providerId = providerId;\r\n        this.profile = profile;\r\n    }\r\n}\r\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, providerId, profile, username) {\r\n        super(isNewUser, providerId, profile);\r\n        this.username = username;\r\n    }\r\n}\r\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"facebook.com\" /* FACEBOOK */, profile);\r\n    }\r\n}\r\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"github.com\" /* GITHUB */, profile, typeof (profile === null || profile === void 0 ? void 0 : profile.login) === 'string' ? profile === null || profile === void 0 ? void 0 : profile.login : null);\r\n    }\r\n}\r\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\r\n    constructor(isNewUser, profile) {\r\n        super(isNewUser, \"google.com\" /* GOOGLE */, profile);\r\n    }\r\n}\r\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\r\n    constructor(isNewUser, profile, screenName) {\r\n        super(isNewUser, \"twitter.com\" /* TWITTER */, profile, screenName);\r\n    }\r\n}\r\n/**\r\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\r\n *\r\n * @param userCredential - The user credential.\r\n *\r\n * @public\r\n */\r\nfunction getAdditionalUserInfo(userCredential) {\r\n    const { user, _tokenResponse } = userCredential;\r\n    if (user.isAnonymous && !_tokenResponse) {\r\n        // Handle the special case where signInAnonymously() gets called twice.\r\n        // No network call is made so there's nothing to actually fill this in\r\n        return {\r\n            providerId: null,\r\n            isNewUser: false,\r\n            profile: null\r\n        };\r\n    }\r\n    return _fromIdTokenResponse(_tokenResponse);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Non-optional auth methods.\r\n/**\r\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\r\n * `Auth` session and applies this type of persistence for future sign-in requests, including\r\n * sign-in with redirect requests.\r\n *\r\n * @remarks\r\n * This makes it easy for a user signing in to specify whether their session should be\r\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\r\n * that are shared by other users or have sensitive data.\r\n *\r\n * @example\r\n * ```javascript\r\n * setPersistence(auth, browserSessionPersistence);\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param persistence - The {@link Persistence} to use.\r\n * @returns A `Promise` that resolves once the persistence change has completed\r\n *\r\n * @public\r\n */\r\nfunction setPersistence(auth, persistence) {\r\n    return getModularInstance(auth).setPersistence(persistence);\r\n}\r\n/**\r\n * Adds an observer for changes to the signed-in user's ID token, which includes sign-in,\r\n * sign-out, and token refresh events.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param nextOrObserver - callback triggered on change.\r\n * @param error - callback triggered on error.\r\n * @param completed - callback triggered when observer is removed.\r\n *\r\n * @public\r\n */\r\nfunction onIdTokenChanged(auth, nextOrObserver, error, completed) {\r\n    return getModularInstance(auth).onIdTokenChanged(nextOrObserver, error, completed);\r\n}\r\n/**\r\n * Adds a blocking callback that runs before an auth state change\r\n * sets a new user.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param callback - callback triggered before new user value is set.\r\n *   If this throws, it blocks the user from being set.\r\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\r\n *   callback throws, allowing you to undo any side effects.\r\n */\r\nfunction beforeAuthStateChanged(auth, callback, onAbort) {\r\n    return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\r\n}\r\n/**\r\n * Adds an observer for changes to the user's sign-in state.\r\n *\r\n * @remarks\r\n * To keep the old behavior, see {@link onIdTokenChanged}.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param nextOrObserver - callback triggered on change.\r\n * @param error - callback triggered on error.\r\n * @param completed - callback triggered when observer is removed.\r\n *\r\n * @public\r\n */\r\nfunction onAuthStateChanged(auth, nextOrObserver, error, completed) {\r\n    return getModularInstance(auth).onAuthStateChanged(nextOrObserver, error, completed);\r\n}\r\n/**\r\n * Sets the current language to the default device/browser preference.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n *\r\n * @public\r\n */\r\nfunction useDeviceLanguage(auth) {\r\n    getModularInstance(auth).useDeviceLanguage();\r\n}\r\n/**\r\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\r\n * {@link Auth} instance.\r\n *\r\n * @remarks\r\n * A new instance copy of the user provided will be made and set as currentUser.\r\n *\r\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\r\n * like other sign in methods.\r\n *\r\n * The operation fails with an error if the user to be updated belongs to a different Firebase\r\n * project.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param user - The new {@link User}.\r\n *\r\n * @public\r\n */\r\nfunction updateCurrentUser(auth, user) {\r\n    return getModularInstance(auth).updateCurrentUser(user);\r\n}\r\n/**\r\n * Signs out the current user.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n *\r\n * @public\r\n */\r\nfunction signOut(auth) {\r\n    return getModularInstance(auth).signOut();\r\n}\r\n/**\r\n * Deletes and signs out the user.\r\n *\r\n * @remarks\r\n * Important: this is a security-sensitive operation that requires the user to have recently\r\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\r\n * {@link reauthenticateWithCredential}.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nasync function deleteUser(user) {\r\n    return getModularInstance(user).delete();\r\n}\n\nclass MultiFactorSessionImpl {\r\n    constructor(type, credential) {\r\n        this.type = type;\r\n        this.credential = credential;\r\n    }\r\n    static _fromIdtoken(idToken) {\r\n        return new MultiFactorSessionImpl(\"enroll\" /* ENROLL */, idToken);\r\n    }\r\n    static _fromMfaPendingCredential(mfaPendingCredential) {\r\n        return new MultiFactorSessionImpl(\"signin\" /* SIGN_IN */, mfaPendingCredential);\r\n    }\r\n    toJSON() {\r\n        const key = this.type === \"enroll\" /* ENROLL */\r\n            ? 'idToken'\r\n            : 'pendingCredential';\r\n        return {\r\n            multiFactorSession: {\r\n                [key]: this.credential\r\n            }\r\n        };\r\n    }\r\n    static fromJSON(obj) {\r\n        var _a, _b;\r\n        if (obj === null || obj === void 0 ? void 0 : obj.multiFactorSession) {\r\n            if ((_a = obj.multiFactorSession) === null || _a === void 0 ? void 0 : _a.pendingCredential) {\r\n                return MultiFactorSessionImpl._fromMfaPendingCredential(obj.multiFactorSession.pendingCredential);\r\n            }\r\n            else if ((_b = obj.multiFactorSession) === null || _b === void 0 ? void 0 : _b.idToken) {\r\n                return MultiFactorSessionImpl._fromIdtoken(obj.multiFactorSession.idToken);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MultiFactorResolverImpl {\r\n    constructor(session, hints, signInResolver) {\r\n        this.session = session;\r\n        this.hints = hints;\r\n        this.signInResolver = signInResolver;\r\n    }\r\n    /** @internal */\r\n    static _fromError(authExtern, error) {\r\n        const auth = _castAuth(authExtern);\r\n        const serverResponse = error.customData._serverResponse;\r\n        const hints = (serverResponse.mfaInfo || []).map(enrollment => MultiFactorInfoImpl._fromServerResponse(auth, enrollment));\r\n        _assert(serverResponse.mfaPendingCredential, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        const session = MultiFactorSessionImpl._fromMfaPendingCredential(serverResponse.mfaPendingCredential);\r\n        return new MultiFactorResolverImpl(session, hints, async (assertion) => {\r\n            const mfaResponse = await assertion._process(auth, session);\r\n            // Clear out the unneeded fields from the old login response\r\n            delete serverResponse.mfaInfo;\r\n            delete serverResponse.mfaPendingCredential;\r\n            // Use in the new token & refresh token in the old response\r\n            const idTokenResponse = Object.assign(Object.assign({}, serverResponse), { idToken: mfaResponse.idToken, refreshToken: mfaResponse.refreshToken });\r\n            // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\r\n            switch (error.operationType) {\r\n                case \"signIn\" /* SIGN_IN */:\r\n                    const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, error.operationType, idTokenResponse);\r\n                    await auth._updateCurrentUser(userCredential.user);\r\n                    return userCredential;\r\n                case \"reauthenticate\" /* REAUTHENTICATE */:\r\n                    _assert(error.user, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n                    return UserCredentialImpl._forOperation(error.user, error.operationType, idTokenResponse);\r\n                default:\r\n                    _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n            }\r\n        });\r\n    }\r\n    async resolveSignIn(assertionExtern) {\r\n        const assertion = assertionExtern;\r\n        return this.signInResolver(assertion);\r\n    }\r\n}\r\n/**\r\n * Provides a {@link MultiFactorResolver} suitable for completion of a\r\n * multi-factor flow.\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\r\n * reauthentication operation.\r\n *\r\n * @public\r\n */\r\nfunction getMultiFactorResolver(auth, error) {\r\n    var _a;\r\n    const authModular = getModularInstance(auth);\r\n    const errorInternal = error;\r\n    _assert(error.customData.operationType, authModular, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    _assert((_a = errorInternal.customData._serverResponse) === null || _a === void 0 ? void 0 : _a.mfaPendingCredential, authModular, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    return MultiFactorResolverImpl._fromError(authModular, errorInternal);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction startEnrollPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaEnrollment:start\" /* START_PHONE_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction finalizeEnrollPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaEnrollment:finalize\" /* FINALIZE_PHONE_MFA_ENROLLMENT */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction withdrawMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaEnrollment:withdraw\" /* WITHDRAW_MFA */, _addTidIfNecessary(auth, request));\r\n}\n\nclass MultiFactorUserImpl {\r\n    constructor(user) {\r\n        this.user = user;\r\n        this.enrolledFactors = [];\r\n        user._onReload(userInfo => {\r\n            if (userInfo.mfaInfo) {\r\n                this.enrolledFactors = userInfo.mfaInfo.map(enrollment => MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment));\r\n            }\r\n        });\r\n    }\r\n    static _fromUser(user) {\r\n        return new MultiFactorUserImpl(user);\r\n    }\r\n    async getSession() {\r\n        return MultiFactorSessionImpl._fromIdtoken(await this.user.getIdToken());\r\n    }\r\n    async enroll(assertionExtern, displayName) {\r\n        const assertion = assertionExtern;\r\n        const session = (await this.getSession());\r\n        const finalizeMfaResponse = await _logoutIfInvalidated(this.user, assertion._process(this.user.auth, session, displayName));\r\n        // New tokens will be issued after enrollment of the new second factors.\r\n        // They need to be updated on the user.\r\n        await this.user._updateTokensIfNecessary(finalizeMfaResponse);\r\n        // The user needs to be reloaded to get the new multi-factor information\r\n        // from server. USER_RELOADED event will be triggered and `enrolledFactors`\r\n        // will be updated.\r\n        return this.user.reload();\r\n    }\r\n    async unenroll(infoOrUid) {\r\n        const mfaEnrollmentId = typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\r\n        const idToken = await this.user.getIdToken();\r\n        const idTokenResponse = await _logoutIfInvalidated(this.user, withdrawMfa(this.user.auth, {\r\n            idToken,\r\n            mfaEnrollmentId\r\n        }));\r\n        // Remove the second factor from the user's list.\r\n        this.enrolledFactors = this.enrolledFactors.filter(({ uid }) => uid !== mfaEnrollmentId);\r\n        // Depending on whether the backend decided to revoke the user's session,\r\n        // the tokenResponse may be empty. If the tokens were not updated (and they\r\n        // are now invalid), reloading the user will discover this and invalidate\r\n        // the user's state accordingly.\r\n        await this.user._updateTokensIfNecessary(idTokenResponse);\r\n        try {\r\n            await this.user.reload();\r\n        }\r\n        catch (e) {\r\n            if (e.code !== `auth/${\"user-token-expired\" /* TOKEN_EXPIRED */}`) {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst multiFactorUserCache = new WeakMap();\r\n/**\r\n * The {@link MultiFactorUser} corresponding to the user.\r\n *\r\n * @remarks\r\n * This is used to access all multi-factor properties and operations related to the user.\r\n *\r\n * @param user - The user.\r\n *\r\n * @public\r\n */\r\nfunction multiFactor(user) {\r\n    const userModular = getModularInstance(user);\r\n    if (!multiFactorUserCache.has(userModular)) {\r\n        multiFactorUserCache.set(userModular, MultiFactorUserImpl._fromUser(userModular));\r\n    }\r\n    return multiFactorUserCache.get(userModular);\r\n}\n\nconst STORAGE_AVAILABLE_KEY = '__sak';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// There are two different browser persistence types: local and session.\r\n// Both have the same implementation but use a different underlying storage\r\n// object.\r\nclass BrowserPersistenceClass {\r\n    constructor(storageRetriever, type) {\r\n        this.storageRetriever = storageRetriever;\r\n        this.type = type;\r\n    }\r\n    _isAvailable() {\r\n        try {\r\n            if (!this.storage) {\r\n                return Promise.resolve(false);\r\n            }\r\n            this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\r\n            this.storage.removeItem(STORAGE_AVAILABLE_KEY);\r\n            return Promise.resolve(true);\r\n        }\r\n        catch (_a) {\r\n            return Promise.resolve(false);\r\n        }\r\n    }\r\n    _set(key, value) {\r\n        this.storage.setItem(key, JSON.stringify(value));\r\n        return Promise.resolve();\r\n    }\r\n    _get(key) {\r\n        const json = this.storage.getItem(key);\r\n        return Promise.resolve(json ? JSON.parse(json) : null);\r\n    }\r\n    _remove(key) {\r\n        this.storage.removeItem(key);\r\n        return Promise.resolve();\r\n    }\r\n    get storage() {\r\n        return this.storageRetriever();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _iframeCannotSyncWebStorage() {\r\n    const ua = getUA();\r\n    return _isSafari(ua) || _isIOS(ua);\r\n}\r\n// The polling period in case events are not supported\r\nconst _POLLING_INTERVAL_MS$1 = 1000;\r\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\r\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\r\nclass BrowserLocalPersistence extends BrowserPersistenceClass {\r\n    constructor() {\r\n        super(() => window.localStorage, \"LOCAL\" /* LOCAL */);\r\n        this.boundEventHandler = (event, poll) => this.onStorageEvent(event, poll);\r\n        this.listeners = {};\r\n        this.localCache = {};\r\n        // setTimeout return value is platform specific\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.pollTimer = null;\r\n        // Safari or iOS browser and embedded in an iframe.\r\n        this.safariLocalStorageNotSynced = _iframeCannotSyncWebStorage() && _isIframe();\r\n        // Whether to use polling instead of depending on window events\r\n        this.fallbackToPolling = _isMobileBrowser();\r\n        this._shouldAllowMigration = true;\r\n    }\r\n    forAllChangedKeys(cb) {\r\n        // Check all keys with listeners on them.\r\n        for (const key of Object.keys(this.listeners)) {\r\n            // Get value from localStorage.\r\n            const newValue = this.storage.getItem(key);\r\n            const oldValue = this.localCache[key];\r\n            // If local map value does not match, trigger listener with storage event.\r\n            // Differentiate this simulated event from the real storage event.\r\n            if (newValue !== oldValue) {\r\n                cb(key, oldValue, newValue);\r\n            }\r\n        }\r\n    }\r\n    onStorageEvent(event, poll = false) {\r\n        // Key would be null in some situations, like when localStorage is cleared\r\n        if (!event.key) {\r\n            this.forAllChangedKeys((key, _oldValue, newValue) => {\r\n                this.notifyListeners(key, newValue);\r\n            });\r\n            return;\r\n        }\r\n        const key = event.key;\r\n        // Check the mechanism how this event was detected.\r\n        // The first event will dictate the mechanism to be used.\r\n        if (poll) {\r\n            // Environment detects storage changes via polling.\r\n            // Remove storage event listener to prevent possible event duplication.\r\n            this.detachListener();\r\n        }\r\n        else {\r\n            // Environment detects storage changes via storage event listener.\r\n            // Remove polling listener to prevent possible event duplication.\r\n            this.stopPolling();\r\n        }\r\n        // Safari embedded iframe. Storage event will trigger with the delta\r\n        // changes but no changes will be applied to the iframe localStorage.\r\n        if (this.safariLocalStorageNotSynced) {\r\n            // Get current iframe page value.\r\n            const storedValue = this.storage.getItem(key);\r\n            // Value not synchronized, synchronize manually.\r\n            if (event.newValue !== storedValue) {\r\n                if (event.newValue !== null) {\r\n                    // Value changed from current value.\r\n                    this.storage.setItem(key, event.newValue);\r\n                }\r\n                else {\r\n                    // Current value deleted.\r\n                    this.storage.removeItem(key);\r\n                }\r\n            }\r\n            else if (this.localCache[key] === event.newValue && !poll) {\r\n                // Already detected and processed, do not trigger listeners again.\r\n                return;\r\n            }\r\n        }\r\n        const triggerListeners = () => {\r\n            // Keep local map up to date in case storage event is triggered before\r\n            // poll.\r\n            const storedValue = this.storage.getItem(key);\r\n            if (!poll && this.localCache[key] === storedValue) {\r\n                // Real storage event which has already been detected, do nothing.\r\n                // This seems to trigger in some IE browsers for some reason.\r\n                return;\r\n            }\r\n            this.notifyListeners(key, storedValue);\r\n        };\r\n        const storedValue = this.storage.getItem(key);\r\n        if (_isIE10() &&\r\n            storedValue !== event.newValue &&\r\n            event.newValue !== event.oldValue) {\r\n            // IE 10 has this weird bug where a storage event would trigger with the\r\n            // correct key, oldValue and newValue but localStorage.getItem(key) does\r\n            // not yield the updated value until a few milliseconds. This ensures\r\n            // this recovers from that situation.\r\n            setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\r\n        }\r\n        else {\r\n            triggerListeners();\r\n        }\r\n    }\r\n    notifyListeners(key, value) {\r\n        this.localCache[key] = value;\r\n        const listeners = this.listeners[key];\r\n        if (listeners) {\r\n            for (const listener of Array.from(listeners)) {\r\n                listener(value ? JSON.parse(value) : value);\r\n            }\r\n        }\r\n    }\r\n    startPolling() {\r\n        this.stopPolling();\r\n        this.pollTimer = setInterval(() => {\r\n            this.forAllChangedKeys((key, oldValue, newValue) => {\r\n                this.onStorageEvent(new StorageEvent('storage', {\r\n                    key,\r\n                    oldValue,\r\n                    newValue\r\n                }), \r\n                /* poll */ true);\r\n            });\r\n        }, _POLLING_INTERVAL_MS$1);\r\n    }\r\n    stopPolling() {\r\n        if (this.pollTimer) {\r\n            clearInterval(this.pollTimer);\r\n            this.pollTimer = null;\r\n        }\r\n    }\r\n    attachListener() {\r\n        window.addEventListener('storage', this.boundEventHandler);\r\n    }\r\n    detachListener() {\r\n        window.removeEventListener('storage', this.boundEventHandler);\r\n    }\r\n    _addListener(key, listener) {\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            // Whether browser can detect storage event when it had already been pushed to the background.\r\n            // This may happen in some mobile browsers. A localStorage change in the foreground window\r\n            // will not be detected in the background window via the storage event.\r\n            // This was detected in iOS 7.x mobile browsers\r\n            if (this.fallbackToPolling) {\r\n                this.startPolling();\r\n            }\r\n            else {\r\n                this.attachListener();\r\n            }\r\n        }\r\n        if (!this.listeners[key]) {\r\n            this.listeners[key] = new Set();\r\n            // Populate the cache to avoid spuriously triggering on first poll.\r\n            this.localCache[key] = this.storage.getItem(key);\r\n        }\r\n        this.listeners[key].add(listener);\r\n    }\r\n    _removeListener(key, listener) {\r\n        if (this.listeners[key]) {\r\n            this.listeners[key].delete(listener);\r\n            if (this.listeners[key].size === 0) {\r\n                delete this.listeners[key];\r\n            }\r\n        }\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.detachListener();\r\n            this.stopPolling();\r\n        }\r\n    }\r\n    // Update local cache on base operations:\r\n    async _set(key, value) {\r\n        await super._set(key, value);\r\n        this.localCache[key] = JSON.stringify(value);\r\n    }\r\n    async _get(key) {\r\n        const value = await super._get(key);\r\n        this.localCache[key] = JSON.stringify(value);\r\n        return value;\r\n    }\r\n    async _remove(key) {\r\n        await super._remove(key);\r\n        delete this.localCache[key];\r\n    }\r\n}\r\nBrowserLocalPersistence.type = 'LOCAL';\r\n/**\r\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst browserLocalPersistence = BrowserLocalPersistence;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass BrowserSessionPersistence extends BrowserPersistenceClass {\r\n    constructor() {\r\n        super(() => window.sessionStorage, \"SESSION\" /* SESSION */);\r\n    }\r\n    _addListener(_key, _listener) {\r\n        // Listeners are not supported for session storage since it cannot be shared across windows\r\n        return;\r\n    }\r\n    _removeListener(_key, _listener) {\r\n        // Listeners are not supported for session storage since it cannot be shared across windows\r\n        return;\r\n    }\r\n}\r\nBrowserSessionPersistence.type = 'SESSION';\r\n/**\r\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst browserSessionPersistence = BrowserSessionPersistence;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\r\n *\r\n * @param promises - Array of promises to wait on.\r\n */\r\nfunction _allSettled(promises) {\r\n    return Promise.all(promises.map(async (promise) => {\r\n        try {\r\n            const value = await promise;\r\n            return {\r\n                fulfilled: true,\r\n                value\r\n            };\r\n        }\r\n        catch (reason) {\r\n            return {\r\n                fulfilled: false,\r\n                reason\r\n            };\r\n        }\r\n    }));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface class for receiving messages.\r\n *\r\n */\r\nclass Receiver {\r\n    constructor(eventTarget) {\r\n        this.eventTarget = eventTarget;\r\n        this.handlersMap = {};\r\n        this.boundEventHandler = this.handleEvent.bind(this);\r\n    }\r\n    /**\r\n     * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\r\n     *\r\n     * @param eventTarget - An event target (such as window or self) through which the underlying\r\n     * messages will be received.\r\n     */\r\n    static _getInstance(eventTarget) {\r\n        // The results are stored in an array since objects can't be keys for other\r\n        // objects. In addition, setting a unique property on an event target as a\r\n        // hash map key may not be allowed due to CORS restrictions.\r\n        const existingInstance = this.receivers.find(receiver => receiver.isListeningto(eventTarget));\r\n        if (existingInstance) {\r\n            return existingInstance;\r\n        }\r\n        const newInstance = new Receiver(eventTarget);\r\n        this.receivers.push(newInstance);\r\n        return newInstance;\r\n    }\r\n    isListeningto(eventTarget) {\r\n        return this.eventTarget === eventTarget;\r\n    }\r\n    /**\r\n     * Fans out a MessageEvent to the appropriate listeners.\r\n     *\r\n     * @remarks\r\n     * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\r\n     * finished processing.\r\n     *\r\n     * @param event - The MessageEvent.\r\n     *\r\n     */\r\n    async handleEvent(event) {\r\n        const messageEvent = event;\r\n        const { eventId, eventType, data } = messageEvent.data;\r\n        const handlers = this.handlersMap[eventType];\r\n        if (!(handlers === null || handlers === void 0 ? void 0 : handlers.size)) {\r\n            return;\r\n        }\r\n        messageEvent.ports[0].postMessage({\r\n            status: \"ack\" /* ACK */,\r\n            eventId,\r\n            eventType\r\n        });\r\n        const promises = Array.from(handlers).map(async (handler) => handler(messageEvent.origin, data));\r\n        const response = await _allSettled(promises);\r\n        messageEvent.ports[0].postMessage({\r\n            status: \"done\" /* DONE */,\r\n            eventId,\r\n            eventType,\r\n            response\r\n        });\r\n    }\r\n    /**\r\n     * Subscribe an event handler for a particular event.\r\n     *\r\n     * @param eventType - Event name to subscribe to.\r\n     * @param eventHandler - The event handler which should receive the events.\r\n     *\r\n     */\r\n    _subscribe(eventType, eventHandler) {\r\n        if (Object.keys(this.handlersMap).length === 0) {\r\n            this.eventTarget.addEventListener('message', this.boundEventHandler);\r\n        }\r\n        if (!this.handlersMap[eventType]) {\r\n            this.handlersMap[eventType] = new Set();\r\n        }\r\n        this.handlersMap[eventType].add(eventHandler);\r\n    }\r\n    /**\r\n     * Unsubscribe an event handler from a particular event.\r\n     *\r\n     * @param eventType - Event name to unsubscribe from.\r\n     * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\r\n     *\r\n     */\r\n    _unsubscribe(eventType, eventHandler) {\r\n        if (this.handlersMap[eventType] && eventHandler) {\r\n            this.handlersMap[eventType].delete(eventHandler);\r\n        }\r\n        if (!eventHandler || this.handlersMap[eventType].size === 0) {\r\n            delete this.handlersMap[eventType];\r\n        }\r\n        if (Object.keys(this.handlersMap).length === 0) {\r\n            this.eventTarget.removeEventListener('message', this.boundEventHandler);\r\n        }\r\n    }\r\n}\r\nReceiver.receivers = [];\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _generateEventId(prefix = '', digits = 10) {\r\n    let random = '';\r\n    for (let i = 0; i < digits; i++) {\r\n        random += Math.floor(Math.random() * 10);\r\n    }\r\n    return prefix + random;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface for sending messages and waiting for a completion response.\r\n *\r\n */\r\nclass Sender {\r\n    constructor(target) {\r\n        this.target = target;\r\n        this.handlers = new Set();\r\n    }\r\n    /**\r\n     * Unsubscribe the handler and remove it from our tracking Set.\r\n     *\r\n     * @param handler - The handler to unsubscribe.\r\n     */\r\n    removeMessageHandler(handler) {\r\n        if (handler.messageChannel) {\r\n            handler.messageChannel.port1.removeEventListener('message', handler.onMessage);\r\n            handler.messageChannel.port1.close();\r\n        }\r\n        this.handlers.delete(handler);\r\n    }\r\n    /**\r\n     * Send a message to the Receiver located at {@link target}.\r\n     *\r\n     * @remarks\r\n     * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\r\n     * receiver has had a chance to fully process the event.\r\n     *\r\n     * @param eventType - Type of event to send.\r\n     * @param data - The payload of the event.\r\n     * @param timeout - Timeout for waiting on an ACK from the receiver.\r\n     *\r\n     * @returns An array of settled promises from all the handlers that were listening on the receiver.\r\n     */\r\n    async _send(eventType, data, timeout = 50 /* ACK */) {\r\n        const messageChannel = typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\r\n        if (!messageChannel) {\r\n            throw new Error(\"connection_unavailable\" /* CONNECTION_UNAVAILABLE */);\r\n        }\r\n        // Node timers and browser timers return fundamentally different types.\r\n        // We don't actually care what the value is but TS won't accept unknown and\r\n        // we can't cast properly in both environments.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        let completionTimer;\r\n        let handler;\r\n        return new Promise((resolve, reject) => {\r\n            const eventId = _generateEventId('', 20);\r\n            messageChannel.port1.start();\r\n            const ackTimer = setTimeout(() => {\r\n                reject(new Error(\"unsupported_event\" /* UNSUPPORTED_EVENT */));\r\n            }, timeout);\r\n            handler = {\r\n                messageChannel,\r\n                onMessage(event) {\r\n                    const messageEvent = event;\r\n                    if (messageEvent.data.eventId !== eventId) {\r\n                        return;\r\n                    }\r\n                    switch (messageEvent.data.status) {\r\n                        case \"ack\" /* ACK */:\r\n                            // The receiver should ACK first.\r\n                            clearTimeout(ackTimer);\r\n                            completionTimer = setTimeout(() => {\r\n                                reject(new Error(\"timeout\" /* TIMEOUT */));\r\n                            }, 3000 /* COMPLETION */);\r\n                            break;\r\n                        case \"done\" /* DONE */:\r\n                            // Once the receiver's handlers are finished we will get the results.\r\n                            clearTimeout(completionTimer);\r\n                            resolve(messageEvent.data.response);\r\n                            break;\r\n                        default:\r\n                            clearTimeout(ackTimer);\r\n                            clearTimeout(completionTimer);\r\n                            reject(new Error(\"invalid_response\" /* INVALID_RESPONSE */));\r\n                            break;\r\n                    }\r\n                }\r\n            };\r\n            this.handlers.add(handler);\r\n            messageChannel.port1.addEventListener('message', handler.onMessage);\r\n            this.target.postMessage({\r\n                eventType,\r\n                eventId,\r\n                data\r\n            }, [messageChannel.port2]);\r\n        }).finally(() => {\r\n            if (handler) {\r\n                this.removeMessageHandler(handler);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Lazy accessor for window, since the compat layer won't tree shake this out,\r\n * we need to make sure not to mess with window unless we have to\r\n */\r\nfunction _window() {\r\n    return window;\r\n}\r\nfunction _setWindowLocation(url) {\r\n    _window().location.href = url;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _isWorker() {\r\n    return (typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\r\n        typeof _window()['importScripts'] === 'function');\r\n}\r\nasync function _getActiveServiceWorker() {\r\n    if (!(navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker)) {\r\n        return null;\r\n    }\r\n    try {\r\n        const registration = await navigator.serviceWorker.ready;\r\n        return registration.active;\r\n    }\r\n    catch (_a) {\r\n        return null;\r\n    }\r\n}\r\nfunction _getServiceWorkerController() {\r\n    var _a;\r\n    return ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker) === null || _a === void 0 ? void 0 : _a.controller) || null;\r\n}\r\nfunction _getWorkerGlobalScope() {\r\n    return _isWorker() ? self : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebaseLocalStorageDb';\r\nconst DB_VERSION = 1;\r\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\r\nconst DB_DATA_KEYPATH = 'fbase_key';\r\n/**\r\n * Promise wrapper for IDBRequest\r\n *\r\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\r\n *\r\n */\r\nclass DBPromise {\r\n    constructor(request) {\r\n        this.request = request;\r\n    }\r\n    toPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            this.request.addEventListener('success', () => {\r\n                resolve(this.request.result);\r\n            });\r\n            this.request.addEventListener('error', () => {\r\n                reject(this.request.error);\r\n            });\r\n        });\r\n    }\r\n}\r\nfunction getObjectStore(db, isReadWrite) {\r\n    return db\r\n        .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\r\n        .objectStore(DB_OBJECTSTORE_NAME);\r\n}\r\nfunction _deleteDatabase() {\r\n    const request = indexedDB.deleteDatabase(DB_NAME);\r\n    return new DBPromise(request).toPromise();\r\n}\r\nfunction _openDatabase() {\r\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\r\n    return new Promise((resolve, reject) => {\r\n        request.addEventListener('error', () => {\r\n            reject(request.error);\r\n        });\r\n        request.addEventListener('upgradeneeded', () => {\r\n            const db = request.result;\r\n            try {\r\n                db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n        request.addEventListener('success', async () => {\r\n            const db = request.result;\r\n            // Strange bug that occurs in Firefox when multiple tabs are opened at the\r\n            // same time. The only way to recover seems to be deleting the database\r\n            // and re-initializing it.\r\n            // https://github.com/firebase/firebase-js-sdk/issues/634\r\n            if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\r\n                // Need to close the database or else you get a `blocked` event\r\n                db.close();\r\n                await _deleteDatabase();\r\n                resolve(await _openDatabase());\r\n            }\r\n            else {\r\n                resolve(db);\r\n            }\r\n        });\r\n    });\r\n}\r\nasync function _putObject(db, key, value) {\r\n    const request = getObjectStore(db, true).put({\r\n        [DB_DATA_KEYPATH]: key,\r\n        value\r\n    });\r\n    return new DBPromise(request).toPromise();\r\n}\r\nasync function getObject(db, key) {\r\n    const request = getObjectStore(db, false).get(key);\r\n    const data = await new DBPromise(request).toPromise();\r\n    return data === undefined ? null : data.value;\r\n}\r\nfunction _deleteObject(db, key) {\r\n    const request = getObjectStore(db, true).delete(key);\r\n    return new DBPromise(request).toPromise();\r\n}\r\nconst _POLLING_INTERVAL_MS = 800;\r\nconst _TRANSACTION_RETRY_COUNT = 3;\r\nclass IndexedDBLocalPersistence {\r\n    constructor() {\r\n        this.type = \"LOCAL\" /* LOCAL */;\r\n        this._shouldAllowMigration = true;\r\n        this.listeners = {};\r\n        this.localCache = {};\r\n        // setTimeout return value is platform specific\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.pollTimer = null;\r\n        this.pendingWrites = 0;\r\n        this.receiver = null;\r\n        this.sender = null;\r\n        this.serviceWorkerReceiverAvailable = false;\r\n        this.activeServiceWorker = null;\r\n        // Fire & forget the service worker registration as it may never resolve\r\n        this._workerInitializationPromise =\r\n            this.initializeServiceWorkerMessaging().then(() => { }, () => { });\r\n    }\r\n    async _openDb() {\r\n        if (this.db) {\r\n            return this.db;\r\n        }\r\n        this.db = await _openDatabase();\r\n        return this.db;\r\n    }\r\n    async _withRetries(op) {\r\n        let numAttempts = 0;\r\n        while (true) {\r\n            try {\r\n                const db = await this._openDb();\r\n                return await op(db);\r\n            }\r\n            catch (e) {\r\n                if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\r\n                    throw e;\r\n                }\r\n                if (this.db) {\r\n                    this.db.close();\r\n                    this.db = undefined;\r\n                }\r\n                // TODO: consider adding exponential backoff\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\r\n     * postMessage interface to send these events to the worker ourselves.\r\n     */\r\n    async initializeServiceWorkerMessaging() {\r\n        return _isWorker() ? this.initializeReceiver() : this.initializeSender();\r\n    }\r\n    /**\r\n     * As the worker we should listen to events from the main window.\r\n     */\r\n    async initializeReceiver() {\r\n        this.receiver = Receiver._getInstance(_getWorkerGlobalScope());\r\n        // Refresh from persistence if we receive a KeyChanged message.\r\n        this.receiver._subscribe(\"keyChanged\" /* KEY_CHANGED */, async (_origin, data) => {\r\n            const keys = await this._poll();\r\n            return {\r\n                keyProcessed: keys.includes(data.key)\r\n            };\r\n        });\r\n        // Let the sender know that we are listening so they give us more timeout.\r\n        this.receiver._subscribe(\"ping\" /* PING */, async (_origin, _data) => {\r\n            return [\"keyChanged\" /* KEY_CHANGED */];\r\n        });\r\n    }\r\n    /**\r\n     * As the main window, we should let the worker know when keys change (set and remove).\r\n     *\r\n     * @remarks\r\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\r\n     * may not resolve.\r\n     */\r\n    async initializeSender() {\r\n        var _a, _b;\r\n        // Check to see if there's an active service worker.\r\n        this.activeServiceWorker = await _getActiveServiceWorker();\r\n        if (!this.activeServiceWorker) {\r\n            return;\r\n        }\r\n        this.sender = new Sender(this.activeServiceWorker);\r\n        // Ping the service worker to check what events they can handle.\r\n        const results = await this.sender._send(\"ping\" /* PING */, {}, 800 /* LONG_ACK */);\r\n        if (!results) {\r\n            return;\r\n        }\r\n        if (((_a = results[0]) === null || _a === void 0 ? void 0 : _a.fulfilled) &&\r\n            ((_b = results[0]) === null || _b === void 0 ? void 0 : _b.value.includes(\"keyChanged\" /* KEY_CHANGED */))) {\r\n            this.serviceWorkerReceiverAvailable = true;\r\n        }\r\n    }\r\n    /**\r\n     * Let the worker know about a changed key, the exact key doesn't technically matter since the\r\n     * worker will just trigger a full sync anyway.\r\n     *\r\n     * @remarks\r\n     * For now, we only support one service worker per page.\r\n     *\r\n     * @param key - Storage key which changed.\r\n     */\r\n    async notifyServiceWorker(key) {\r\n        if (!this.sender ||\r\n            !this.activeServiceWorker ||\r\n            _getServiceWorkerController() !== this.activeServiceWorker) {\r\n            return;\r\n        }\r\n        try {\r\n            await this.sender._send(\"keyChanged\" /* KEY_CHANGED */, { key }, \r\n            // Use long timeout if receiver has previously responded to a ping from us.\r\n            this.serviceWorkerReceiverAvailable\r\n                ? 800 /* LONG_ACK */\r\n                : 50 /* ACK */);\r\n        }\r\n        catch (_a) {\r\n            // This is a best effort approach. Ignore errors.\r\n        }\r\n    }\r\n    async _isAvailable() {\r\n        try {\r\n            if (!indexedDB) {\r\n                return false;\r\n            }\r\n            const db = await _openDatabase();\r\n            await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\r\n            await _deleteObject(db, STORAGE_AVAILABLE_KEY);\r\n            return true;\r\n        }\r\n        catch (_a) { }\r\n        return false;\r\n    }\r\n    async _withPendingWrite(write) {\r\n        this.pendingWrites++;\r\n        try {\r\n            await write();\r\n        }\r\n        finally {\r\n            this.pendingWrites--;\r\n        }\r\n    }\r\n    async _set(key, value) {\r\n        return this._withPendingWrite(async () => {\r\n            await this._withRetries((db) => _putObject(db, key, value));\r\n            this.localCache[key] = value;\r\n            return this.notifyServiceWorker(key);\r\n        });\r\n    }\r\n    async _get(key) {\r\n        const obj = (await this._withRetries((db) => getObject(db, key)));\r\n        this.localCache[key] = obj;\r\n        return obj;\r\n    }\r\n    async _remove(key) {\r\n        return this._withPendingWrite(async () => {\r\n            await this._withRetries((db) => _deleteObject(db, key));\r\n            delete this.localCache[key];\r\n            return this.notifyServiceWorker(key);\r\n        });\r\n    }\r\n    async _poll() {\r\n        // TODO: check if we need to fallback if getAll is not supported\r\n        const result = await this._withRetries((db) => {\r\n            const getAllRequest = getObjectStore(db, false).getAll();\r\n            return new DBPromise(getAllRequest).toPromise();\r\n        });\r\n        if (!result) {\r\n            return [];\r\n        }\r\n        // If we have pending writes in progress abort, we'll get picked up on the next poll\r\n        if (this.pendingWrites !== 0) {\r\n            return [];\r\n        }\r\n        const keys = [];\r\n        const keysInResult = new Set();\r\n        for (const { fbase_key: key, value } of result) {\r\n            keysInResult.add(key);\r\n            if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\r\n                this.notifyListeners(key, value);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (const localKey of Object.keys(this.localCache)) {\r\n            if (this.localCache[localKey] && !keysInResult.has(localKey)) {\r\n                // Deleted\r\n                this.notifyListeners(localKey, null);\r\n                keys.push(localKey);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n    notifyListeners(key, newValue) {\r\n        this.localCache[key] = newValue;\r\n        const listeners = this.listeners[key];\r\n        if (listeners) {\r\n            for (const listener of Array.from(listeners)) {\r\n                listener(newValue);\r\n            }\r\n        }\r\n    }\r\n    startPolling() {\r\n        this.stopPolling();\r\n        this.pollTimer = setInterval(async () => this._poll(), _POLLING_INTERVAL_MS);\r\n    }\r\n    stopPolling() {\r\n        if (this.pollTimer) {\r\n            clearInterval(this.pollTimer);\r\n            this.pollTimer = null;\r\n        }\r\n    }\r\n    _addListener(key, listener) {\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.startPolling();\r\n        }\r\n        if (!this.listeners[key]) {\r\n            this.listeners[key] = new Set();\r\n            // Populate the cache to avoid spuriously triggering on first poll.\r\n            void this._get(key); // This can happen in the background async and we can return immediately.\r\n        }\r\n        this.listeners[key].add(listener);\r\n    }\r\n    _removeListener(key, listener) {\r\n        if (this.listeners[key]) {\r\n            this.listeners[key].delete(listener);\r\n            if (this.listeners[key].size === 0) {\r\n                delete this.listeners[key];\r\n            }\r\n        }\r\n        if (Object.keys(this.listeners).length === 0) {\r\n            this.stopPolling();\r\n        }\r\n    }\r\n}\r\nIndexedDBLocalPersistence.type = 'LOCAL';\r\n/**\r\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\r\n * for the underlying storage.\r\n *\r\n * @public\r\n */\r\nconst indexedDBLocalPersistence = IndexedDBLocalPersistence;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction startSignInPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaSignIn:start\" /* START_PHONE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\r\n}\r\nfunction finalizeSignInPhoneMfa(auth, request) {\r\n    return _performApiRequest(auth, \"POST\" /* POST */, \"/v2/accounts/mfaSignIn:finalize\" /* FINALIZE_PHONE_MFA_SIGN_IN */, _addTidIfNecessary(auth, request));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function getRecaptchaParams(auth) {\r\n    return ((await _performApiRequest(auth, \"GET\" /* GET */, \"/v1/recaptchaParams\" /* GET_RECAPTCHA_PARAM */)).recaptchaSiteKey || '');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getScriptParentElement() {\r\n    var _a, _b;\r\n    return (_b = (_a = document.getElementsByTagName('head')) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : document;\r\n}\r\nfunction _loadJS(url) {\r\n    // TODO: consider adding timeout support & cancellation\r\n    return new Promise((resolve, reject) => {\r\n        const el = document.createElement('script');\r\n        el.setAttribute('src', url);\r\n        el.onload = resolve;\r\n        el.onerror = e => {\r\n            const error = _createError(\"internal-error\" /* INTERNAL_ERROR */);\r\n            error.customData = e;\r\n            reject(error);\r\n        };\r\n        el.type = 'text/javascript';\r\n        el.charset = 'UTF-8';\r\n        getScriptParentElement().appendChild(el);\r\n    });\r\n}\r\nfunction _generateCallbackName(prefix) {\r\n    return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _SOLVE_TIME_MS = 500;\r\nconst _EXPIRATION_TIME_MS = 60000;\r\nconst _WIDGET_ID_START = 1000000000000;\r\nclass MockReCaptcha {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.counter = _WIDGET_ID_START;\r\n        this._widgets = new Map();\r\n    }\r\n    render(container, parameters) {\r\n        const id = this.counter;\r\n        this._widgets.set(id, new MockWidget(container, this.auth.name, parameters || {}));\r\n        this.counter++;\r\n        return id;\r\n    }\r\n    reset(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        void ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.delete());\r\n        this._widgets.delete(id);\r\n    }\r\n    getResponse(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        return ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.getResponse()) || '';\r\n    }\r\n    async execute(optWidgetId) {\r\n        var _a;\r\n        const id = optWidgetId || _WIDGET_ID_START;\r\n        void ((_a = this._widgets.get(id)) === null || _a === void 0 ? void 0 : _a.execute());\r\n        return '';\r\n    }\r\n}\r\nclass MockWidget {\r\n    constructor(containerOrId, appName, params) {\r\n        this.params = params;\r\n        this.timerId = null;\r\n        this.deleted = false;\r\n        this.responseToken = null;\r\n        this.clickHandler = () => {\r\n            this.execute();\r\n        };\r\n        const container = typeof containerOrId === 'string'\r\n            ? document.getElementById(containerOrId)\r\n            : containerOrId;\r\n        _assert(container, \"argument-error\" /* ARGUMENT_ERROR */, { appName });\r\n        this.container = container;\r\n        this.isVisible = this.params.size !== 'invisible';\r\n        if (this.isVisible) {\r\n            this.execute();\r\n        }\r\n        else {\r\n            this.container.addEventListener('click', this.clickHandler);\r\n        }\r\n    }\r\n    getResponse() {\r\n        this.checkIfDeleted();\r\n        return this.responseToken;\r\n    }\r\n    delete() {\r\n        this.checkIfDeleted();\r\n        this.deleted = true;\r\n        if (this.timerId) {\r\n            clearTimeout(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n        this.container.removeEventListener('click', this.clickHandler);\r\n    }\r\n    execute() {\r\n        this.checkIfDeleted();\r\n        if (this.timerId) {\r\n            return;\r\n        }\r\n        this.timerId = window.setTimeout(() => {\r\n            this.responseToken = generateRandomAlphaNumericString(50);\r\n            const { callback, 'expired-callback': expiredCallback } = this.params;\r\n            if (callback) {\r\n                try {\r\n                    callback(this.responseToken);\r\n                }\r\n                catch (e) { }\r\n            }\r\n            this.timerId = window.setTimeout(() => {\r\n                this.timerId = null;\r\n                this.responseToken = null;\r\n                if (expiredCallback) {\r\n                    try {\r\n                        expiredCallback();\r\n                    }\r\n                    catch (e) { }\r\n                }\r\n                if (this.isVisible) {\r\n                    this.execute();\r\n                }\r\n            }, _EXPIRATION_TIME_MS);\r\n        }, _SOLVE_TIME_MS);\r\n    }\r\n    checkIfDeleted() {\r\n        if (this.deleted) {\r\n            throw new Error('reCAPTCHA mock was already deleted!');\r\n        }\r\n    }\r\n}\r\nfunction generateRandomAlphaNumericString(len) {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < len; i++) {\r\n        chars.push(allowedChars.charAt(Math.floor(Math.random() * allowedChars.length)));\r\n    }\r\n    return chars.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// ReCaptcha will load using the same callback, so the callback function needs\r\n// to be kept around\r\nconst _JSLOAD_CALLBACK = _generateCallbackName('rcb');\r\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\r\nconst RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\r\n/**\r\n * Loader for the GReCaptcha library. There should only ever be one of this.\r\n */\r\nclass ReCaptchaLoaderImpl {\r\n    constructor() {\r\n        this.hostLanguage = '';\r\n        this.counter = 0;\r\n        this.librarySeparatelyLoaded = !!_window().grecaptcha;\r\n    }\r\n    load(auth, hl = '') {\r\n        _assert(isHostLanguageValid(hl), auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        if (this.shouldResolveImmediately(hl)) {\r\n            return Promise.resolve(_window().grecaptcha);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const networkTimeout = _window().setTimeout(() => {\r\n                reject(_createError(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */));\r\n            }, NETWORK_TIMEOUT_DELAY.get());\r\n            _window()[_JSLOAD_CALLBACK] = () => {\r\n                _window().clearTimeout(networkTimeout);\r\n                delete _window()[_JSLOAD_CALLBACK];\r\n                const recaptcha = _window().grecaptcha;\r\n                if (!recaptcha) {\r\n                    reject(_createError(auth, \"internal-error\" /* INTERNAL_ERROR */));\r\n                    return;\r\n                }\r\n                // Wrap the greptcha render function so that we know if the developer has\r\n                // called it separately\r\n                const render = recaptcha.render;\r\n                recaptcha.render = (container, params) => {\r\n                    const widgetId = render(container, params);\r\n                    this.counter++;\r\n                    return widgetId;\r\n                };\r\n                this.hostLanguage = hl;\r\n                resolve(recaptcha);\r\n            };\r\n            const url = `${RECAPTCHA_BASE}?${querystring({\r\n                onload: _JSLOAD_CALLBACK,\r\n                render: 'explicit',\r\n                hl\r\n            })}`;\r\n            _loadJS(url).catch(() => {\r\n                clearTimeout(networkTimeout);\r\n                reject(_createError(auth, \"internal-error\" /* INTERNAL_ERROR */));\r\n            });\r\n        });\r\n    }\r\n    clearedOneInstance() {\r\n        this.counter--;\r\n    }\r\n    shouldResolveImmediately(hl) {\r\n        // We can resolve immediately if:\r\n        //   • grecaptcha is already defined AND (\r\n        //     1. the requested language codes are the same OR\r\n        //     2. there exists already a ReCaptcha on the page\r\n        //     3. the library was already loaded by the app\r\n        // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\r\n        // that are already in the page\r\n        return (!!_window().grecaptcha &&\r\n            (hl === this.hostLanguage ||\r\n                this.counter > 0 ||\r\n                this.librarySeparatelyLoaded));\r\n    }\r\n}\r\nfunction isHostLanguageValid(hl) {\r\n    return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\r\n}\r\nclass MockReCaptchaLoaderImpl {\r\n    async load(auth) {\r\n        return new MockReCaptcha(auth);\r\n    }\r\n    clearedOneInstance() { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\r\nconst DEFAULT_PARAMS = {\r\n    theme: 'light',\r\n    type: 'image'\r\n};\r\n/**\r\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\r\n *\r\n * @public\r\n */\r\nclass RecaptchaVerifier {\r\n    /**\r\n     *\r\n     * @param containerOrId - The reCAPTCHA container parameter.\r\n     *\r\n     * @remarks\r\n     * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\r\n     * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\r\n     * an element ID. The corresponding element must also must be in the DOM at the time of\r\n     * initialization.\r\n     *\r\n     * @param parameters - The optional reCAPTCHA parameters.\r\n     *\r\n     * @remarks\r\n     * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\r\n     * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\r\n     * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\r\n     * 'invisible'.\r\n     *\r\n     * @param authExtern - The corresponding Firebase {@link Auth} instance.\r\n     *\r\n     * @remarks\r\n     * If none is provided, the default Firebase {@link Auth} instance is used. A Firebase {@link Auth} instance\r\n     * must be initialized with an API key, otherwise an error will be thrown.\r\n     */\r\n    constructor(containerOrId, parameters = Object.assign({}, DEFAULT_PARAMS), authExtern) {\r\n        this.parameters = parameters;\r\n        /**\r\n         * The application verifier type.\r\n         *\r\n         * @remarks\r\n         * For a reCAPTCHA verifier, this is 'recaptcha'.\r\n         */\r\n        this.type = RECAPTCHA_VERIFIER_TYPE;\r\n        this.destroyed = false;\r\n        this.widgetId = null;\r\n        this.tokenChangeListeners = new Set();\r\n        this.renderPromise = null;\r\n        this.recaptcha = null;\r\n        this.auth = _castAuth(authExtern);\r\n        this.isInvisible = this.parameters.size === 'invisible';\r\n        _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        const container = typeof containerOrId === 'string'\r\n            ? document.getElementById(containerOrId)\r\n            : containerOrId;\r\n        _assert(container, this.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        this.container = container;\r\n        this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\r\n        this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\r\n            ? new MockReCaptchaLoaderImpl()\r\n            : new ReCaptchaLoaderImpl();\r\n        this.validateStartingState();\r\n        // TODO: Figure out if sdk version is needed\r\n    }\r\n    /**\r\n     * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\r\n     *\r\n     * @returns A Promise for the reCAPTCHA token.\r\n     */\r\n    async verify() {\r\n        this.assertNotDestroyed();\r\n        const id = await this.render();\r\n        const recaptcha = this.getAssertedRecaptcha();\r\n        const response = recaptcha.getResponse(id);\r\n        if (response) {\r\n            return response;\r\n        }\r\n        return new Promise(resolve => {\r\n            const tokenChange = (token) => {\r\n                if (!token) {\r\n                    return; // Ignore token expirations.\r\n                }\r\n                this.tokenChangeListeners.delete(tokenChange);\r\n                resolve(token);\r\n            };\r\n            this.tokenChangeListeners.add(tokenChange);\r\n            if (this.isInvisible) {\r\n                recaptcha.execute(id);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Renders the reCAPTCHA widget on the page.\r\n     *\r\n     * @returns A Promise that resolves with the reCAPTCHA widget ID.\r\n     */\r\n    render() {\r\n        try {\r\n            this.assertNotDestroyed();\r\n        }\r\n        catch (e) {\r\n            // This method returns a promise. Since it's not async (we want to return the\r\n            // _same_ promise if rendering is still occurring), the API surface should\r\n            // reject with the error rather than just throw\r\n            return Promise.reject(e);\r\n        }\r\n        if (this.renderPromise) {\r\n            return this.renderPromise;\r\n        }\r\n        this.renderPromise = this.makeRenderPromise().catch(e => {\r\n            this.renderPromise = null;\r\n            throw e;\r\n        });\r\n        return this.renderPromise;\r\n    }\r\n    /** @internal */\r\n    _reset() {\r\n        this.assertNotDestroyed();\r\n        if (this.widgetId !== null) {\r\n            this.getAssertedRecaptcha().reset(this.widgetId);\r\n        }\r\n    }\r\n    /**\r\n     * Clears the reCAPTCHA widget from the page and destroys the instance.\r\n     */\r\n    clear() {\r\n        this.assertNotDestroyed();\r\n        this.destroyed = true;\r\n        this._recaptchaLoader.clearedOneInstance();\r\n        if (!this.isInvisible) {\r\n            this.container.childNodes.forEach(node => {\r\n                this.container.removeChild(node);\r\n            });\r\n        }\r\n    }\r\n    validateStartingState() {\r\n        _assert(!this.parameters.sitekey, this.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        _assert(this.isInvisible || !this.container.hasChildNodes(), this.auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        _assert(typeof document !== 'undefined', this.auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    makeTokenCallback(existing) {\r\n        return token => {\r\n            this.tokenChangeListeners.forEach(listener => listener(token));\r\n            if (typeof existing === 'function') {\r\n                existing(token);\r\n            }\r\n            else if (typeof existing === 'string') {\r\n                const globalFunc = _window()[existing];\r\n                if (typeof globalFunc === 'function') {\r\n                    globalFunc(token);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    assertNotDestroyed() {\r\n        _assert(!this.destroyed, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    }\r\n    async makeRenderPromise() {\r\n        await this.init();\r\n        if (!this.widgetId) {\r\n            let container = this.container;\r\n            if (!this.isInvisible) {\r\n                const guaranteedEmpty = document.createElement('div');\r\n                container.appendChild(guaranteedEmpty);\r\n                container = guaranteedEmpty;\r\n            }\r\n            this.widgetId = this.getAssertedRecaptcha().render(container, this.parameters);\r\n        }\r\n        return this.widgetId;\r\n    }\r\n    async init() {\r\n        _assert(_isHttpOrHttps() && !_isWorker(), this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        await domReady();\r\n        this.recaptcha = await this._recaptchaLoader.load(this.auth, this.auth.languageCode || undefined);\r\n        const siteKey = await getRecaptchaParams(this.auth);\r\n        _assert(siteKey, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        this.parameters.sitekey = siteKey;\r\n    }\r\n    getAssertedRecaptcha() {\r\n        _assert(this.recaptcha, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.recaptcha;\r\n    }\r\n}\r\nfunction domReady() {\r\n    let resolver = null;\r\n    return new Promise(resolve => {\r\n        if (document.readyState === 'complete') {\r\n            resolve();\r\n            return;\r\n        }\r\n        // Document not ready, wait for load before resolving.\r\n        // Save resolver, so we can remove listener in case it was externally\r\n        // cancelled.\r\n        resolver = () => resolve();\r\n        window.addEventListener('load', resolver);\r\n    }).catch(e => {\r\n        if (resolver) {\r\n            window.removeEventListener('load', resolver);\r\n        }\r\n        throw e;\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ConfirmationResultImpl {\r\n    constructor(verificationId, onConfirmation) {\r\n        this.verificationId = verificationId;\r\n        this.onConfirmation = onConfirmation;\r\n    }\r\n    confirm(verificationCode) {\r\n        const authCredential = PhoneAuthCredential._fromVerification(this.verificationId, verificationCode);\r\n        return this.onConfirmation(authCredential);\r\n    }\r\n}\r\n/**\r\n * Asynchronously signs in using a phone number.\r\n *\r\n * @remarks\r\n * This method sends a code via SMS to the given\r\n * phone number, and returns a {@link ConfirmationResult}. After the user\r\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\r\n * with the code to sign the user in.\r\n *\r\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\r\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\r\n * This function can work on other platforms that do not support the\r\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\r\n * third-party {@link ApplicationVerifier} implementation.\r\n *\r\n * @example\r\n * ```javascript\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\r\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n * // Obtain a verificationCode from the user.\r\n * const credential = await confirmationResult.confirm(verificationCode);\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function signInWithPhoneNumber(auth, phoneNumber, appVerifier) {\r\n    const authInternal = _castAuth(auth);\r\n    const verificationId = await _verifyPhoneNumber(authInternal, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => signInWithCredential(authInternal, cred));\r\n}\r\n/**\r\n * Links the user account with the given phone number.\r\n *\r\n * @param user - The user.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function linkWithPhoneNumber(user, phoneNumber, appVerifier) {\r\n    const userInternal = getModularInstance(user);\r\n    await _assertLinkedStatus(false, userInternal, \"phone\" /* PHONE */);\r\n    const verificationId = await _verifyPhoneNumber(userInternal.auth, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => linkWithCredential(userInternal, cred));\r\n}\r\n/**\r\n * Re-authenticates a user using a fresh phone credential.\r\n *\r\n * @remarks Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\r\n *\r\n * @param user - The user.\r\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\r\n * @param appVerifier - The {@link ApplicationVerifier}.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithPhoneNumber(user, phoneNumber, appVerifier) {\r\n    const userInternal = getModularInstance(user);\r\n    const verificationId = await _verifyPhoneNumber(userInternal.auth, phoneNumber, getModularInstance(appVerifier));\r\n    return new ConfirmationResultImpl(verificationId, cred => reauthenticateWithCredential(userInternal, cred));\r\n}\r\n/**\r\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\r\n *\r\n */\r\nasync function _verifyPhoneNumber(auth, options, verifier) {\r\n    var _a;\r\n    const recaptchaToken = await verifier.verify();\r\n    try {\r\n        _assert(typeof recaptchaToken === 'string', auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        _assert(verifier.type === RECAPTCHA_VERIFIER_TYPE, auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n        let phoneInfoOptions;\r\n        if (typeof options === 'string') {\r\n            phoneInfoOptions = {\r\n                phoneNumber: options\r\n            };\r\n        }\r\n        else {\r\n            phoneInfoOptions = options;\r\n        }\r\n        if ('session' in phoneInfoOptions) {\r\n            const session = phoneInfoOptions.session;\r\n            if ('phoneNumber' in phoneInfoOptions) {\r\n                _assert(session.type === \"enroll\" /* ENROLL */, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n                const response = await startEnrollPhoneMfa(auth, {\r\n                    idToken: session.credential,\r\n                    phoneEnrollmentInfo: {\r\n                        phoneNumber: phoneInfoOptions.phoneNumber,\r\n                        recaptchaToken\r\n                    }\r\n                });\r\n                return response.phoneSessionInfo.sessionInfo;\r\n            }\r\n            else {\r\n                _assert(session.type === \"signin\" /* SIGN_IN */, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n                const mfaEnrollmentId = ((_a = phoneInfoOptions.multiFactorHint) === null || _a === void 0 ? void 0 : _a.uid) ||\r\n                    phoneInfoOptions.multiFactorUid;\r\n                _assert(mfaEnrollmentId, auth, \"missing-multi-factor-info\" /* MISSING_MFA_INFO */);\r\n                const response = await startSignInPhoneMfa(auth, {\r\n                    mfaPendingCredential: session.credential,\r\n                    mfaEnrollmentId,\r\n                    phoneSignInInfo: {\r\n                        recaptchaToken\r\n                    }\r\n                });\r\n                return response.phoneResponseInfo.sessionInfo;\r\n            }\r\n        }\r\n        else {\r\n            const { sessionInfo } = await sendPhoneVerificationCode(auth, {\r\n                phoneNumber: phoneInfoOptions.phoneNumber,\r\n                recaptchaToken\r\n            });\r\n            return sessionInfo;\r\n        }\r\n    }\r\n    finally {\r\n        verifier._reset();\r\n    }\r\n}\r\n/**\r\n * Updates the user's phone number.\r\n *\r\n * @example\r\n * ```\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\r\n * const provider = new PhoneAuthProvider(auth);\r\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\r\n * // Obtain the verificationCode from the user.\r\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n * await updatePhoneNumber(user, phoneCredential);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param credential - A credential authenticating the new phone number.\r\n *\r\n * @public\r\n */\r\nasync function updatePhoneNumber(user, credential) {\r\n    await _link$1(getModularInstance(user), credential);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for generating an {@link PhoneAuthCredential}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // 'recaptcha-container' is the ID of an element in the DOM.\r\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\r\n * const provider = new PhoneAuthProvider(auth);\r\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\r\n * // Obtain the verificationCode from the user.\r\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n * const userCredential = await signInWithCredential(auth, phoneCredential);\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass PhoneAuthProvider {\r\n    /**\r\n     * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\r\n     *\r\n     */\r\n    constructor(auth) {\r\n        /** Always set to {@link ProviderId}.PHONE. */\r\n        this.providerId = PhoneAuthProvider.PROVIDER_ID;\r\n        this.auth = _castAuth(auth);\r\n    }\r\n    /**\r\n     *\r\n     * Starts a phone number authentication flow by sending a verification code to the given phone\r\n     * number.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n     * const userCredential = await signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * An alternative flow is provided using the `signInWithPhoneNumber` method.\r\n     * ```javascript\r\n     * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const userCredential = confirmationResult.confirm(verificationCode);\r\n     * ```\r\n     *\r\n     * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\r\n     * E.164 format (e.g. +16505550101).\r\n     * @param applicationVerifier - For abuse prevention, this method also requires a\r\n     * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\r\n     * {@link RecaptchaVerifier}.\r\n     *\r\n     * @returns A Promise for a verification ID that can be passed to\r\n     * {@link PhoneAuthProvider.credential} to identify this flow..\r\n     */\r\n    verifyPhoneNumber(phoneOptions, applicationVerifier) {\r\n        return _verifyPhoneNumber(this.auth, phoneOptions, getModularInstance(applicationVerifier));\r\n    }\r\n    /**\r\n     * Creates a phone auth credential, given the verification ID from\r\n     * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\r\n     * mobile device.\r\n     *\r\n     * @example\r\n     * ```javascript\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\r\n     * const userCredential = signInWithCredential(auth, authCredential);\r\n     * ```\r\n     *\r\n     * @example\r\n     * An alternative flow is provided using the `signInWithPhoneNumber` method.\r\n     * ```javascript\r\n     * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\r\n     * // Obtain verificationCode from the user.\r\n     * const userCredential = await confirmationResult.confirm(verificationCode);\r\n     * ```\r\n     *\r\n     * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\r\n     * @param verificationCode - The verification code sent to the user's mobile device.\r\n     *\r\n     * @returns The auth provider credential.\r\n     */\r\n    static credential(verificationId, verificationCode) {\r\n        return PhoneAuthCredential._fromVerification(verificationId, verificationCode);\r\n    }\r\n    /**\r\n     * Generates an {@link AuthCredential} from a {@link UserCredential}.\r\n     * @param userCredential - The user credential.\r\n     */\r\n    static credentialFromResult(userCredential) {\r\n        const credential = userCredential;\r\n        return PhoneAuthProvider.credentialFromTaggedObject(credential);\r\n    }\r\n    /**\r\n     * Returns an {@link AuthCredential} when passed an error.\r\n     *\r\n     * @remarks\r\n     *\r\n     * This method works for errors like\r\n     * `auth/account-exists-with-different-credentials`. This is useful for\r\n     * recovering when attempting to set a user's phone number but the number\r\n     * in question is already tied to another account. For example, the following\r\n     * code tries to update the current user's phone number, and if that\r\n     * fails, links the user with the account associated with that number:\r\n     *\r\n     * ```js\r\n     * const provider = new PhoneAuthProvider(auth);\r\n     * const verificationId = await provider.verifyPhoneNumber(number, verifier);\r\n     * try {\r\n     *   const code = ''; // Prompt the user for the verification code\r\n     *   await updatePhoneNumber(\r\n     *       auth.currentUser,\r\n     *       PhoneAuthProvider.credential(verificationId, code));\r\n     * } catch (e) {\r\n     *   if (e.code === 'auth/account-exists-with-different-credential') {\r\n     *     const cred = PhoneAuthProvider.credentialFromError(e);\r\n     *     await linkWithCredential(auth.currentUser, cred);\r\n     *   }\r\n     * }\r\n     *\r\n     * // At this point, auth.currentUser.phoneNumber === number.\r\n     * ```\r\n     *\r\n     * @param error - The error to generate a credential from.\r\n     */\r\n    static credentialFromError(error) {\r\n        return PhoneAuthProvider.credentialFromTaggedObject((error.customData || {}));\r\n    }\r\n    static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {\r\n        if (!tokenResponse) {\r\n            return null;\r\n        }\r\n        const { phoneNumber, temporaryProof } = tokenResponse;\r\n        if (phoneNumber && temporaryProof) {\r\n            return PhoneAuthCredential._fromTokenResponse(phoneNumber, temporaryProof);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n/** Always set to {@link ProviderId}.PHONE. */\r\nPhoneAuthProvider.PROVIDER_ID = \"phone\" /* PHONE */;\r\n/** Always set to {@link SignInMethod}.PHONE. */\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = \"phone\" /* PHONE */;\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Chooses a popup/redirect resolver to use. This prefers the override (which\r\n * is directly passed in), and falls back to the property set on the auth\r\n * object. If neither are available, this function errors w/ an argument error.\r\n */\r\nfunction _withDefaultResolver(auth, resolverOverride) {\r\n    if (resolverOverride) {\r\n        return _getInstance(resolverOverride);\r\n    }\r\n    _assert(auth._popupRedirectResolver, auth, \"argument-error\" /* ARGUMENT_ERROR */);\r\n    return auth._popupRedirectResolver;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass IdpCredential extends AuthCredential {\r\n    constructor(params) {\r\n        super(\"custom\" /* CUSTOM */, \"custom\" /* CUSTOM */);\r\n        this.params = params;\r\n    }\r\n    _getIdTokenResponse(auth) {\r\n        return signInWithIdp(auth, this._buildIdpRequest());\r\n    }\r\n    _linkToIdToken(auth, idToken) {\r\n        return signInWithIdp(auth, this._buildIdpRequest(idToken));\r\n    }\r\n    _getReauthenticationResolver(auth) {\r\n        return signInWithIdp(auth, this._buildIdpRequest());\r\n    }\r\n    _buildIdpRequest(idToken) {\r\n        const request = {\r\n            requestUri: this.params.requestUri,\r\n            sessionId: this.params.sessionId,\r\n            postBody: this.params.postBody,\r\n            tenantId: this.params.tenantId,\r\n            pendingToken: this.params.pendingToken,\r\n            returnSecureToken: true,\r\n            returnIdpCredential: true\r\n        };\r\n        if (idToken) {\r\n            request.idToken = idToken;\r\n        }\r\n        return request;\r\n    }\r\n}\r\nfunction _signIn(params) {\r\n    return _signInWithCredential(params.auth, new IdpCredential(params), params.bypassAuthState);\r\n}\r\nfunction _reauth(params) {\r\n    const { auth, user } = params;\r\n    _assert(user, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    return _reauthenticate(user, new IdpCredential(params), params.bypassAuthState);\r\n}\r\nasync function _link(params) {\r\n    const { auth, user } = params;\r\n    _assert(user, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    return _link$1(user, new IdpCredential(params), params.bypassAuthState);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\r\n * events\r\n */\r\nclass AbstractPopupRedirectOperation {\r\n    constructor(auth, filter, resolver, user, bypassAuthState = false) {\r\n        this.auth = auth;\r\n        this.resolver = resolver;\r\n        this.user = user;\r\n        this.bypassAuthState = bypassAuthState;\r\n        this.pendingPromise = null;\r\n        this.eventManager = null;\r\n        this.filter = Array.isArray(filter) ? filter : [filter];\r\n    }\r\n    execute() {\r\n        return new Promise(async (resolve, reject) => {\r\n            this.pendingPromise = { resolve, reject };\r\n            try {\r\n                this.eventManager = await this.resolver._initialize(this.auth);\r\n                await this.onExecution();\r\n                this.eventManager.registerConsumer(this);\r\n            }\r\n            catch (e) {\r\n                this.reject(e);\r\n            }\r\n        });\r\n    }\r\n    async onAuthEvent(event) {\r\n        const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\r\n        if (error) {\r\n            this.reject(error);\r\n            return;\r\n        }\r\n        const params = {\r\n            auth: this.auth,\r\n            requestUri: urlResponse,\r\n            sessionId: sessionId,\r\n            tenantId: tenantId || undefined,\r\n            postBody: postBody || undefined,\r\n            user: this.user,\r\n            bypassAuthState: this.bypassAuthState\r\n        };\r\n        try {\r\n            this.resolve(await this.getIdpTask(type)(params));\r\n        }\r\n        catch (e) {\r\n            this.reject(e);\r\n        }\r\n    }\r\n    onError(error) {\r\n        this.reject(error);\r\n    }\r\n    getIdpTask(type) {\r\n        switch (type) {\r\n            case \"signInViaPopup\" /* SIGN_IN_VIA_POPUP */:\r\n            case \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */:\r\n                return _signIn;\r\n            case \"linkViaPopup\" /* LINK_VIA_POPUP */:\r\n            case \"linkViaRedirect\" /* LINK_VIA_REDIRECT */:\r\n                return _link;\r\n            case \"reauthViaPopup\" /* REAUTH_VIA_POPUP */:\r\n            case \"reauthViaRedirect\" /* REAUTH_VIA_REDIRECT */:\r\n                return _reauth;\r\n            default:\r\n                _fail(this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        }\r\n    }\r\n    resolve(cred) {\r\n        debugAssert(this.pendingPromise, 'Pending promise was never set');\r\n        this.pendingPromise.resolve(cred);\r\n        this.unregisterAndCleanUp();\r\n    }\r\n    reject(error) {\r\n        debugAssert(this.pendingPromise, 'Pending promise was never set');\r\n        this.pendingPromise.reject(error);\r\n        this.unregisterAndCleanUp();\r\n    }\r\n    unregisterAndCleanUp() {\r\n        if (this.eventManager) {\r\n            this.eventManager.unregisterConsumer(this);\r\n        }\r\n        this.pendingPromise = null;\r\n        this.cleanUp();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\r\n/**\r\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\r\n *\r\n * @remarks\r\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\r\n * unsuccessful, returns an error object containing additional information about the error.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n *\r\n * // The signed-in user info.\r\n * const user = result.user;\r\n * // This gives you a Facebook Access Token.\r\n * const credential = provider.credentialFromResult(auth, result);\r\n * const token = credential.accessToken;\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n *\r\n * @public\r\n */\r\nasync function signInWithPopup(auth, provider, resolver) {\r\n    const authInternal = _castAuth(auth);\r\n    _assertInstanceOf(auth, provider, FederatedAuthProvider);\r\n    const resolverInternal = _withDefaultResolver(authInternal, resolver);\r\n    const action = new PopupOperation(authInternal, \"signInViaPopup\" /* SIGN_IN_VIA_POPUP */, provider, resolverInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\r\n * OAuth flow.\r\n *\r\n * @remarks\r\n * If the reauthentication is successful, the returned result will contain the user and the\r\n * provider's credential.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithPopup(auth, provider);\r\n * // Reauthenticate using a popup.\r\n * await reauthenticateWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function reauthenticateWithPopup(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    const action = new PopupOperation(userInternal.auth, \"reauthViaPopup\" /* REAUTH_VIA_POPUP */, provider, resolverInternal, userInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\r\n *\r\n * @remarks\r\n * If the linking is successful, the returned result will contain the user and the provider's credential.\r\n *\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using some other provider.\r\n * const result = await signInWithEmailAndPassword(auth, email, password);\r\n * // Link using a popup.\r\n * const provider = new FacebookAuthProvider();\r\n * await linkWithPopup(result.user, provider);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function linkWithPopup(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    const action = new PopupOperation(userInternal.auth, \"linkViaPopup\" /* LINK_VIA_POPUP */, provider, resolverInternal, userInternal);\r\n    return action.executeNotNull();\r\n}\r\n/**\r\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\r\n * events\r\n *\r\n */\r\nclass PopupOperation extends AbstractPopupRedirectOperation {\r\n    constructor(auth, filter, provider, resolver, user) {\r\n        super(auth, filter, resolver, user);\r\n        this.provider = provider;\r\n        this.authWindow = null;\r\n        this.pollId = null;\r\n        if (PopupOperation.currentPopupAction) {\r\n            PopupOperation.currentPopupAction.cancel();\r\n        }\r\n        PopupOperation.currentPopupAction = this;\r\n    }\r\n    async executeNotNull() {\r\n        const result = await this.execute();\r\n        _assert(result, this.auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return result;\r\n    }\r\n    async onExecution() {\r\n        debugAssert(this.filter.length === 1, 'Popup operations only handle one event');\r\n        const eventId = _generateEventId();\r\n        this.authWindow = await this.resolver._openPopup(this.auth, this.provider, this.filter[0], // There's always one, see constructor\r\n        eventId);\r\n        this.authWindow.associatedEvent = eventId;\r\n        // Check for web storage support and origin validation _after_ the popup is\r\n        // loaded. These operations are slow (~1 second or so) Rather than\r\n        // waiting on them before opening the window, optimistically open the popup\r\n        // and check for storage support at the same time. If storage support is\r\n        // not available, this will cause the whole thing to reject properly. It\r\n        // will also close the popup, but since the promise has already rejected,\r\n        // the popup closed by user poll will reject into the void.\r\n        this.resolver._originValidation(this.auth).catch(e => {\r\n            this.reject(e);\r\n        });\r\n        this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\r\n            if (!isSupported) {\r\n                this.reject(_createError(this.auth, \"web-storage-unsupported\" /* WEB_STORAGE_UNSUPPORTED */));\r\n            }\r\n        });\r\n        // Handle user closure. Notice this does *not* use await\r\n        this.pollUserCancellation();\r\n    }\r\n    get eventId() {\r\n        var _a;\r\n        return ((_a = this.authWindow) === null || _a === void 0 ? void 0 : _a.associatedEvent) || null;\r\n    }\r\n    cancel() {\r\n        this.reject(_createError(this.auth, \"cancelled-popup-request\" /* EXPIRED_POPUP_REQUEST */));\r\n    }\r\n    cleanUp() {\r\n        if (this.authWindow) {\r\n            this.authWindow.close();\r\n        }\r\n        if (this.pollId) {\r\n            window.clearTimeout(this.pollId);\r\n        }\r\n        this.authWindow = null;\r\n        this.pollId = null;\r\n        PopupOperation.currentPopupAction = null;\r\n    }\r\n    pollUserCancellation() {\r\n        const poll = () => {\r\n            var _a, _b;\r\n            if ((_b = (_a = this.authWindow) === null || _a === void 0 ? void 0 : _a.window) === null || _b === void 0 ? void 0 : _b.closed) {\r\n                // Make sure that there is sufficient time for whatever action to\r\n                // complete. The window could have closed but the sign in network\r\n                // call could still be in flight.\r\n                this.pollId = window.setTimeout(() => {\r\n                    this.pollId = null;\r\n                    this.reject(_createError(this.auth, \"popup-closed-by-user\" /* POPUP_CLOSED_BY_USER */));\r\n                }, 2000 /* AUTH_EVENT */);\r\n                return;\r\n            }\r\n            this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\r\n        };\r\n        poll();\r\n    }\r\n}\r\n// Only one popup is ever shown at once. The lifecycle of the current popup\r\n// can be managed / cancelled by the constructor.\r\nPopupOperation.currentPopupAction = null;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\r\n// We only get one redirect outcome for any one auth, so just store it\r\n// in here.\r\nconst redirectOutcomeMap = new Map();\r\nclass RedirectAction extends AbstractPopupRedirectOperation {\r\n    constructor(auth, resolver, bypassAuthState = false) {\r\n        super(auth, [\r\n            \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */,\r\n            \"linkViaRedirect\" /* LINK_VIA_REDIRECT */,\r\n            \"reauthViaRedirect\" /* REAUTH_VIA_REDIRECT */,\r\n            \"unknown\" /* UNKNOWN */\r\n        ], resolver, undefined, bypassAuthState);\r\n        this.eventId = null;\r\n    }\r\n    /**\r\n     * Override the execute function; if we already have a redirect result, then\r\n     * just return it.\r\n     */\r\n    async execute() {\r\n        let readyOutcome = redirectOutcomeMap.get(this.auth._key());\r\n        if (!readyOutcome) {\r\n            try {\r\n                const hasPendingRedirect = await _getAndClearPendingRedirectStatus(this.resolver, this.auth);\r\n                const result = hasPendingRedirect ? await super.execute() : null;\r\n                readyOutcome = () => Promise.resolve(result);\r\n            }\r\n            catch (e) {\r\n                readyOutcome = () => Promise.reject(e);\r\n            }\r\n            redirectOutcomeMap.set(this.auth._key(), readyOutcome);\r\n        }\r\n        // If we're not bypassing auth state, the ready outcome should be set to\r\n        // null.\r\n        if (!this.bypassAuthState) {\r\n            redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\r\n        }\r\n        return readyOutcome();\r\n    }\r\n    async onAuthEvent(event) {\r\n        if (event.type === \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */) {\r\n            return super.onAuthEvent(event);\r\n        }\r\n        else if (event.type === \"unknown\" /* UNKNOWN */) {\r\n            // This is a sentinel value indicating there's no pending redirect\r\n            this.resolve(null);\r\n            return;\r\n        }\r\n        if (event.eventId) {\r\n            const user = await this.auth._redirectUserForId(event.eventId);\r\n            if (user) {\r\n                this.user = user;\r\n                return super.onAuthEvent(event);\r\n            }\r\n            else {\r\n                this.resolve(null);\r\n            }\r\n        }\r\n    }\r\n    async onExecution() { }\r\n    cleanUp() { }\r\n}\r\nasync function _getAndClearPendingRedirectStatus(resolver, auth) {\r\n    const key = pendingRedirectKey(auth);\r\n    const persistence = resolverPersistence(resolver);\r\n    if (!(await persistence._isAvailable())) {\r\n        return false;\r\n    }\r\n    const hasPendingRedirect = (await persistence._get(key)) === 'true';\r\n    await persistence._remove(key);\r\n    return hasPendingRedirect;\r\n}\r\nasync function _setPendingRedirectStatus(resolver, auth) {\r\n    return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\r\n}\r\nfunction _clearRedirectOutcomes() {\r\n    redirectOutcomeMap.clear();\r\n}\r\nfunction _overrideRedirectResult(auth, result) {\r\n    redirectOutcomeMap.set(auth._key(), result);\r\n}\r\nfunction resolverPersistence(resolver) {\r\n    return _getInstance(resolver._redirectPersistence);\r\n}\r\nfunction pendingRedirectKey(auth) {\r\n    return _persistenceKeyName(PENDING_REDIRECT_KEY, auth.config.apiKey, auth.name);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Authenticates a Firebase client using a full-page redirect flow.\r\n *\r\n * @remarks\r\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // You can add additional scopes to the provider:\r\n * provider.addScope('user_birthday');\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * // As this API can be used for sign-in, linking and reauthentication,\r\n * // check the operationType to determine what triggered this redirect\r\n * // operation.\r\n * const operationType = result.operationType;\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nfunction signInWithRedirect(auth, provider, resolver) {\r\n    return _signInWithRedirect(auth, provider, resolver);\r\n}\r\nasync function _signInWithRedirect(auth, provider, resolver) {\r\n    const authInternal = _castAuth(auth);\r\n    _assertInstanceOf(auth, provider, FederatedAuthProvider);\r\n    const resolverInternal = _withDefaultResolver(authInternal, resolver);\r\n    await _setPendingRedirectStatus(resolverInternal, authInternal);\r\n    return resolverInternal._openRedirect(authInternal, provider, \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */);\r\n}\r\n/**\r\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * const result = await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * // Link using a redirect.\r\n * await linkWithRedirect(result.user, provider);\r\n * // This will again trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nfunction reauthenticateWithRedirect(user, provider, resolver) {\r\n    return _reauthenticateWithRedirect(user, provider, resolver);\r\n}\r\nasync function _reauthenticateWithRedirect(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n    // Allow the resolver to error before persisting the redirect user\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\r\n    const eventId = await prepareUserForRedirect(userInternal);\r\n    return resolverInternal._openRedirect(userInternal.auth, provider, \"reauthViaRedirect\" /* REAUTH_VIA_REDIRECT */, eventId);\r\n}\r\n/**\r\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using some other provider.\r\n * const result = await signInWithEmailAndPassword(auth, email, password);\r\n * // Link using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * await linkWithRedirect(result.user, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * ```\r\n *\r\n * @param user - The user.\r\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\r\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n *\r\n * @public\r\n */\r\nfunction linkWithRedirect(user, provider, resolver) {\r\n    return _linkWithRedirect(user, provider, resolver);\r\n}\r\nasync function _linkWithRedirect(user, provider, resolver) {\r\n    const userInternal = getModularInstance(user);\r\n    _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\r\n    // Allow the resolver to error before persisting the redirect user\r\n    const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\r\n    await _assertLinkedStatus(false, userInternal, provider.providerId);\r\n    await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\r\n    const eventId = await prepareUserForRedirect(userInternal);\r\n    return resolverInternal._openRedirect(userInternal.auth, provider, \"linkViaRedirect\" /* LINK_VIA_REDIRECT */, eventId);\r\n}\r\n/**\r\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\r\n *\r\n * @remarks\r\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\r\n * error. If no redirect operation was called, returns a {@link UserCredential}\r\n * with a null `user`.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Sign in using a redirect.\r\n * const provider = new FacebookAuthProvider();\r\n * // You can add additional scopes to the provider:\r\n * provider.addScope('user_birthday');\r\n * // Start a sign in process for an unauthenticated user.\r\n * await signInWithRedirect(auth, provider);\r\n * // This will trigger a full page redirect away from your app\r\n *\r\n * // After returning from the redirect when your app initializes you can obtain the result\r\n * const result = await getRedirectResult(auth);\r\n * if (result) {\r\n *   // This is the signed-in user\r\n *   const user = result.user;\r\n *   // This gives you a Facebook Access Token.\r\n *   const credential = provider.credentialFromResult(auth, result);\r\n *   const token = credential.accessToken;\r\n * }\r\n * // As this API can be used for sign-in, linking and reauthentication,\r\n * // check the operationType to determine what triggered this redirect\r\n * // operation.\r\n * const operationType = result.operationType;\r\n * ```\r\n *\r\n * @param auth - The {@link Auth} instance.\r\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\r\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\r\n *\r\n * @public\r\n */\r\nasync function getRedirectResult(auth, resolver) {\r\n    await _castAuth(auth)._initializationPromise;\r\n    return _getRedirectResult(auth, resolver, false);\r\n}\r\nasync function _getRedirectResult(auth, resolverExtern, bypassAuthState = false) {\r\n    const authInternal = _castAuth(auth);\r\n    const resolver = _withDefaultResolver(authInternal, resolverExtern);\r\n    const action = new RedirectAction(authInternal, resolver, bypassAuthState);\r\n    const result = await action.execute();\r\n    if (result && !bypassAuthState) {\r\n        delete result.user._redirectEventId;\r\n        await authInternal._persistUserIfCurrent(result.user);\r\n        await authInternal._setRedirectUser(null, resolverExtern);\r\n    }\r\n    return result;\r\n}\r\nasync function prepareUserForRedirect(user) {\r\n    const eventId = _generateEventId(`${user.uid}:::`);\r\n    user._redirectEventId = eventId;\r\n    await user.auth._setRedirectUser(user);\r\n    await user.auth._persistUserIfCurrent(user);\r\n    return eventId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// The amount of time to store the UIDs of seen events; this is\r\n// set to 10 min by default\r\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\r\nclass AuthEventManager {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.cachedEventUids = new Set();\r\n        this.consumers = new Set();\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n        this.lastProcessedEventTime = Date.now();\r\n    }\r\n    registerConsumer(authEventConsumer) {\r\n        this.consumers.add(authEventConsumer);\r\n        if (this.queuedRedirectEvent &&\r\n            this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)) {\r\n            this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\r\n            this.saveEventToCache(this.queuedRedirectEvent);\r\n            this.queuedRedirectEvent = null;\r\n        }\r\n    }\r\n    unregisterConsumer(authEventConsumer) {\r\n        this.consumers.delete(authEventConsumer);\r\n    }\r\n    onEvent(event) {\r\n        // Check if the event has already been handled\r\n        if (this.hasEventBeenHandled(event)) {\r\n            return false;\r\n        }\r\n        let handled = false;\r\n        this.consumers.forEach(consumer => {\r\n            if (this.isEventForConsumer(event, consumer)) {\r\n                handled = true;\r\n                this.sendToConsumer(event, consumer);\r\n                this.saveEventToCache(event);\r\n            }\r\n        });\r\n        if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\r\n            // If we've already seen a redirect before, or this is a popup event,\r\n            // bail now\r\n            return handled;\r\n        }\r\n        this.hasHandledPotentialRedirect = true;\r\n        // If the redirect wasn't handled, hang on to it\r\n        if (!handled) {\r\n            this.queuedRedirectEvent = event;\r\n            handled = true;\r\n        }\r\n        return handled;\r\n    }\r\n    sendToConsumer(event, consumer) {\r\n        var _a;\r\n        if (event.error && !isNullRedirectEvent(event)) {\r\n            const code = ((_a = event.error.code) === null || _a === void 0 ? void 0 : _a.split('auth/')[1]) ||\r\n                \"internal-error\" /* INTERNAL_ERROR */;\r\n            consumer.onError(_createError(this.auth, code));\r\n        }\r\n        else {\r\n            consumer.onAuthEvent(event);\r\n        }\r\n    }\r\n    isEventForConsumer(event, consumer) {\r\n        const eventIdMatches = consumer.eventId === null ||\r\n            (!!event.eventId && event.eventId === consumer.eventId);\r\n        return consumer.filter.includes(event.type) && eventIdMatches;\r\n    }\r\n    hasEventBeenHandled(event) {\r\n        if (Date.now() - this.lastProcessedEventTime >=\r\n            EVENT_DUPLICATION_CACHE_DURATION_MS) {\r\n            this.cachedEventUids.clear();\r\n        }\r\n        return this.cachedEventUids.has(eventUid(event));\r\n    }\r\n    saveEventToCache(event) {\r\n        this.cachedEventUids.add(eventUid(event));\r\n        this.lastProcessedEventTime = Date.now();\r\n    }\r\n}\r\nfunction eventUid(e) {\r\n    return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\r\n}\r\nfunction isNullRedirectEvent({ type, error }) {\r\n    return (type === \"unknown\" /* UNKNOWN */ &&\r\n        (error === null || error === void 0 ? void 0 : error.code) === `auth/${\"no-auth-event\" /* NO_AUTH_EVENT */}`);\r\n}\r\nfunction isRedirectEvent(event) {\r\n    switch (event.type) {\r\n        case \"signInViaRedirect\" /* SIGN_IN_VIA_REDIRECT */:\r\n        case \"linkViaRedirect\" /* LINK_VIA_REDIRECT */:\r\n        case \"reauthViaRedirect\" /* REAUTH_VIA_REDIRECT */:\r\n            return true;\r\n        case \"unknown\" /* UNKNOWN */:\r\n            return isNullRedirectEvent(event);\r\n        default:\r\n            return false;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function _getProjectConfig(auth, request = {}) {\r\n    return _performApiRequest(auth, \"GET\" /* GET */, \"/v1/projects\" /* GET_PROJECT_CONFIG */, request);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\r\nconst HTTP_REGEX = /^https?/;\r\nasync function _validateOrigin(auth) {\r\n    // Skip origin validation if we are in an emulated environment\r\n    if (auth.config.emulator) {\r\n        return;\r\n    }\r\n    const { authorizedDomains } = await _getProjectConfig(auth);\r\n    for (const domain of authorizedDomains) {\r\n        try {\r\n            if (matchDomain(domain)) {\r\n                return;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing if there's a URL error; just continue searching\r\n        }\r\n    }\r\n    // In the old SDK, this error also provides helpful messages.\r\n    _fail(auth, \"unauthorized-domain\" /* INVALID_ORIGIN */);\r\n}\r\nfunction matchDomain(expected) {\r\n    const currentUrl = _getCurrentUrl();\r\n    const { protocol, hostname } = new URL(currentUrl);\r\n    if (expected.startsWith('chrome-extension://')) {\r\n        const ceUrl = new URL(expected);\r\n        if (ceUrl.hostname === '' && hostname === '') {\r\n            // For some reason we're not parsing chrome URLs properly\r\n            return (protocol === 'chrome-extension:' &&\r\n                expected.replace('chrome-extension://', '') ===\r\n                    currentUrl.replace('chrome-extension://', ''));\r\n        }\r\n        return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\r\n    }\r\n    if (!HTTP_REGEX.test(protocol)) {\r\n        return false;\r\n    }\r\n    if (IP_ADDRESS_REGEX.test(expected)) {\r\n        // The domain has to be exactly equal to the pattern, as an IP domain will\r\n        // only contain the IP, no extra character.\r\n        return hostname === expected;\r\n    }\r\n    // Dots in pattern should be escaped.\r\n    const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\r\n    // Non ip address domains.\r\n    // domain.com = *.domain.com OR domain.com\r\n    const re = new RegExp('^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$', 'i');\r\n    return re.test(hostname);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\r\n/**\r\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\r\n * it will stop working after a retrial. This is a hack to fix this issue.\r\n */\r\nfunction resetUnloadedGapiModules() {\r\n    // Clear last failed gapi.load state to force next gapi.load to first\r\n    // load the failed gapi.iframes module.\r\n    // Get gapix.beacon context.\r\n    const beacon = _window().___jsl;\r\n    // Get current hint.\r\n    if (beacon === null || beacon === void 0 ? void 0 : beacon.H) {\r\n        // Get gapi hint.\r\n        for (const hint of Object.keys(beacon.H)) {\r\n            // Requested modules.\r\n            beacon.H[hint].r = beacon.H[hint].r || [];\r\n            // Loaded modules.\r\n            beacon.H[hint].L = beacon.H[hint].L || [];\r\n            // Set requested modules to a copy of the loaded modules.\r\n            beacon.H[hint].r = [...beacon.H[hint].L];\r\n            // Clear pending callbacks.\r\n            if (beacon.CP) {\r\n                for (let i = 0; i < beacon.CP.length; i++) {\r\n                    // Remove all failed pending callbacks.\r\n                    beacon.CP[i] = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction loadGapi(auth) {\r\n    return new Promise((resolve, reject) => {\r\n        var _a, _b, _c;\r\n        // Function to run when gapi.load is ready.\r\n        function loadGapiIframe() {\r\n            // The developer may have tried to previously run gapi.load and failed.\r\n            // Run this to fix that.\r\n            resetUnloadedGapiModules();\r\n            gapi.load('gapi.iframes', {\r\n                callback: () => {\r\n                    resolve(gapi.iframes.getContext());\r\n                },\r\n                ontimeout: () => {\r\n                    // The above reset may be sufficient, but having this reset after\r\n                    // failure ensures that if the developer calls gapi.load after the\r\n                    // connection is re-established and before another attempt to embed\r\n                    // the iframe, it would work and would not be broken because of our\r\n                    // failed attempt.\r\n                    // Timeout when gapi.iframes.Iframe not loaded.\r\n                    resetUnloadedGapiModules();\r\n                    reject(_createError(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */));\r\n                },\r\n                timeout: NETWORK_TIMEOUT.get()\r\n            });\r\n        }\r\n        if ((_b = (_a = _window().gapi) === null || _a === void 0 ? void 0 : _a.iframes) === null || _b === void 0 ? void 0 : _b.Iframe) {\r\n            // If gapi.iframes.Iframe available, resolve.\r\n            resolve(gapi.iframes.getContext());\r\n        }\r\n        else if (!!((_c = _window().gapi) === null || _c === void 0 ? void 0 : _c.load)) {\r\n            // Gapi loader ready, load gapi.iframes.\r\n            loadGapiIframe();\r\n        }\r\n        else {\r\n            // Create a new iframe callback when this is called so as not to overwrite\r\n            // any previous defined callback. This happens if this method is called\r\n            // multiple times in parallel and could result in the later callback\r\n            // overwriting the previous one. This would end up with a iframe\r\n            // timeout.\r\n            const cbName = _generateCallbackName('iframefcb');\r\n            // GApi loader not available, dynamically load platform.js.\r\n            _window()[cbName] = () => {\r\n                // GApi loader should be ready.\r\n                if (!!gapi.load) {\r\n                    loadGapiIframe();\r\n                }\r\n                else {\r\n                    // Gapi loader failed, throw error.\r\n                    reject(_createError(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */));\r\n                }\r\n            };\r\n            // Load GApi loader.\r\n            return _loadJS(`https://apis.google.com/js/api.js?onload=${cbName}`).catch(e => reject(e));\r\n        }\r\n    }).catch(error => {\r\n        // Reset cached promise to allow for retrial.\r\n        cachedGApiLoader = null;\r\n        throw error;\r\n    });\r\n}\r\nlet cachedGApiLoader = null;\r\nfunction _loadGapi(auth) {\r\n    cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\r\n    return cachedGApiLoader;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PING_TIMEOUT = new Delay(5000, 15000);\r\nconst IFRAME_PATH = '__/auth/iframe';\r\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\r\nconst IFRAME_ATTRIBUTES = {\r\n    style: {\r\n        position: 'absolute',\r\n        top: '-100px',\r\n        width: '1px',\r\n        height: '1px'\r\n    },\r\n    'aria-hidden': 'true',\r\n    tabindex: '-1'\r\n};\r\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\r\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\r\nconst EID_FROM_APIHOST = new Map([\r\n    [\"identitytoolkit.googleapis.com\" /* API_HOST */, 'p'],\r\n    ['staging-identitytoolkit.sandbox.googleapis.com', 's'],\r\n    ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\r\n]);\r\nfunction getIframeUrl(auth) {\r\n    const config = auth.config;\r\n    _assert(config.authDomain, auth, \"auth-domain-config-required\" /* MISSING_AUTH_DOMAIN */);\r\n    const url = config.emulator\r\n        ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\r\n        : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\r\n    const params = {\r\n        apiKey: config.apiKey,\r\n        appName: auth.name,\r\n        v: SDK_VERSION\r\n    };\r\n    const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\r\n    if (eid) {\r\n        params.eid = eid;\r\n    }\r\n    const frameworks = auth._getFrameworks();\r\n    if (frameworks.length) {\r\n        params.fw = frameworks.join(',');\r\n    }\r\n    return `${url}?${querystring(params).slice(1)}`;\r\n}\r\nasync function _openIframe(auth) {\r\n    const context = await _loadGapi(auth);\r\n    const gapi = _window().gapi;\r\n    _assert(gapi, auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n    return context.open({\r\n        where: document.body,\r\n        url: getIframeUrl(auth),\r\n        messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\r\n        attributes: IFRAME_ATTRIBUTES,\r\n        dontclear: true\r\n    }, (iframe) => new Promise(async (resolve, reject) => {\r\n        await iframe.restyle({\r\n            // Prevent iframe from closing on mouse out.\r\n            setHideOnLeave: false\r\n        });\r\n        const networkError = _createError(auth, \"network-request-failed\" /* NETWORK_REQUEST_FAILED */);\r\n        // Confirm iframe is correctly loaded.\r\n        // To fallback on failure, set a timeout.\r\n        const networkErrorTimer = _window().setTimeout(() => {\r\n            reject(networkError);\r\n        }, PING_TIMEOUT.get());\r\n        // Clear timer and resolve pending iframe ready promise.\r\n        function clearTimerAndResolve() {\r\n            _window().clearTimeout(networkErrorTimer);\r\n            resolve(iframe);\r\n        }\r\n        // This returns an IThenable. However the reject part does not call\r\n        // when the iframe is not loaded.\r\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\r\n            reject(networkError);\r\n        });\r\n    }));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst BASE_POPUP_OPTIONS = {\r\n    location: 'yes',\r\n    resizable: 'yes',\r\n    statusbar: 'yes',\r\n    toolbar: 'no'\r\n};\r\nconst DEFAULT_WIDTH = 500;\r\nconst DEFAULT_HEIGHT = 600;\r\nconst TARGET_BLANK = '_blank';\r\nconst FIREFOX_EMPTY_URL = 'http://localhost';\r\nclass AuthPopup {\r\n    constructor(window) {\r\n        this.window = window;\r\n        this.associatedEvent = null;\r\n    }\r\n    close() {\r\n        if (this.window) {\r\n            try {\r\n                this.window.close();\r\n            }\r\n            catch (e) { }\r\n        }\r\n    }\r\n}\r\nfunction _open(auth, url, name, width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\r\n    const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\r\n    const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\r\n    let target = '';\r\n    const options = Object.assign(Object.assign({}, BASE_POPUP_OPTIONS), { width: width.toString(), height: height.toString(), top,\r\n        left });\r\n    // Chrome iOS 7 and 8 is returning an undefined popup win when target is\r\n    // specified, even though the popup is not necessarily blocked.\r\n    const ua = getUA().toLowerCase();\r\n    if (name) {\r\n        target = _isChromeIOS(ua) ? TARGET_BLANK : name;\r\n    }\r\n    if (_isFirefox(ua)) {\r\n        // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\r\n        url = url || FIREFOX_EMPTY_URL;\r\n        // Firefox disables by default scrolling on popup windows, which can create\r\n        // issues when the user has many Google accounts, for instance.\r\n        options.scrollbars = 'yes';\r\n    }\r\n    const optionsString = Object.entries(options).reduce((accum, [key, value]) => `${accum}${key}=${value},`, '');\r\n    if (_isIOSStandalone(ua) && target !== '_self') {\r\n        openAsNewWindowIOS(url || '', target);\r\n        return new AuthPopup(null);\r\n    }\r\n    // about:blank getting sanitized causing browsers like IE/Edge to display\r\n    // brief error message before redirecting to handler.\r\n    const newWin = window.open(url || '', target, optionsString);\r\n    _assert(newWin, auth, \"popup-blocked\" /* POPUP_BLOCKED */);\r\n    // Flaky on IE edge, encapsulate with a try and catch.\r\n    try {\r\n        newWin.focus();\r\n    }\r\n    catch (e) { }\r\n    return new AuthPopup(newWin);\r\n}\r\nfunction openAsNewWindowIOS(url, target) {\r\n    const el = document.createElement('a');\r\n    el.href = url;\r\n    el.target = target;\r\n    const click = document.createEvent('MouseEvent');\r\n    click.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 1, null);\r\n    el.dispatchEvent(click);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * URL for Authentication widget which will initiate the OAuth handshake\r\n *\r\n * @internal\r\n */\r\nconst WIDGET_PATH = '__/auth/handler';\r\n/**\r\n * URL for emulated environment\r\n *\r\n * @internal\r\n */\r\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\r\nfunction _getRedirectUrl(auth, provider, authType, redirectUrl, eventId, additionalParams) {\r\n    _assert(auth.config.authDomain, auth, \"auth-domain-config-required\" /* MISSING_AUTH_DOMAIN */);\r\n    _assert(auth.config.apiKey, auth, \"invalid-api-key\" /* INVALID_API_KEY */);\r\n    const params = {\r\n        apiKey: auth.config.apiKey,\r\n        appName: auth.name,\r\n        authType,\r\n        redirectUrl,\r\n        v: SDK_VERSION,\r\n        eventId\r\n    };\r\n    if (provider instanceof FederatedAuthProvider) {\r\n        provider.setDefaultLanguage(auth.languageCode);\r\n        params.providerId = provider.providerId || '';\r\n        if (!isEmpty(provider.getCustomParameters())) {\r\n            params.customParameters = JSON.stringify(provider.getCustomParameters());\r\n        }\r\n        // TODO set additionalParams from the provider as well?\r\n        for (const [key, value] of Object.entries(additionalParams || {})) {\r\n            params[key] = value;\r\n        }\r\n    }\r\n    if (provider instanceof BaseOAuthProvider) {\r\n        const scopes = provider.getScopes().filter(scope => scope !== '');\r\n        if (scopes.length > 0) {\r\n            params.scopes = scopes.join(',');\r\n        }\r\n    }\r\n    if (auth.tenantId) {\r\n        params.tid = auth.tenantId;\r\n    }\r\n    // TODO: maybe set eid as endipointId\r\n    // TODO: maybe set fw as Frameworks.join(\",\")\r\n    const paramsDict = params;\r\n    for (const key of Object.keys(paramsDict)) {\r\n        if (paramsDict[key] === undefined) {\r\n            delete paramsDict[key];\r\n        }\r\n    }\r\n    return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(1)}`;\r\n}\r\nfunction getHandlerBase({ config }) {\r\n    if (!config.emulator) {\r\n        return `https://${config.authDomain}/${WIDGET_PATH}`;\r\n    }\r\n    return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The special web storage event\r\n *\r\n */\r\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\r\nclass BrowserPopupRedirectResolver {\r\n    constructor() {\r\n        this.eventManagers = {};\r\n        this.iframes = {};\r\n        this.originValidationPromises = {};\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    // Wrapping in async even though we don't await anywhere in order\r\n    // to make sure errors are raised as promise rejections\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        var _a;\r\n        debugAssert((_a = this.eventManagers[auth._key()]) === null || _a === void 0 ? void 0 : _a.manager, '_initialize() not called before _openPopup()');\r\n        const url = _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId);\r\n        return _open(auth, url, _generateEventId());\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this._originValidation(auth);\r\n        _setWindowLocation(_getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId));\r\n        return new Promise(() => { });\r\n    }\r\n    _initialize(auth) {\r\n        const key = auth._key();\r\n        if (this.eventManagers[key]) {\r\n            const { manager, promise } = this.eventManagers[key];\r\n            if (manager) {\r\n                return Promise.resolve(manager);\r\n            }\r\n            else {\r\n                debugAssert(promise, 'If manager is not set, promise should be');\r\n                return promise;\r\n            }\r\n        }\r\n        const promise = this.initAndGetManager(auth);\r\n        this.eventManagers[key] = { promise };\r\n        // If the promise is rejected, the key should be removed so that the\r\n        // operation can be retried later.\r\n        promise.catch(() => {\r\n            delete this.eventManagers[key];\r\n        });\r\n        return promise;\r\n    }\r\n    async initAndGetManager(auth) {\r\n        const iframe = await _openIframe(auth);\r\n        const manager = new AuthEventManager(auth);\r\n        iframe.register('authEvent', (iframeEvent) => {\r\n            _assert(iframeEvent === null || iframeEvent === void 0 ? void 0 : iframeEvent.authEvent, auth, \"invalid-auth-event\" /* INVALID_AUTH_EVENT */);\r\n            // TODO: Consider splitting redirect and popup events earlier on\r\n            const handled = manager.onEvent(iframeEvent.authEvent);\r\n            return { status: handled ? \"ACK\" /* ACK */ : \"ERROR\" /* ERROR */ };\r\n        }, gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER);\r\n        this.eventManagers[auth._key()] = { manager };\r\n        this.iframes[auth._key()] = iframe;\r\n        return manager;\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        const iframe = this.iframes[auth._key()];\r\n        iframe.send(WEB_STORAGE_SUPPORT_KEY, { type: WEB_STORAGE_SUPPORT_KEY }, result => {\r\n            var _a;\r\n            const isSupported = (_a = result === null || result === void 0 ? void 0 : result[0]) === null || _a === void 0 ? void 0 : _a[WEB_STORAGE_SUPPORT_KEY];\r\n            if (isSupported !== undefined) {\r\n                cb(!!isSupported);\r\n            }\r\n            _fail(auth, \"internal-error\" /* INTERNAL_ERROR */);\r\n        }, gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER);\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    get _shouldInitProactively() {\r\n        // Mobile browsers and Safari need to optimistically initialize\r\n        return _isMobileBrowser() || _isSafari() || _isIOS();\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for browser\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst browserPopupRedirectResolver = BrowserPopupRedirectResolver;\n\nclass MultiFactorAssertionImpl {\r\n    constructor(factorId) {\r\n        this.factorId = factorId;\r\n    }\r\n    _process(auth, session, displayName) {\r\n        switch (session.type) {\r\n            case \"enroll\" /* ENROLL */:\r\n                return this._finalizeEnroll(auth, session.credential, displayName);\r\n            case \"signin\" /* SIGN_IN */:\r\n                return this._finalizeSignIn(auth, session.credential);\r\n            default:\r\n                return debugFail('unexpected MultiFactorSessionType');\r\n        }\r\n    }\r\n}\n\n/**\r\n * {@inheritdoc PhoneMultiFactorAssertion}\r\n *\r\n * @public\r\n */\r\nclass PhoneMultiFactorAssertionImpl extends MultiFactorAssertionImpl {\r\n    constructor(credential) {\r\n        super(\"phone\" /* PHONE */);\r\n        this.credential = credential;\r\n    }\r\n    /** @internal */\r\n    static _fromCredential(credential) {\r\n        return new PhoneMultiFactorAssertionImpl(credential);\r\n    }\r\n    /** @internal */\r\n    _finalizeEnroll(auth, idToken, displayName) {\r\n        return finalizeEnrollPhoneMfa(auth, {\r\n            idToken,\r\n            displayName,\r\n            phoneVerificationInfo: this.credential._makeVerificationRequest()\r\n        });\r\n    }\r\n    /** @internal */\r\n    _finalizeSignIn(auth, mfaPendingCredential) {\r\n        return finalizeSignInPhoneMfa(auth, {\r\n            mfaPendingCredential,\r\n            phoneVerificationInfo: this.credential._makeVerificationRequest()\r\n        });\r\n    }\r\n}\r\n/**\r\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\r\n *\r\n * @public\r\n */\r\nclass PhoneMultiFactorGenerator {\r\n    constructor() { }\r\n    /**\r\n     * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\r\n     *\r\n     * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\r\n     * @returns A {@link PhoneMultiFactorAssertion} which can be used with\r\n     * {@link MultiFactorResolver.resolveSignIn}\r\n     */\r\n    static assertion(credential) {\r\n        return PhoneMultiFactorAssertionImpl._fromCredential(credential);\r\n    }\r\n}\r\n/**\r\n * The identifier of the phone second factor: `phone`.\r\n */\r\nPhoneMultiFactorGenerator.FACTOR_ID = 'phone';\n\nvar name = \"@firebase/auth\";\nvar version = \"0.20.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AuthInterop {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n        this.internalListeners = new Map();\r\n    }\r\n    getUid() {\r\n        var _a;\r\n        this.assertAuthConfigured();\r\n        return ((_a = this.auth.currentUser) === null || _a === void 0 ? void 0 : _a.uid) || null;\r\n    }\r\n    async getToken(forceRefresh) {\r\n        this.assertAuthConfigured();\r\n        await this.auth._initializationPromise;\r\n        if (!this.auth.currentUser) {\r\n            return null;\r\n        }\r\n        const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\r\n        return { accessToken };\r\n    }\r\n    addAuthTokenListener(listener) {\r\n        this.assertAuthConfigured();\r\n        if (this.internalListeners.has(listener)) {\r\n            return;\r\n        }\r\n        const unsubscribe = this.auth.onIdTokenChanged(user => {\r\n            var _a;\r\n            listener(((_a = user) === null || _a === void 0 ? void 0 : _a.stsTokenManager.accessToken) || null);\r\n        });\r\n        this.internalListeners.set(listener, unsubscribe);\r\n        this.updateProactiveRefresh();\r\n    }\r\n    removeAuthTokenListener(listener) {\r\n        this.assertAuthConfigured();\r\n        const unsubscribe = this.internalListeners.get(listener);\r\n        if (!unsubscribe) {\r\n            return;\r\n        }\r\n        this.internalListeners.delete(listener);\r\n        unsubscribe();\r\n        this.updateProactiveRefresh();\r\n    }\r\n    assertAuthConfigured() {\r\n        _assert(this.auth._initializationPromise, \"dependent-sdk-initialized-before-auth\" /* DEPENDENT_SDK_INIT_BEFORE_AUTH */);\r\n    }\r\n    updateProactiveRefresh() {\r\n        if (this.internalListeners.size > 0) {\r\n            this.auth._startProactiveRefresh();\r\n        }\r\n        else {\r\n            this.auth._stopProactiveRefresh();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getVersionForPlatform(clientPlatform) {\r\n    switch (clientPlatform) {\r\n        case \"Node\" /* NODE */:\r\n            return 'node';\r\n        case \"ReactNative\" /* REACT_NATIVE */:\r\n            return 'rn';\r\n        case \"Worker\" /* WORKER */:\r\n            return 'webworker';\r\n        case \"Cordova\" /* CORDOVA */:\r\n            return 'cordova';\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n/** @internal */\r\nfunction registerAuth(clientPlatform) {\r\n    _registerComponent(new Component(\"auth\" /* AUTH */, (container, { options: deps }) => {\r\n        const app = container.getProvider('app').getImmediate();\r\n        const heartbeatServiceProvider = container.getProvider('heartbeat');\r\n        const { apiKey, authDomain } = app.options;\r\n        return ((app, heartbeatServiceProvider) => {\r\n            _assert(apiKey && !apiKey.includes(':'), \"invalid-api-key\" /* INVALID_API_KEY */, { appName: app.name });\r\n            // Auth domain is optional if IdP sign in isn't being used\r\n            _assert(!(authDomain === null || authDomain === void 0 ? void 0 : authDomain.includes(':')), \"argument-error\" /* ARGUMENT_ERROR */, {\r\n                appName: app.name\r\n            });\r\n            const config = {\r\n                apiKey,\r\n                authDomain,\r\n                clientPlatform,\r\n                apiHost: \"identitytoolkit.googleapis.com\" /* API_HOST */,\r\n                tokenApiHost: \"securetoken.googleapis.com\" /* TOKEN_API_HOST */,\r\n                apiScheme: \"https\" /* API_SCHEME */,\r\n                sdkClientVersion: _getClientVersion(clientPlatform)\r\n            };\r\n            const authInstance = new AuthImpl(app, heartbeatServiceProvider, config);\r\n            _initializeAuthInstance(authInstance, deps);\r\n            return authInstance;\r\n        })(app, heartbeatServiceProvider);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        /**\r\n         * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\r\n         * For why we do this, See go/firebase-next-auth-init\r\n         */\r\n        .setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */)\r\n        /**\r\n         * Because all firebase products that depend on auth depend on auth-internal directly,\r\n         * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\r\n         */\r\n        .setInstanceCreatedCallback((container, _instanceIdentifier, _instance) => {\r\n        const authInternalProvider = container.getProvider(\"auth-internal\" /* AUTH_INTERNAL */);\r\n        authInternalProvider.initialize();\r\n    }));\r\n    _registerComponent(new Component(\"auth-internal\" /* AUTH_INTERNAL */, container => {\r\n        const auth = _castAuth(container.getProvider(\"auth\" /* AUTH */).getImmediate());\r\n        return (auth => new AuthInterop(auth))(auth);\r\n    }, \"PRIVATE\" /* PRIVATE */).setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */));\r\n    registerVersion(name, version, getVersionForPlatform(clientPlatform));\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\r\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\r\n *\r\n * @param app - The Firebase App.\r\n *\r\n * @public\r\n */\r\nfunction getAuth(app = getApp()) {\r\n    const provider = _getProvider(app, 'auth');\r\n    if (provider.isInitialized()) {\r\n        return provider.getImmediate();\r\n    }\r\n    return initializeAuth(app, {\r\n        popupRedirectResolver: browserPopupRedirectResolver,\r\n        persistence: [\r\n            indexedDBLocalPersistence,\r\n            browserLocalPersistence,\r\n            browserSessionPersistence\r\n        ]\r\n    });\r\n}\r\nregisterAuth(\"Browser\" /* BROWSER */);\n\nexport { signInWithCustomToken as $, ActionCodeOperation as A, debugErrorMap as B, prodErrorMap as C, AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as D, initializeAuth as E, FactorId as F, connectAuthEmulator as G, AuthCredential as H, EmailAuthCredential as I, OAuthCredential as J, PhoneAuthCredential as K, inMemoryPersistence as L, EmailAuthProvider as M, FacebookAuthProvider as N, OperationType as O, PhoneAuthProvider as P, GoogleAuthProvider as Q, RecaptchaVerifier as R, SignInMethod as S, GithubAuthProvider as T, OAuthProvider as U, SAMLAuthProvider as V, TwitterAuthProvider as W, signInAnonymously as X, signInWithCredential as Y, linkWithCredential as Z, reauthenticateWithCredential as _, browserSessionPersistence as a, sendPasswordResetEmail as a0, confirmPasswordReset as a1, applyActionCode as a2, checkActionCode as a3, verifyPasswordResetCode as a4, createUserWithEmailAndPassword as a5, signInWithEmailAndPassword as a6, sendSignInLinkToEmail as a7, isSignInWithEmailLink as a8, signInWithEmailLink as a9, AuthEventManager as aA, _getRedirectResult as aB, _overrideRedirectResult as aC, _clearRedirectOutcomes as aD, _castAuth as aE, UserImpl as aF, AuthImpl as aG, _getClientVersion as aH, _generateEventId as aI, AuthPopup as aJ, FetchProvider as aK, SAMLAuthCredential as aL, fetchSignInMethodsForEmail as aa, sendEmailVerification as ab, verifyBeforeUpdateEmail as ac, ActionCodeURL as ad, parseActionCodeURL as ae, updateProfile as af, updateEmail as ag, updatePassword as ah, getIdToken as ai, getIdTokenResult as aj, unlink as ak, getAdditionalUserInfo as al, reload as am, getMultiFactorResolver as an, multiFactor as ao, _isIOS7Or8 as ap, debugAssert as aq, _isIOS as ar, _isAndroid as as, _fail as at, _getRedirectUrl as au, _getProjectConfig as av, _createError as aw, _assert as ax, _getInstance as ay, _persistenceKeyName as az, browserLocalPersistence as b, signInWithPopup as c, linkWithPopup as d, reauthenticateWithPopup as e, signInWithRedirect as f, linkWithRedirect as g, reauthenticateWithRedirect as h, indexedDBLocalPersistence as i, getRedirectResult as j, browserPopupRedirectResolver as k, linkWithPhoneNumber as l, PhoneMultiFactorGenerator as m, getAuth as n, ProviderId as o, setPersistence as p, onIdTokenChanged as q, reauthenticateWithPhoneNumber as r, signInWithPhoneNumber as s, beforeAuthStateChanged as t, updatePhoneNumber as u, onAuthStateChanged as v, useDeviceLanguage as w, updateCurrentUser as x, signOut as y, deleteUser as z };\n//# sourceMappingURL=index-3b632d0b.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.24\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.8.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"storage-open\" /* STORAGE_OPEN */]: 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-get\" /* STORAGE_GET */]: 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-set\" /* STORAGE_WRITE */]: 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    [\"storage-delete\" /* STORAGE_DELETE */]: 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(options, rawConfig = {}) {\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        return db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n    }\r\n    catch (e) {\r\n        throw ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n            originalErrorMessage: e.message\r\n        });\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        return tx.done;\r\n    }\r\n    catch (e) {\r\n        throw ERROR_FACTORY.create(\"storage-set\" /* STORAGE_WRITE */, {\r\n            originalErrorMessage: e.message\r\n        });\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar esm = {};\n\n/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar k,goog=goog||{},l=commonjsGlobal||self;function aa(){}function ba(a){var b=typeof a;b=\"object\"!=b?b:a?Array.isArray(a)?\"array\":b:\"null\";return \"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function p(a){var b=typeof a;return \"object\"==b&&null!=a||\"function\"==b}function da(a){return Object.prototype.hasOwnProperty.call(a,ea)&&a[ea]||(a[ea]=++fa)}var ea=\"closure_uid_\"+(1E9*Math.random()>>>0),fa=0;function ha(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction ia(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function q(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?q=ha:q=ia;return q.apply(null,arguments)}\nfunction ja(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function t(a,b){function c(){}c.prototype=b.prototype;a.Z=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Vb=function(d,e,f){for(var h=Array(arguments.length-2),n=2;n<arguments.length;n++)h[n-2]=arguments[n];return b.prototype[e].apply(d,h)};}function v(){this.s=this.s;this.o=this.o;}var ka=0,la={};v.prototype.s=!1;v.prototype.na=function(){if(!this.s&&(this.s=!0,this.M(),0!=ka)){var a=da(this);delete la[a];}};v.prototype.M=function(){if(this.o)for(;this.o.length;)this.o.shift()();};const ma=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(\"string\"===typeof a)return \"string\"!==typeof b||1!=b.length?-1:a.indexOf(b,0);for(let c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return -1},na=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c);}:function(a,b,c){const d=a.length,e=\"string\"===typeof a?a.split(\"\"):a;for(let f=0;f<d;f++)f in e&&b.call(c,e[f],f,a);};\nfunction oa(a){a:{var b=pa;const c=a.length,d=\"string\"===typeof a?a.split(\"\"):a;for(let e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1;}return 0>b?null:\"string\"===typeof a?a.charAt(b):a[b]}function qa(a){return Array.prototype.concat.apply([],arguments)}function ra(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return []}function sa(a){return /^[\\s\\xa0]*$/.test(a)}var ta=String.prototype.trim?function(a){return a.trim()}:function(a){return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]};function w(a,b){return -1!=a.indexOf(b)}function ua(a,b){return a<b?-1:a>b?1:0}var x;a:{var va=l.navigator;if(va){var wa=va.userAgent;if(wa){x=wa;break a}}x=\"\";}function xa(a,b,c){for(const d in a)b.call(c,a[d],d,a);}function ya(a){const b={};for(const c in a)b[c]=a[c];return b}var za=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function Aa(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<za.length;f++)c=za[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c]);}}function Ca(a){Ca[\" \"](a);return a}Ca[\" \"]=aa;function Fa(a){var b=Ga;return Object.prototype.hasOwnProperty.call(b,9)?b[9]:b[9]=a(9)}var Ha=w(x,\"Opera\"),y=w(x,\"Trident\")||w(x,\"MSIE\"),Ia=w(x,\"Edge\"),Ja=Ia||y,Ka=w(x,\"Gecko\")&&!(w(x.toLowerCase(),\"webkit\")&&!w(x,\"Edge\"))&&!(w(x,\"Trident\")||w(x,\"MSIE\"))&&!w(x,\"Edge\"),La=w(x.toLowerCase(),\"webkit\")&&!w(x,\"Edge\");function Ma(){var a=l.document;return a?a.documentMode:void 0}var Na;\na:{var Oa=\"\",Pa=function(){var a=x;if(Ka)return /rv:([^\\);]+)(\\)|;)/.exec(a);if(Ia)return /Edge\\/([\\d\\.]+)/.exec(a);if(y)return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(La)return /WebKit\\/(\\S+)/.exec(a);if(Ha)return /(?:Version)[ \\/]?(\\S+)/.exec(a)}();Pa&&(Oa=Pa?Pa[1]:\"\");if(y){var Qa=Ma();if(null!=Qa&&Qa>parseFloat(Oa)){Na=String(Qa);break a}}Na=Oa;}var Ga={};\nfunction Ra(){return Fa(function(){let a=0;const b=ta(String(Na)).split(\".\"),c=ta(\"9\").split(\".\"),d=Math.max(b.length,c.length);for(let h=0;0==a&&h<d;h++){var e=b[h]||\"\",f=c[h]||\"\";do{e=/(\\d*)(\\D*)(.*)/.exec(e)||[\"\",\"\",\"\",\"\"];f=/(\\d*)(\\D*)(.*)/.exec(f)||[\"\",\"\",\"\",\"\"];if(0==e[0].length&&0==f[0].length)break;a=ua(0==e[1].length?0:parseInt(e[1],10),0==f[1].length?0:parseInt(f[1],10))||ua(0==e[2].length,0==f[2].length)||ua(e[2],f[2]);e=e[3];f=f[3];}while(0==a)}return 0<=a})}var Sa;\nif(l.document&&y){var Ta=Ma();Sa=Ta?Ta:parseInt(Na,10)||void 0;}else Sa=void 0;var Ua=Sa;var Va=function(){if(!l.addEventListener||!Object.defineProperty)return !1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0;}});try{l.addEventListener(\"test\",aa,b),l.removeEventListener(\"test\",aa,b);}catch(c){}return a}();function z(a,b){this.type=a;this.g=this.target=b;this.defaultPrevented=!1;}z.prototype.h=function(){this.defaultPrevented=!0;};function A(a,b){z.call(this,a?a.type:\"\");this.relatedTarget=this.g=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.pointerId=0;this.pointerType=\"\";this.i=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.g=b;if(b=a.relatedTarget){if(Ka){a:{try{Ca(b.nodeName);var e=!0;break a}catch(f){}e=\n!1;}e||(b=null);}}else \"mouseover\"==c?b=a.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=\na.shiftKey;this.metaKey=a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=\"string\"===typeof a.pointerType?a.pointerType:Wa[a.pointerType]||\"\";this.state=a.state;this.i=a;a.defaultPrevented&&A.Z.h.call(this);}}t(A,z);var Wa={2:\"touch\",3:\"pen\",4:\"mouse\"};A.prototype.h=function(){A.Z.h.call(this);var a=this.i;a.preventDefault?a.preventDefault():a.returnValue=!1;};var B=\"closure_listenable_\"+(1E6*Math.random()|0);var Xa=0;function Ya(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.ia=e;this.key=++Xa;this.ca=this.fa=!1;}function Za(a){a.ca=!0;a.listener=null;a.proxy=null;a.src=null;a.ia=null;}function $a(a){this.src=a;this.g={};this.h=0;}$a.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.g[f];a||(a=this.g[f]=[],this.h++);var h=ab(a,b,d,e);-1<h?(b=a[h],c||(b.fa=!1)):(b=new Ya(b,this.src,f,!!d,e),b.fa=c,a.push(b));return b};function bb(a,b){var c=b.type;if(c in a.g){var d=a.g[c],e=ma(d,b),f;(f=0<=e)&&Array.prototype.splice.call(d,e,1);f&&(Za(b),0==a.g[c].length&&(delete a.g[c],a.h--));}}\nfunction ab(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.ca&&f.listener==b&&f.capture==!!c&&f.ia==d)return e}return -1}var cb=\"closure_lm_\"+(1E6*Math.random()|0),db={};function fb(a,b,c,d,e){if(d&&d.once)return gb(a,b,c,d,e);if(Array.isArray(b)){for(var f=0;f<b.length;f++)fb(a,b[f],c,d,e);return null}c=hb(c);return a&&a[B]?a.N(b,c,p(d)?!!d.capture:!!d,e):ib(a,b,c,!1,d,e)}\nfunction ib(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var h=p(e)?!!e.capture:!!e,n=jb(a);n||(a[cb]=n=new $a(a));c=n.add(b,c,d,h,f);if(c.proxy)return c;d=kb();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)Va||(e=h),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(lb(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");return c}\nfunction kb(){function a(c){return b.call(a.src,a.listener,c)}var b=mb;return a}function gb(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)gb(a,b[f],c,d,e);return null}c=hb(c);return a&&a[B]?a.O(b,c,p(d)?!!d.capture:!!d,e):ib(a,b,c,!0,d,e)}\nfunction nb(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)nb(a,b[f],c,d,e);else (d=p(d)?!!d.capture:!!d,c=hb(c),a&&a[B])?(a=a.i,b=String(b).toString(),b in a.g&&(f=a.g[b],c=ab(f,c,d,e),-1<c&&(Za(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.g[b],a.h--)))):a&&(a=jb(a))&&(b=a.g[b.toString()],a=-1,b&&(a=ab(b,c,d,e)),(c=-1<a?b[a]:null)&&ob(c));}\nfunction ob(a){if(\"number\"!==typeof a&&a&&!a.ca){var b=a.src;if(b&&b[B])bb(b.i,a);else {var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(lb(c),d):b.addListener&&b.removeListener&&b.removeListener(d);(c=jb(b))?(bb(c,a),0==c.h&&(c.src=null,b[cb]=null)):Za(a);}}}function lb(a){return a in db?db[a]:db[a]=\"on\"+a}function mb(a,b){if(a.ca)a=!0;else {b=new A(b,this);var c=a.listener,d=a.ia||a.src;a.fa&&ob(a);a=c.call(d,b);}return a}\nfunction jb(a){a=a[cb];return a instanceof $a?a:null}var pb=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function hb(a){if(\"function\"===typeof a)return a;a[pb]||(a[pb]=function(b){return a.handleEvent(b)});return a[pb]}function C(){v.call(this);this.i=new $a(this);this.P=this;this.I=null;}t(C,v);C.prototype[B]=!0;C.prototype.removeEventListener=function(a,b,c,d){nb(this,a,b,c,d);};\nfunction D(a,b){var c,d=a.I;if(d)for(c=[];d;d=d.I)c.push(d);a=a.P;d=b.type||b;if(\"string\"===typeof b)b=new z(b,a);else if(b instanceof z)b.target=b.target||a;else {var e=b;b=new z(d,a);Aa(b,e);}e=!0;if(c)for(var f=c.length-1;0<=f;f--){var h=b.g=c[f];e=qb(h,d,!0,b)&&e;}h=b.g=a;e=qb(h,d,!0,b)&&e;e=qb(h,d,!1,b)&&e;if(c)for(f=0;f<c.length;f++)h=b.g=c[f],e=qb(h,d,!1,b)&&e;}\nC.prototype.M=function(){C.Z.M.call(this);if(this.i){var a=this.i,c;for(c in a.g){for(var d=a.g[c],e=0;e<d.length;e++)Za(d[e]);delete a.g[c];a.h--;}}this.I=null;};C.prototype.N=function(a,b,c,d){return this.i.add(String(a),b,!1,c,d)};C.prototype.O=function(a,b,c,d){return this.i.add(String(a),b,!0,c,d)};\nfunction qb(a,b,c,d){b=a.i.g[String(b)];if(!b)return !0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var h=b[f];if(h&&!h.ca&&h.capture==c){var n=h.listener,u=h.ia||h.src;h.fa&&bb(a.i,h);e=!1!==n.call(u,d)&&e;}}return e&&!d.defaultPrevented}var rb=l.JSON.stringify;function sb(){var a=tb;let b=null;a.g&&(b=a.g,a.g=a.g.next,a.g||(a.h=null),b.next=null);return b}class ub{constructor(){this.h=this.g=null;}add(a,b){const c=vb.get();c.set(a,b);this.h?this.h.next=c:this.g=c;this.h=c;}}var vb=new class{constructor(a,b){this.i=a;this.j=b;this.h=0;this.g=null;}get(){let a;0<this.h?(this.h--,a=this.g,this.g=a.next,a.next=null):a=this.i();return a}}(()=>new wb,a=>a.reset());\nclass wb{constructor(){this.next=this.g=this.h=null;}set(a,b){this.h=a;this.g=b;this.next=null;}reset(){this.next=this.g=this.h=null;}}function yb(a){l.setTimeout(()=>{throw a;},0);}function zb(a,b){Ab||Bb();Cb||(Ab(),Cb=!0);tb.add(a,b);}var Ab;function Bb(){var a=l.Promise.resolve(void 0);Ab=function(){a.then(Db);};}var Cb=!1,tb=new ub;function Db(){for(var a;a=sb();){try{a.h.call(a.g);}catch(c){yb(c);}var b=vb;b.j(a);100>b.h&&(b.h++,a.next=b.g,b.g=a);}Cb=!1;}function Eb(a,b){C.call(this);this.h=a||1;this.g=b||l;this.j=q(this.kb,this);this.l=Date.now();}t(Eb,C);k=Eb.prototype;k.da=!1;k.S=null;k.kb=function(){if(this.da){var a=Date.now()-this.l;0<a&&a<.8*this.h?this.S=this.g.setTimeout(this.j,this.h-a):(this.S&&(this.g.clearTimeout(this.S),this.S=null),D(this,\"tick\"),this.da&&(Fb(this),this.start()));}};k.start=function(){this.da=!0;this.S||(this.S=this.g.setTimeout(this.j,this.h),this.l=Date.now());};\nfunction Fb(a){a.da=!1;a.S&&(a.g.clearTimeout(a.S),a.S=null);}k.M=function(){Eb.Z.M.call(this);Fb(this);delete this.g;};function Gb(a,b,c){if(\"function\"===typeof a)c&&(a=q(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=q(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:l.setTimeout(a,b||0)}function Hb(a){a.g=Gb(()=>{a.g=null;a.i&&(a.i=!1,Hb(a));},a.j);const b=a.h;a.h=null;a.m.apply(null,b);}class Ib extends v{constructor(a,b){super();this.m=a;this.j=b;this.h=null;this.i=!1;this.g=null;}l(a){this.h=arguments;this.g?this.i=!0:Hb(this);}M(){super.M();this.g&&(l.clearTimeout(this.g),this.g=null,this.i=!1,this.h=null);}}function E(a){v.call(this);this.h=a;this.g={};}t(E,v);var Jb=[];function Kb(a,b,c,d){Array.isArray(c)||(c&&(Jb[0]=c.toString()),c=Jb);for(var e=0;e<c.length;e++){var f=fb(b,c[e],d||a.handleEvent,!1,a.h||a);if(!f)break;a.g[f.key]=f;}}function Lb(a){xa(a.g,function(b,c){this.g.hasOwnProperty(c)&&ob(b);},a);a.g={};}E.prototype.M=function(){E.Z.M.call(this);Lb(this);};E.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\");};function Mb(){this.g=!0;}Mb.prototype.Aa=function(){this.g=!1;};function Nb(a,b,c,d,e,f){a.info(function(){if(a.g)if(f){var h=\"\";for(var n=f.split(\"&\"),u=0;u<n.length;u++){var m=n[u].split(\"=\");if(1<m.length){var r=m[0];m=m[1];var G=r.split(\"_\");h=2<=G.length&&\"type\"==G[1]?h+(r+\"=\"+m+\"&\"):h+(r+\"=redacted&\");}}}else h=null;else h=f;return \"XMLHTTP REQ (\"+d+\") [attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+h});}\nfunction Ob(a,b,c,d,e,f,h){a.info(function(){return \"XMLHTTP RESP (\"+d+\") [ attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+f+\" \"+h});}function F(a,b,c,d){a.info(function(){return \"XMLHTTP TEXT (\"+b+\"): \"+Pb(a,c)+(d?\" \"+d:\"\")});}function Qb(a,b){a.info(function(){return \"TIMEOUT: \"+b});}Mb.prototype.info=function(){};\nfunction Pb(a,b){if(!a.g)return b;if(!b)return null;try{var c=JSON.parse(b);if(c)for(a=0;a<c.length;a++)if(Array.isArray(c[a])){var d=c[a];if(!(2>d.length)){var e=d[1];if(Array.isArray(e)&&!(1>e.length)){var f=e[0];if(\"noop\"!=f&&\"stop\"!=f&&\"close\"!=f)for(var h=1;h<e.length;h++)e[h]=\"\";}}}return rb(c)}catch(n){return b}}var H={},Rb=null;function Sb(){return Rb=Rb||new C}H.Ma=\"serverreachability\";function Tb(a){z.call(this,H.Ma,a);}t(Tb,z);function I(a){const b=Sb();D(b,new Tb(b,a));}H.STAT_EVENT=\"statevent\";function Ub(a,b){z.call(this,H.STAT_EVENT,a);this.stat=b;}t(Ub,z);function J(a){const b=Sb();D(b,new Ub(b,a));}H.Na=\"timingevent\";function Vb(a,b){z.call(this,H.Na,a);this.size=b;}t(Vb,z);\nfunction K(a,b){if(\"function\"!==typeof a)throw Error(\"Fn must not be null and must be a function\");return l.setTimeout(function(){a();},b)}var Wb={NO_ERROR:0,lb:1,yb:2,xb:3,sb:4,wb:5,zb:6,Ja:7,TIMEOUT:8,Cb:9};var Xb={qb:\"complete\",Mb:\"success\",Ka:\"error\",Ja:\"abort\",Eb:\"ready\",Fb:\"readystatechange\",TIMEOUT:\"timeout\",Ab:\"incrementaldata\",Db:\"progress\",tb:\"downloadprogress\",Ub:\"uploadprogress\"};function Yb(){}Yb.prototype.h=null;function Zb(a){return a.h||(a.h=a.i())}function $b(){}var L={OPEN:\"a\",pb:\"b\",Ka:\"c\",Bb:\"d\"};function ac(){z.call(this,\"d\");}t(ac,z);function bc(){z.call(this,\"c\");}t(bc,z);var cc;function dc(){}t(dc,Yb);dc.prototype.g=function(){return new XMLHttpRequest};dc.prototype.i=function(){return {}};cc=new dc;function M(a,b,c,d){this.l=a;this.j=b;this.m=c;this.X=d||1;this.V=new E(this);this.P=ec;a=Ja?125:void 0;this.W=new Eb(a);this.H=null;this.i=!1;this.s=this.A=this.v=this.K=this.F=this.Y=this.B=null;this.D=[];this.g=null;this.C=0;this.o=this.u=null;this.N=-1;this.I=!1;this.O=0;this.L=null;this.aa=this.J=this.$=this.U=!1;this.h=new fc;}function fc(){this.i=null;this.g=\"\";this.h=!1;}var ec=45E3,gc={},hc={};k=M.prototype;k.setTimeout=function(a){this.P=a;};\nfunction ic(a,b,c){a.K=1;a.v=jc(N(b));a.s=c;a.U=!0;kc(a,null);}function kc(a,b){a.F=Date.now();lc(a);a.A=N(a.v);var c=a.A,d=a.X;Array.isArray(d)||(d=[String(d)]);mc(c.h,\"t\",d);a.C=0;c=a.l.H;a.h=new fc;a.g=nc(a.l,c?b:null,!a.s);0<a.O&&(a.L=new Ib(q(a.Ia,a,a.g),a.O));Kb(a.V,a.g,\"readystatechange\",a.gb);b=a.H?ya(a.H):{};a.s?(a.u||(a.u=\"POST\"),b[\"Content-Type\"]=\"application/x-www-form-urlencoded\",a.g.ea(a.A,a.u,a.s,b)):(a.u=\"GET\",a.g.ea(a.A,a.u,null,b));I(1);Nb(a.j,a.u,a.A,a.m,a.X,a.s);}\nk.gb=function(a){a=a.target;const b=this.L;b&&3==O(a)?b.l():this.Ia(a);};\nk.Ia=function(a){try{if(a==this.g)a:{const r=O(this.g);var b=this.g.Da();const G=this.g.ba();if(!(3>r)&&(3!=r||Ja||this.g&&(this.h.h||this.g.ga()||oc(this.g)))){this.I||4!=r||7==b||(8==b||0>=G?I(3):I(2));pc(this);var c=this.g.ba();this.N=c;b:if(qc(this)){var d=oc(this.g);a=\"\";var e=d.length,f=4==O(this.g);if(!this.h.i){if(\"undefined\"===typeof TextDecoder){P(this);rc(this);var h=\"\";break b}this.h.i=new l.TextDecoder;}for(b=0;b<e;b++)this.h.h=!0,a+=this.h.i.decode(d[b],{stream:f&&b==e-1});d.splice(0,\ne);this.h.g+=a;this.C=0;h=this.h.g;}else h=this.g.ga();this.i=200==c;Ob(this.j,this.u,this.A,this.m,this.X,r,c);if(this.i){if(this.$&&!this.J){b:{if(this.g){var n,u=this.g;if((n=u.g?u.g.getResponseHeader(\"X-HTTP-Initial-Response\"):null)&&!sa(n)){var m=n;break b}}m=null;}if(c=m)F(this.j,this.m,c,\"Initial handshake response via X-HTTP-Initial-Response\"),this.J=!0,sc(this,c);else {this.i=!1;this.o=3;J(12);P(this);rc(this);break a}}this.U?(tc(this,r,h),Ja&&this.i&&3==r&&(Kb(this.V,this.W,\"tick\",this.fb),\nthis.W.start())):(F(this.j,this.m,h,null),sc(this,h));4==r&&P(this);this.i&&!this.I&&(4==r?uc(this.l,this):(this.i=!1,lc(this)));}else 400==c&&0<h.indexOf(\"Unknown SID\")?(this.o=3,J(12)):(this.o=0,J(13)),P(this),rc(this);}}}catch(r){}finally{}};function qc(a){return a.g?\"GET\"==a.u&&2!=a.K&&a.l.Ba:!1}\nfunction tc(a,b,c){let d=!0,e;for(;!a.I&&a.C<c.length;)if(e=vc(a,c),e==hc){4==b&&(a.o=4,J(14),d=!1);F(a.j,a.m,null,\"[Incomplete Response]\");break}else if(e==gc){a.o=4;J(15);F(a.j,a.m,c,\"[Invalid Chunk]\");d=!1;break}else F(a.j,a.m,e,null),sc(a,e);qc(a)&&e!=hc&&e!=gc&&(a.h.g=\"\",a.C=0);4!=b||0!=c.length||a.h.h||(a.o=1,J(16),d=!1);a.i=a.i&&d;d?0<c.length&&!a.aa&&(a.aa=!0,b=a.l,b.g==a&&b.$&&!b.L&&(b.h.info(\"Great, no buffering proxy detected. Bytes received: \"+c.length),wc(b),b.L=!0,J(11))):(F(a.j,a.m,\nc,\"[Invalid Chunked Response]\"),P(a),rc(a));}k.fb=function(){if(this.g){var a=O(this.g),b=this.g.ga();this.C<b.length&&(pc(this),tc(this,a,b),this.i&&4!=a&&lc(this));}};function vc(a,b){var c=a.C,d=b.indexOf(\"\\n\",c);if(-1==d)return hc;c=Number(b.substring(c,d));if(isNaN(c))return gc;d+=1;if(d+c>b.length)return hc;b=b.substr(d,c);a.C=d+c;return b}k.cancel=function(){this.I=!0;P(this);};function lc(a){a.Y=Date.now()+a.P;xc(a,a.P);}\nfunction xc(a,b){if(null!=a.B)throw Error(\"WatchDog timer not null\");a.B=K(q(a.eb,a),b);}function pc(a){a.B&&(l.clearTimeout(a.B),a.B=null);}k.eb=function(){this.B=null;const a=Date.now();0<=a-this.Y?(Qb(this.j,this.A),2!=this.K&&(I(3),J(17)),P(this),this.o=2,rc(this)):xc(this,this.Y-a);};function rc(a){0==a.l.G||a.I||uc(a.l,a);}function P(a){pc(a);var b=a.L;b&&\"function\"==typeof b.na&&b.na();a.L=null;Fb(a.W);Lb(a.V);a.g&&(b=a.g,a.g=null,b.abort(),b.na());}\nfunction sc(a,b){try{var c=a.l;if(0!=c.G&&(c.g==a||yc(c.i,a)))if(c.I=a.N,!a.J&&yc(c.i,a)&&3==c.G){try{var d=c.Ca.g.parse(b);}catch(m){d=null;}if(Array.isArray(d)&&3==d.length){var e=d;if(0==e[0])a:{if(!c.u){if(c.g)if(c.g.F+3E3<a.F)zc(c),Ac(c);else break a;Bc(c);J(18);}}else c.ta=e[1],0<c.ta-c.U&&37500>e[2]&&c.N&&0==c.A&&!c.v&&(c.v=K(q(c.ab,c),6E3));if(1>=Cc(c.i)&&c.ka){try{c.ka();}catch(m){}c.ka=void 0;}}else Q(c,11);}else if((a.J||c.g==a)&&zc(c),!sa(b))for(e=c.Ca.g.parse(b),b=0;b<e.length;b++){let m=e[b];\nc.U=m[0];m=m[1];if(2==c.G)if(\"c\"==m[0]){c.J=m[1];c.la=m[2];const r=m[3];null!=r&&(c.ma=r,c.h.info(\"VER=\"+c.ma));const G=m[4];null!=G&&(c.za=G,c.h.info(\"SVER=\"+c.za));const Da=m[5];null!=Da&&\"number\"===typeof Da&&0<Da&&(d=1.5*Da,c.K=d,c.h.info(\"backChannelRequestTimeoutMs_=\"+d));d=c;const ca=a.g;if(ca){const Ea=ca.g?ca.g.getResponseHeader(\"X-Client-Wire-Protocol\"):null;if(Ea){var f=d.i;!f.g&&(w(Ea,\"spdy\")||w(Ea,\"quic\")||w(Ea,\"h2\"))&&(f.j=f.l,f.g=new Set,f.h&&(Dc(f,f.h),f.h=null));}if(d.D){const xb=\nca.g?ca.g.getResponseHeader(\"X-HTTP-Session-Id\"):null;xb&&(d.sa=xb,R(d.F,d.D,xb));}}c.G=3;c.j&&c.j.xa();c.$&&(c.O=Date.now()-a.F,c.h.info(\"Handshake RTT: \"+c.O+\"ms\"));d=c;var h=a;d.oa=Ec(d,d.H?d.la:null,d.W);if(h.J){Fc(d.i,h);var n=h,u=d.K;u&&n.setTimeout(u);n.B&&(pc(n),lc(n));d.g=h;}else Gc(d);0<c.l.length&&Hc(c);}else \"stop\"!=m[0]&&\"close\"!=m[0]||Q(c,7);else 3==c.G&&(\"stop\"==m[0]||\"close\"==m[0]?\"stop\"==m[0]?Q(c,7):Ic(c):\"noop\"!=m[0]&&c.j&&c.j.wa(m),c.A=0);}I(4);}catch(m){}}function Jc(a){if(a.R&&\"function\"==typeof a.R)return a.R();if(\"string\"===typeof a)return a.split(\"\");if(ba(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}\nfunction Kc(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ba(a)||\"string\"===typeof a)na(a,b,void 0);else {if(a.T&&\"function\"==typeof a.T)var c=a.T();else if(a.R&&\"function\"==typeof a.R)c=void 0;else if(ba(a)||\"string\"===typeof a){c=[];for(var d=a.length,e=0;e<d;e++)c.push(e);}else for(e in c=[],d=0,a)c[d++]=e;d=Jc(a);e=d.length;for(var f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a);}}function S(a,b){this.h={};this.g=[];this.i=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1]);}else if(a)if(a instanceof S)for(c=a.T(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d]);}k=S.prototype;k.R=function(){Lc(this);for(var a=[],b=0;b<this.g.length;b++)a.push(this.h[this.g[b]]);return a};k.T=function(){Lc(this);return this.g.concat()};\nfunction Lc(a){if(a.i!=a.g.length){for(var b=0,c=0;b<a.g.length;){var d=a.g[b];T(a.h,d)&&(a.g[c++]=d);b++;}a.g.length=c;}if(a.i!=a.g.length){var e={};for(c=b=0;b<a.g.length;)d=a.g[b],T(e,d)||(a.g[c++]=d,e[d]=1),b++;a.g.length=c;}}k.get=function(a,b){return T(this.h,a)?this.h[a]:b};k.set=function(a,b){T(this.h,a)||(this.i++,this.g.push(a));this.h[a]=b;};k.forEach=function(a,b){for(var c=this.T(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this);}};\nfunction T(a,b){return Object.prototype.hasOwnProperty.call(a,b)}var Mc=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function Nc(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1);}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\");}}}function U(a,b){this.i=this.s=this.j=\"\";this.m=null;this.o=this.l=\"\";this.g=!1;if(a instanceof U){this.g=void 0!==b?b:a.g;Oc(this,a.j);this.s=a.s;Pc(this,a.i);Qc(this,a.m);this.l=a.l;b=a.h;var c=new Rc;c.i=b.i;b.g&&(c.g=new S(b.g),c.h=b.h);Sc(this,c);this.o=a.o;}else a&&(c=String(a).match(Mc))?(this.g=!!b,Oc(this,c[1]||\"\",!0),this.s=Tc(c[2]||\"\"),Pc(this,c[3]||\"\",!0),Qc(this,c[4]),this.l=Tc(c[5]||\"\",!0),Sc(this,c[6]||\"\",!0),this.o=Tc(c[7]||\"\")):(this.g=!!b,this.h=new Rc(null,this.g));}\nU.prototype.toString=function(){var a=[],b=this.j;b&&a.push(Uc(b,Vc,!0),\":\");var c=this.i;if(c||\"file\"==b)a.push(\"//\"),(b=this.s)&&a.push(Uc(b,Vc,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.m,null!=c&&a.push(\":\",String(c));if(c=this.l)this.i&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(Uc(c,\"/\"==c.charAt(0)?Wc:Xc,!0));(c=this.h.toString())&&a.push(\"?\",c);(c=this.o)&&a.push(\"#\",Uc(c,Yc));return a.join(\"\")};function N(a){return new U(a)}\nfunction Oc(a,b,c){a.j=c?Tc(b,!0):b;a.j&&(a.j=a.j.replace(/:$/,\"\"));}function Pc(a,b,c){a.i=c?Tc(b,!0):b;}function Qc(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.m=b;}else a.m=null;}function Sc(a,b,c){b instanceof Rc?(a.h=b,Zc(a.h,a.g)):(c||(b=Uc(b,$c)),a.h=new Rc(b,a.g));}function R(a,b,c){a.h.set(b,c);}function jc(a){R(a,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^Date.now()).toString(36));return a}\nfunction ad(a){return a instanceof U?N(a):new U(a,void 0)}function bd(a,b,c,d){var e=new U(null,void 0);a&&Oc(e,a);b&&Pc(e,b);c&&Qc(e,c);d&&(e.l=d);return e}function Tc(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}function Uc(a,b,c){return \"string\"===typeof a?(a=encodeURI(a).replace(b,cd),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function cd(a){a=a.charCodeAt(0);return \"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}\nvar Vc=/[#\\/\\?@]/g,Xc=/[#\\?:]/g,Wc=/[#\\?]/g,$c=/[#\\?@]/g,Yc=/#/g;function Rc(a,b){this.h=this.g=null;this.i=a||null;this.j=!!b;}function V(a){a.g||(a.g=new S,a.h=0,a.i&&Nc(a.i,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c);}));}k=Rc.prototype;k.add=function(a,b){V(this);this.i=null;a=W(this,a);var c=this.g.get(a);c||this.g.set(a,c=[]);c.push(b);this.h+=1;return this};\nfunction dd(a,b){V(a);b=W(a,b);T(a.g.h,b)&&(a.i=null,a.h-=a.g.get(b).length,a=a.g,T(a.h,b)&&(delete a.h[b],a.i--,a.g.length>2*a.i&&Lc(a)));}function ed(a,b){V(a);b=W(a,b);return T(a.g.h,b)}k.forEach=function(a,b){V(this);this.g.forEach(function(c,d){na(c,function(e){a.call(b,e,d,this);},this);},this);};k.T=function(){V(this);for(var a=this.g.R(),b=this.g.T(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};\nk.R=function(a){V(this);var b=[];if(\"string\"===typeof a)ed(this,a)&&(b=qa(b,this.g.get(W(this,a))));else {a=this.g.R();for(var c=0;c<a.length;c++)b=qa(b,a[c]);}return b};k.set=function(a,b){V(this);this.i=null;a=W(this,a);ed(this,a)&&(this.h-=this.g.get(a).length);this.g.set(a,[b]);this.h+=1;return this};k.get=function(a,b){if(!a)return b;a=this.R(a);return 0<a.length?String(a[0]):b};function mc(a,b,c){dd(a,b);0<c.length&&(a.i=null,a.g.set(W(a,b),ra(c)),a.h+=c.length);}\nk.toString=function(){if(this.i)return this.i;if(!this.g)return \"\";for(var a=[],b=this.g.T(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.R(d);for(var f=0;f<d.length;f++){var h=e;\"\"!==d[f]&&(h+=\"=\"+encodeURIComponent(String(d[f])));a.push(h);}}return this.i=a.join(\"&\")};function W(a,b){b=String(b);a.j&&(b=b.toLowerCase());return b}function Zc(a,b){b&&!a.j&&(V(a),a.i=null,a.g.forEach(function(c,d){var e=d.toLowerCase();d!=e&&(dd(this,d),mc(this,e,c));},a));a.j=b;}var fd=class{constructor(a,b){this.h=a;this.g=b;}};function gd(a){this.l=a||hd;l.PerformanceNavigationTiming?(a=l.performance.getEntriesByType(\"navigation\"),a=0<a.length&&(\"hq\"==a[0].nextHopProtocol||\"h2\"==a[0].nextHopProtocol)):a=!!(l.g&&l.g.Ea&&l.g.Ea()&&l.g.Ea().Zb);this.j=a?this.l:1;this.g=null;1<this.j&&(this.g=new Set);this.h=null;this.i=[];}var hd=10;function id(a){return a.h?!0:a.g?a.g.size>=a.j:!1}function Cc(a){return a.h?1:a.g?a.g.size:0}function yc(a,b){return a.h?a.h==b:a.g?a.g.has(b):!1}function Dc(a,b){a.g?a.g.add(b):a.h=b;}\nfunction Fc(a,b){a.h&&a.h==b?a.h=null:a.g&&a.g.has(b)&&a.g.delete(b);}gd.prototype.cancel=function(){this.i=jd(this);if(this.h)this.h.cancel(),this.h=null;else if(this.g&&0!==this.g.size){for(const a of this.g.values())a.cancel();this.g.clear();}};function jd(a){if(null!=a.h)return a.i.concat(a.h.D);if(null!=a.g&&0!==a.g.size){let b=a.i;for(const c of a.g.values())b=b.concat(c.D);return b}return ra(a.i)}function kd(){}kd.prototype.stringify=function(a){return l.JSON.stringify(a,void 0)};kd.prototype.parse=function(a){return l.JSON.parse(a,void 0)};function ld(){this.g=new kd;}function md(a,b,c){const d=c||\"\";try{Kc(a,function(e,f){let h=e;p(e)&&(h=rb(e));b.push(d+f+\"=\"+encodeURIComponent(h));});}catch(e){throw b.push(d+\"type=\"+encodeURIComponent(\"_badmap\")),e;}}function nd(a,b){const c=new Mb;if(l.Image){const d=new Image;d.onload=ja(od,c,d,\"TestLoadImage: loaded\",!0,b);d.onerror=ja(od,c,d,\"TestLoadImage: error\",!1,b);d.onabort=ja(od,c,d,\"TestLoadImage: abort\",!1,b);d.ontimeout=ja(od,c,d,\"TestLoadImage: timeout\",!1,b);l.setTimeout(function(){if(d.ontimeout)d.ontimeout();},1E4);d.src=a;}else b(!1);}function od(a,b,c,d,e){try{b.onload=null,b.onerror=null,b.onabort=null,b.ontimeout=null,e(d);}catch(f){}}function pd(a){this.l=a.$b||null;this.j=a.ib||!1;}t(pd,Yb);pd.prototype.g=function(){return new qd(this.l,this.j)};pd.prototype.i=function(a){return function(){return a}}({});function qd(a,b){C.call(this);this.D=a;this.u=b;this.m=void 0;this.readyState=rd;this.status=0;this.responseType=this.responseText=this.response=this.statusText=\"\";this.onreadystatechange=null;this.v=new Headers;this.h=null;this.C=\"GET\";this.B=\"\";this.g=!1;this.A=this.j=this.l=null;}t(qd,C);var rd=0;k=qd.prototype;\nk.open=function(a,b){if(this.readyState!=rd)throw this.abort(),Error(\"Error reopening a connection\");this.C=a;this.B=b;this.readyState=1;sd(this);};k.send=function(a){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.g=!0;const b={headers:this.v,method:this.C,credentials:this.m,cache:void 0};a&&(b.body=a);(this.D||l).fetch(new Request(this.B,b)).then(this.Va.bind(this),this.ha.bind(this));};\nk.abort=function(){this.response=this.responseText=\"\";this.v=new Headers;this.status=0;this.j&&this.j.cancel(\"Request was aborted.\");1<=this.readyState&&this.g&&4!=this.readyState&&(this.g=!1,td(this));this.readyState=rd;};\nk.Va=function(a){if(this.g&&(this.l=a,this.h||(this.status=this.l.status,this.statusText=this.l.statusText,this.h=a.headers,this.readyState=2,sd(this)),this.g&&(this.readyState=3,sd(this),this.g)))if(\"arraybuffer\"===this.responseType)a.arrayBuffer().then(this.Ta.bind(this),this.ha.bind(this));else if(\"undefined\"!==typeof l.ReadableStream&&\"body\"in a){this.j=a.body.getReader();if(this.u){if(this.responseType)throw Error('responseType must be empty for \"streamBinaryChunks\" mode responses.');this.response=\n[];}else this.response=this.responseText=\"\",this.A=new TextDecoder;ud(this);}else a.text().then(this.Ua.bind(this),this.ha.bind(this));};function ud(a){a.j.read().then(a.Sa.bind(a)).catch(a.ha.bind(a));}k.Sa=function(a){if(this.g){if(this.u&&a.value)this.response.push(a.value);else if(!this.u){var b=a.value?a.value:new Uint8Array(0);if(b=this.A.decode(b,{stream:!a.done}))this.response=this.responseText+=b;}a.done?td(this):sd(this);3==this.readyState&&ud(this);}};\nk.Ua=function(a){this.g&&(this.response=this.responseText=a,td(this));};k.Ta=function(a){this.g&&(this.response=a,td(this));};k.ha=function(){this.g&&td(this);};function td(a){a.readyState=4;a.l=null;a.j=null;a.A=null;sd(a);}k.setRequestHeader=function(a,b){this.v.append(a,b);};k.getResponseHeader=function(a){return this.h?this.h.get(a.toLowerCase())||\"\":\"\"};\nk.getAllResponseHeaders=function(){if(!this.h)return \"\";const a=[],b=this.h.entries();for(var c=b.next();!c.done;)c=c.value,a.push(c[0]+\": \"+c[1]),c=b.next();return a.join(\"\\r\\n\")};function sd(a){a.onreadystatechange&&a.onreadystatechange.call(a);}Object.defineProperty(qd.prototype,\"withCredentials\",{get:function(){return \"include\"===this.m},set:function(a){this.m=a?\"include\":\"same-origin\";}});var vd=l.JSON.parse;function X(a){C.call(this);this.headers=new S;this.u=a||null;this.h=!1;this.C=this.g=null;this.H=\"\";this.m=0;this.j=\"\";this.l=this.F=this.v=this.D=!1;this.B=0;this.A=null;this.J=wd;this.K=this.L=!1;}t(X,C);var wd=\"\",xd=/^https?$/i,yd=[\"POST\",\"PUT\"];k=X.prototype;\nk.ea=function(a,b,c,d){if(this.g)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.H+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.H=a;this.j=\"\";this.m=0;this.D=!1;this.h=!0;this.g=this.u?this.u.g():cc.g();this.C=this.u?Zb(this.u):Zb(cc);this.g.onreadystatechange=q(this.Fa,this);try{this.F=!0,this.g.open(b,String(a),!0),this.F=!1;}catch(f){zd(this,f);return}a=c||\"\";const e=new S(this.headers);d&&Kc(d,function(f,h){e.set(h,f);});d=oa(e.T());c=l.FormData&&a instanceof l.FormData;\n!(0<=ma(yd,b))||d||c||e.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");e.forEach(function(f,h){this.g.setRequestHeader(h,f);},this);this.J&&(this.g.responseType=this.J);\"withCredentials\"in this.g&&this.g.withCredentials!==this.L&&(this.g.withCredentials=this.L);try{Ad(this),0<this.B&&((this.K=Bd(this.g))?(this.g.timeout=this.B,this.g.ontimeout=q(this.pa,this)):this.A=Gb(this.pa,this.B,this)),this.v=!0,this.g.send(a),this.v=!1;}catch(f){zd(this,f);}};\nfunction Bd(a){return y&&Ra()&&\"number\"===typeof a.timeout&&void 0!==a.ontimeout}function pa(a){return \"content-type\"==a.toLowerCase()}k.pa=function(){\"undefined\"!=typeof goog&&this.g&&(this.j=\"Timed out after \"+this.B+\"ms, aborting\",this.m=8,D(this,\"timeout\"),this.abort(8));};function zd(a,b){a.h=!1;a.g&&(a.l=!0,a.g.abort(),a.l=!1);a.j=b;a.m=5;Cd(a);Dd(a);}function Cd(a){a.D||(a.D=!0,D(a,\"complete\"),D(a,\"error\"));}\nk.abort=function(a){this.g&&this.h&&(this.h=!1,this.l=!0,this.g.abort(),this.l=!1,this.m=a||7,D(this,\"complete\"),D(this,\"abort\"),Dd(this));};k.M=function(){this.g&&(this.h&&(this.h=!1,this.l=!0,this.g.abort(),this.l=!1),Dd(this,!0));X.Z.M.call(this);};k.Fa=function(){this.s||(this.F||this.v||this.l?Ed(this):this.cb());};k.cb=function(){Ed(this);};\nfunction Ed(a){if(a.h&&\"undefined\"!=typeof goog&&(!a.C[1]||4!=O(a)||2!=a.ba()))if(a.v&&4==O(a))Gb(a.Fa,0,a);else if(D(a,\"readystatechange\"),4==O(a)){a.h=!1;try{const n=a.ba();a:switch(n){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var b=!0;break a;default:b=!1;}var c;if(!(c=b)){var d;if(d=0===n){var e=String(a.H).match(Mc)[1]||null;if(!e&&l.self&&l.self.location){var f=l.self.location.protocol;e=f.substr(0,f.length-1);}d=!xd.test(e?e.toLowerCase():\"\");}c=d;}if(c)D(a,\"complete\"),D(a,\n\"success\");else {a.m=6;try{var h=2<O(a)?a.g.statusText:\"\";}catch(u){h=\"\";}a.j=h+\" [\"+a.ba()+\"]\";Cd(a);}}finally{Dd(a);}}}function Dd(a,b){if(a.g){Ad(a);const c=a.g,d=a.C[0]?aa:null;a.g=null;a.C=null;b||D(a,\"ready\");try{c.onreadystatechange=d;}catch(e){}}}function Ad(a){a.g&&a.K&&(a.g.ontimeout=null);a.A&&(l.clearTimeout(a.A),a.A=null);}function O(a){return a.g?a.g.readyState:0}k.ba=function(){try{return 2<O(this)?this.g.status:-1}catch(a){return -1}};\nk.ga=function(){try{return this.g?this.g.responseText:\"\"}catch(a){return \"\"}};k.Qa=function(a){if(this.g){var b=this.g.responseText;a&&0==b.indexOf(a)&&(b=b.substring(a.length));return vd(b)}};function oc(a){try{if(!a.g)return null;if(\"response\"in a.g)return a.g.response;switch(a.J){case wd:case \"text\":return a.g.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in a.g)return a.g.mozResponseArrayBuffer}return null}catch(b){return null}}k.Da=function(){return this.m};\nk.La=function(){return \"string\"===typeof this.j?this.j:String(this.j)};function Fd(a){let b=\"\";xa(a,function(c,d){b+=d;b+=\":\";b+=c;b+=\"\\r\\n\";});return b}function Gd(a,b,c){a:{for(d in c){var d=!1;break a}d=!0;}d||(c=Fd(c),\"string\"===typeof a?(null!=c&&encodeURIComponent(String(c))):R(a,b,c));}function Hd(a,b,c){return c&&c.internalChannelParams?c.internalChannelParams[a]||b:b}\nfunction Id(a){this.za=0;this.l=[];this.h=new Mb;this.la=this.oa=this.F=this.W=this.g=this.sa=this.D=this.aa=this.o=this.P=this.s=null;this.Za=this.V=0;this.Xa=Hd(\"failFast\",!1,a);this.N=this.v=this.u=this.m=this.j=null;this.X=!0;this.I=this.ta=this.U=-1;this.Y=this.A=this.C=0;this.Pa=Hd(\"baseRetryDelayMs\",5E3,a);this.$a=Hd(\"retryDelaySeedMs\",1E4,a);this.Ya=Hd(\"forwardChannelMaxRetries\",2,a);this.ra=Hd(\"forwardChannelRequestTimeoutMs\",2E4,a);this.qa=a&&a.xmlHttpFactory||void 0;this.Ba=a&&a.Yb||!1;\nthis.K=void 0;this.H=a&&a.supportsCrossDomainXhr||!1;this.J=\"\";this.i=new gd(a&&a.concurrentRequestLimit);this.Ca=new ld;this.ja=a&&a.fastHandshake||!1;this.Ra=a&&a.Wb||!1;a&&a.Aa&&this.h.Aa();a&&a.forceLongPolling&&(this.X=!1);this.$=!this.ja&&this.X&&a&&a.detectBufferingProxy||!1;this.ka=void 0;this.O=0;this.L=!1;this.B=null;this.Wa=!a||!1!==a.Xb;}k=Id.prototype;k.ma=8;k.G=1;\nfunction Ic(a){Jd(a);if(3==a.G){var b=a.V++,c=N(a.F);R(c,\"SID\",a.J);R(c,\"RID\",b);R(c,\"TYPE\",\"terminate\");Kd(a,c);b=new M(a,a.h,b,void 0);b.K=2;b.v=jc(N(c));c=!1;l.navigator&&l.navigator.sendBeacon&&(c=l.navigator.sendBeacon(b.v.toString(),\"\"));!c&&l.Image&&((new Image).src=b.v,c=!0);c||(b.g=nc(b.l,null),b.g.ea(b.v));b.F=Date.now();lc(b);}Ld(a);}k.hb=function(a){try{this.h.info(\"Origin Trials invoked: \"+a);}catch(b){}};function Ac(a){a.g&&(wc(a),a.g.cancel(),a.g=null);}\nfunction Jd(a){Ac(a);a.u&&(l.clearTimeout(a.u),a.u=null);zc(a);a.i.cancel();a.m&&(\"number\"===typeof a.m&&l.clearTimeout(a.m),a.m=null);}function Md(a,b){a.l.push(new fd(a.Za++,b));3==a.G&&Hc(a);}function Hc(a){id(a.i)||a.m||(a.m=!0,zb(a.Ha,a),a.C=0);}function Nd(a,b){if(Cc(a.i)>=a.i.j-(a.m?1:0))return !1;if(a.m)return a.l=b.D.concat(a.l),!0;if(1==a.G||2==a.G||a.C>=(a.Xa?0:a.Ya))return !1;a.m=K(q(a.Ha,a,b),Od(a,a.C));a.C++;return !0}\nk.Ha=function(a){if(this.m)if(this.m=null,1==this.G){if(!a){this.V=Math.floor(1E5*Math.random());a=this.V++;const e=new M(this,this.h,a,void 0);let f=this.s;this.P&&(f?(f=ya(f),Aa(f,this.P)):f=this.P);null===this.o&&(e.H=f);if(this.ja)a:{var b=0;for(var c=0;c<this.l.length;c++){b:{var d=this.l[c];if(\"__data__\"in d.g&&(d=d.g.__data__,\"string\"===typeof d)){d=d.length;break b}d=void 0;}if(void 0===d)break;b+=d;if(4096<b){b=c;break a}if(4096===b||c===this.l.length-1){b=c+1;break a}}b=1E3;}else b=1E3;b=\nPd(this,e,b);c=N(this.F);R(c,\"RID\",a);R(c,\"CVER\",22);this.D&&R(c,\"X-HTTP-Session-Id\",this.D);Kd(this,c);this.o&&f&&Gd(c,this.o,f);Dc(this.i,e);this.Ra&&R(c,\"TYPE\",\"init\");this.ja?(R(c,\"$req\",b),R(c,\"SID\",\"null\"),e.$=!0,ic(e,c,null)):ic(e,c,b);this.G=2;}}else 3==this.G&&(a?Qd(this,a):0==this.l.length||id(this.i)||Qd(this));};\nfunction Qd(a,b){var c;b?c=b.m:c=a.V++;const d=N(a.F);R(d,\"SID\",a.J);R(d,\"RID\",c);R(d,\"AID\",a.U);Kd(a,d);a.o&&a.s&&Gd(d,a.o,a.s);c=new M(a,a.h,c,a.C+1);null===a.o&&(c.H=a.s);b&&(a.l=b.D.concat(a.l));b=Pd(a,c,1E3);c.setTimeout(Math.round(.5*a.ra)+Math.round(.5*a.ra*Math.random()));Dc(a.i,c);ic(c,d,b);}function Kd(a,b){a.j&&Kc({},function(c,d){R(b,d,c);});}\nfunction Pd(a,b,c){c=Math.min(a.l.length,c);var d=a.j?q(a.j.Oa,a.j,a):null;a:{var e=a.l;let f=-1;for(;;){const h=[\"count=\"+c];-1==f?0<c?(f=e[0].h,h.push(\"ofs=\"+f)):f=0:h.push(\"ofs=\"+f);let n=!0;for(let u=0;u<c;u++){let m=e[u].h;const r=e[u].g;m-=f;if(0>m)f=Math.max(0,e[u].h-100),n=!1;else try{md(r,h,\"req\"+m+\"_\");}catch(G){d&&d(r);}}if(n){d=h.join(\"&\");break a}}}a=a.l.splice(0,c);b.D=a;return d}function Gc(a){a.g||a.u||(a.Y=1,zb(a.Ga,a),a.A=0);}\nfunction Bc(a){if(a.g||a.u||3<=a.A)return !1;a.Y++;a.u=K(q(a.Ga,a),Od(a,a.A));a.A++;return !0}k.Ga=function(){this.u=null;Rd(this);if(this.$&&!(this.L||null==this.g||0>=this.O)){var a=2*this.O;this.h.info(\"BP detection timer enabled: \"+a);this.B=K(q(this.bb,this),a);}};k.bb=function(){this.B&&(this.B=null,this.h.info(\"BP detection timeout reached.\"),this.h.info(\"Buffering proxy detected and switch to long-polling!\"),this.N=!1,this.L=!0,J(10),Ac(this),Rd(this));};\nfunction wc(a){null!=a.B&&(l.clearTimeout(a.B),a.B=null);}function Rd(a){a.g=new M(a,a.h,\"rpc\",a.Y);null===a.o&&(a.g.H=a.s);a.g.O=0;var b=N(a.oa);R(b,\"RID\",\"rpc\");R(b,\"SID\",a.J);R(b,\"CI\",a.N?\"0\":\"1\");R(b,\"AID\",a.U);Kd(a,b);R(b,\"TYPE\",\"xmlhttp\");a.o&&a.s&&Gd(b,a.o,a.s);a.K&&a.g.setTimeout(a.K);var c=a.g;a=a.la;c.K=1;c.v=jc(N(b));c.s=null;c.U=!0;kc(c,a);}k.ab=function(){null!=this.v&&(this.v=null,Ac(this),Bc(this),J(19));};function zc(a){null!=a.v&&(l.clearTimeout(a.v),a.v=null);}\nfunction uc(a,b){var c=null;if(a.g==b){zc(a);wc(a);a.g=null;var d=2;}else if(yc(a.i,b))c=b.D,Fc(a.i,b),d=1;else return;a.I=b.N;if(0!=a.G)if(b.i)if(1==d){c=b.s?b.s.length:0;b=Date.now()-b.F;var e=a.C;d=Sb();D(d,new Vb(d,c,b,e));Hc(a);}else Gc(a);else if(e=b.o,3==e||0==e&&0<a.I||!(1==d&&Nd(a,b)||2==d&&Bc(a)))switch(c&&0<c.length&&(b=a.i,b.i=b.i.concat(c)),e){case 1:Q(a,5);break;case 4:Q(a,10);break;case 3:Q(a,6);break;default:Q(a,2);}}\nfunction Od(a,b){let c=a.Pa+Math.floor(Math.random()*a.$a);a.j||(c*=2);return c*b}function Q(a,b){a.h.info(\"Error code \"+b);if(2==b){var c=null;a.j&&(c=null);var d=q(a.jb,a);c||(c=new U(\"//www.google.com/images/cleardot.gif\"),l.location&&\"http\"==l.location.protocol||Oc(c,\"https\"),jc(c));nd(c.toString(),d);}else J(2);a.G=0;a.j&&a.j.va(b);Ld(a);Jd(a);}k.jb=function(a){a?(this.h.info(\"Successfully pinged google.com\"),J(2)):(this.h.info(\"Failed to ping google.com\"),J(1));};\nfunction Ld(a){a.G=0;a.I=-1;if(a.j){if(0!=jd(a.i).length||0!=a.l.length)a.i.i.length=0,ra(a.l),a.l.length=0;a.j.ua();}}function Ec(a,b,c){let d=ad(c);if(\"\"!=d.i)b&&Pc(d,b+\".\"+d.i),Qc(d,d.m);else {const e=l.location;d=bd(e.protocol,b?b+\".\"+e.hostname:e.hostname,+e.port,c);}a.aa&&xa(a.aa,function(e,f){R(d,f,e);});b=a.D;c=a.sa;b&&c&&R(d,b,c);R(d,\"VER\",a.ma);Kd(a,d);return d}\nfunction nc(a,b,c){if(b&&!a.H)throw Error(\"Can't create secondary domain capable XhrIo object.\");b=c&&a.Ba&&!a.qa?new X(new pd({ib:!0})):new X(a.qa);b.L=a.H;return b}function Sd(){}k=Sd.prototype;k.xa=function(){};k.wa=function(){};k.va=function(){};k.ua=function(){};k.Oa=function(){};function Td(){if(y&&!(10<=Number(Ua)))throw Error(\"Environmental error: no available transport.\");}Td.prototype.g=function(a,b){return new Y(a,b)};\nfunction Y(a,b){C.call(this);this.g=new Id(b);this.l=a;this.h=b&&b.messageUrlParams||null;a=b&&b.messageHeaders||null;b&&b.clientProtocolHeaderRequired&&(a?a[\"X-Client-Protocol\"]=\"webchannel\":a={\"X-Client-Protocol\":\"webchannel\"});this.g.s=a;a=b&&b.initMessageHeaders||null;b&&b.messageContentType&&(a?a[\"X-WebChannel-Content-Type\"]=b.messageContentType:a={\"X-WebChannel-Content-Type\":b.messageContentType});b&&b.ya&&(a?a[\"X-WebChannel-Client-Profile\"]=b.ya:a={\"X-WebChannel-Client-Profile\":b.ya});this.g.P=\na;(a=b&&b.httpHeadersOverwriteParam)&&!sa(a)&&(this.g.o=a);this.A=b&&b.supportsCrossDomainXhr||!1;this.v=b&&b.sendRawJson||!1;(b=b&&b.httpSessionIdParam)&&!sa(b)&&(this.g.D=b,a=this.h,null!==a&&b in a&&(a=this.h,b in a&&delete a[b]));this.j=new Z(this);}t(Y,C);Y.prototype.m=function(){this.g.j=this.j;this.A&&(this.g.H=!0);var a=this.g,b=this.l,c=this.h||void 0;a.Wa&&(a.h.info(\"Origin Trials enabled.\"),zb(q(a.hb,a,b)));J(0);a.W=b;a.aa=c||{};a.N=a.X;a.F=Ec(a,null,a.W);Hc(a);};Y.prototype.close=function(){Ic(this.g);};\nY.prototype.u=function(a){if(\"string\"===typeof a){var b={};b.__data__=a;Md(this.g,b);}else this.v?(b={},b.__data__=rb(a),Md(this.g,b)):Md(this.g,a);};Y.prototype.M=function(){this.g.j=null;delete this.j;Ic(this.g);delete this.g;Y.Z.M.call(this);};function Ud(a){ac.call(this);var b=a.__sm__;if(b){a:{for(const c in b){a=c;break a}a=void 0;}if(this.i=a)a=this.i,b=null!==b&&a in b?b[a]:void 0;this.data=b;}else this.data=a;}t(Ud,ac);function Vd(){bc.call(this);this.status=1;}t(Vd,bc);function Z(a){this.g=a;}\nt(Z,Sd);Z.prototype.xa=function(){D(this.g,\"a\");};Z.prototype.wa=function(a){D(this.g,new Ud(a));};Z.prototype.va=function(a){D(this.g,new Vd(a));};Z.prototype.ua=function(){D(this.g,\"b\");};/*\n\n Copyright 2017 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nTd.prototype.createWebChannel=Td.prototype.g;Y.prototype.send=Y.prototype.u;Y.prototype.open=Y.prototype.m;Y.prototype.close=Y.prototype.close;Wb.NO_ERROR=0;Wb.TIMEOUT=8;Wb.HTTP_ERROR=6;Xb.COMPLETE=\"complete\";$b.EventType=L;L.OPEN=\"a\";L.CLOSE=\"b\";L.ERROR=\"c\";L.MESSAGE=\"d\";C.prototype.listen=C.prototype.N;X.prototype.listenOnce=X.prototype.O;X.prototype.getLastError=X.prototype.La;X.prototype.getLastErrorCode=X.prototype.Da;X.prototype.getStatus=X.prototype.ba;X.prototype.getResponseJson=X.prototype.Qa;\nX.prototype.getResponseText=X.prototype.ga;X.prototype.send=X.prototype.ea;var createWebChannelTransport = esm.createWebChannelTransport=function(){return new Td};var getStatEventTarget = esm.getStatEventTarget=function(){return Sb()};var ErrorCode = esm.ErrorCode=Wb;var EventType = esm.EventType=Xb;var Event = esm.Event=H;var Stat = esm.Stat={rb:0,ub:1,vb:2,Ob:3,Tb:4,Qb:5,Rb:6,Pb:7,Nb:8,Sb:9,PROXY:10,NOPROXY:11,Lb:12,Hb:13,Ib:14,Gb:15,Jb:16,Kb:17,nb:18,mb:19,ob:20};var FetchXmlHttpFactory = esm.FetchXmlHttpFactory=pd;var WebChannel = esm.WebChannel=$b;\nvar XhrIo = esm.XhrIo=X;\n\nexport { ErrorCode, Event, EventType, FetchXmlHttpFactory, Stat, WebChannel, XhrIo, createWebChannelTransport, esm as default, getStatEventTarget };\n//# sourceMappingURL=index.esm2017.js.map\n","import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, createMockUserToken, getModularInstance, deepEqual, getUA, isIndexedDBAvailable, isSafari, isMobileCordova, isReactNative, isElectron, isIE, isUWP, isBrowserExtension } from '@firebase/util';\nimport { XhrIo, EventType, ErrorCode, createWebChannelTransport, getStatEventTarget, FetchXmlHttpFactory, WebChannel, Event, Stat } from '@firebase/webchannel-wrapper';\n\nconst D = \"@firebase/firestore\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass C {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ C.UNAUTHENTICATED = new C(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nC.GOOGLE_CREDENTIALS = new C(\"google-credentials-uid\"), C.FIRST_PARTY = new C(\"first-party-uid\"), \nC.MOCK_USER = new C(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet x = \"9.8.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst N = new Logger(\"@firebase/firestore\");\n\n// Helper methods are needed because variables can't be exported as read/write\nfunction k() {\n    return N.logLevel;\n}\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function M(t) {\n    N.setLogLevel(t);\n}\n\nfunction O(t, ...e) {\n    if (N.logLevel <= LogLevel.DEBUG) {\n        const n = e.map(B);\n        N.debug(`Firestore (${x}): ${t}`, ...n);\n    }\n}\n\nfunction F(t, ...e) {\n    if (N.logLevel <= LogLevel.ERROR) {\n        const n = e.map(B);\n        N.error(`Firestore (${x}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function $(t, ...e) {\n    if (N.logLevel <= LogLevel.WARN) {\n        const n = e.map(B);\n        N.warn(`Firestore (${x}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function B(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function L(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${x}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw F(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function U(t, e) {\n    t || L();\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * The code of callsites invoking this function are stripped out in production\n * builds. Any side-effects of code within the debugAssert() invocation will not\n * happen in this case.\n *\n * @internal\n */ function q(t, e) {\n    t || L();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function K(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const G = {\n    // Causes are copied from:\n    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n    /** Not an error; returned on success. */\n    OK: \"ok\",\n    /** The operation was cancelled (typically by the caller). */\n    CANCELLED: \"cancelled\",\n    /** Unknown error or an error from a different error domain. */\n    UNKNOWN: \"unknown\",\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    INVALID_ARGUMENT: \"invalid-argument\",\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    DEADLINE_EXCEEDED: \"deadline-exceeded\",\n    /** Some requested entity (e.g., file or directory) was not found. */\n    NOT_FOUND: \"not-found\",\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    ALREADY_EXISTS: \"already-exists\",\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    PERMISSION_DENIED: \"permission-denied\",\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    UNAUTHENTICATED: \"unauthenticated\",\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    RESOURCE_EXHAUSTED: \"resource-exhausted\",\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operation's execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    FAILED_PRECONDITION: \"failed-precondition\",\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    ABORTED: \"aborted\",\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    OUT_OF_RANGE: \"out-of-range\",\n    /** Operation is not implemented or not supported/enabled in this service. */\n    UNIMPLEMENTED: \"unimplemented\",\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    INTERNAL: \"internal\",\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    UNAVAILABLE: \"unavailable\",\n    /** Unrecoverable data loss or corruption. */\n    DATA_LOSS: \"data-loss\"\n};\n\n/** An error returned by a Firestore operation. */ class Q extends FirebaseError {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class W {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class z {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(C.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class H {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\nclass J {\n    constructor(t) {\n        this.t = t, \n        /** Tracks the current User. */\n        this.currentUser = C.UNAUTHENTICATED, \n        /**\n         * Counter used to detect if the token changed while a getToken request was\n         * outstanding.\n         */\n        this.i = 0, this.forceRefresh = !1, this.auth = null;\n    }\n    start(t, e) {\n        let n = this.i;\n        // A change listener that prevents double-firing for the same token change.\n                const s = t => this.i !== n ? (n = this.i, e(t)) : Promise.resolve();\n        // A promise that can be waited on to block on the next token change.\n        // This promise is re-created after each change.\n                let i = new j;\n        this.o = () => {\n            this.i++, this.currentUser = this.u(), i.resolve(), i = new j, t.enqueueRetryable((() => s(this.currentUser)));\n        };\n        const r = () => {\n            const e = i;\n            t.enqueueRetryable((async () => {\n                await e.promise, await s(this.currentUser);\n            }));\n        }, o = t => {\n            O(\"FirebaseAuthCredentialsProvider\", \"Auth detected\"), this.auth = t, this.auth.addAuthTokenListener(this.o), \n            r();\n        };\n        this.t.onInit((t => o(t))), \n        // Our users can initialize Auth right after Firestore, so we give it\n        // a chance to register itself with the component framework before we\n        // determine whether to start up in unauthenticated mode.\n        setTimeout((() => {\n            if (!this.auth) {\n                const t = this.t.getImmediate({\n                    optional: !0\n                });\n                t ? o(t) : (\n                // If auth is still not available, proceed with `null` user\n                O(\"FirebaseAuthCredentialsProvider\", \"Auth not yet detected\"), i.resolve(), i = new j);\n            }\n        }), 0), r();\n    }\n    getToken() {\n        // Take note of the current value of the tokenCounter so that this method\n        // can fail (with an ABORTED error) if there is a token change while the\n        // request is outstanding.\n        const t = this.i, e = this.forceRefresh;\n        return this.forceRefresh = !1, this.auth ? this.auth.getToken(e).then((e => \n        // Cancel the request since the token changed while the request was\n        // outstanding so the response is potentially for a previous user (which\n        // user, we can't be sure).\n        this.i !== t ? (O(\"FirebaseAuthCredentialsProvider\", \"getToken aborted due to token change.\"), \n        this.getToken()) : e ? (U(\"string\" == typeof e.accessToken), new W(e.accessToken, this.currentUser)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {\n        this.forceRefresh = !0;\n    }\n    shutdown() {\n        this.auth && this.auth.removeAuthTokenListener(this.o);\n    }\n    // Auth.getUid() can return null even with a user logged in. It is because\n    // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n    // This method should only be called in the AuthTokenListener callback\n    // to guarantee to get the actual user.\n    u() {\n        const t = this.auth && this.auth.getUid();\n        return U(null === t || \"string\" == typeof t), new C(t);\n    }\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class Y {\n    constructor(t, e, n) {\n        this.type = \"FirstParty\", this.user = C.FIRST_PARTY, this.headers = new Map, this.headers.set(\"X-Goog-AuthUser\", e);\n        const s = t.auth.getAuthHeaderValueForFirstParty([]);\n        s && this.headers.set(\"Authorization\", s), n && this.headers.set(\"X-Goog-Iam-Authorization-Token\", n);\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class X {\n    constructor(t, e, n) {\n        this.h = t, this.l = e, this.m = n;\n    }\n    getToken() {\n        return Promise.resolve(new Y(this.h, this.l, this.m));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(C.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Z {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\nclass tt {\n    constructor(t) {\n        this.g = t, this.forceRefresh = !1, this.appCheck = null, this.p = null;\n    }\n    start(t, e) {\n        const n = t => {\n            null != t.error && O(\"FirebaseAppCheckTokenProvider\", `Error getting App Check token; using placeholder token instead. Error: ${t.error.message}`);\n            const n = t.token !== this.p;\n            return this.p = t.token, O(\"FirebaseAppCheckTokenProvider\", `Received ${n ? \"new\" : \"existing\"} token.`), \n            n ? e(t.token) : Promise.resolve();\n        };\n        this.o = e => {\n            t.enqueueRetryable((() => n(e)));\n        };\n        const s = t => {\n            O(\"FirebaseAppCheckTokenProvider\", \"AppCheck detected\"), this.appCheck = t, this.appCheck.addTokenListener(this.o);\n        };\n        this.g.onInit((t => s(t))), \n        // Our users can initialize AppCheck after Firestore, so we give it\n        // a chance to register itself with the component framework.\n        setTimeout((() => {\n            if (!this.appCheck) {\n                const t = this.g.getImmediate({\n                    optional: !0\n                });\n                t ? s(t) : \n                // If AppCheck is still not available, proceed without it.\n                O(\"FirebaseAppCheckTokenProvider\", \"AppCheck not yet detected\");\n            }\n        }), 0);\n    }\n    getToken() {\n        const t = this.forceRefresh;\n        return this.forceRefresh = !1, this.appCheck ? this.appCheck.getToken(t).then((t => t ? (U(\"string\" == typeof t.token), \n        this.p = t.token, new Z(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {\n        this.forceRefresh = !0;\n    }\n    shutdown() {\n        this.appCheck && this.appCheck.removeTokenListener(this.o);\n    }\n}\n\n/**\n * An AppCheck token provider that always yields an empty token.\n * @internal\n */ class et {\n    getToken() {\n        return Promise.resolve(new Z(\"\"));\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\n * exceed. All subsequent calls to next will return increasing values. If provided with a\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\n * well as write out sequence numbers that it produces via `next()`.\n */\nclass nt {\n    constructor(t, e) {\n        this.previousValue = t, e && (e.sequenceNumberHandler = t => this.I(t), this.T = t => e.writeSequenceNumber(t));\n    }\n    I(t) {\n        return this.previousValue = Math.max(t, this.previousValue), this.previousValue;\n    }\n    next() {\n        const t = ++this.previousValue;\n        return this.T && this.T(t), t;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction st(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ nt.A = -1;\n\nclass it {\n    static R() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const s = st(40);\n            for (let i = 0; i < s.length; ++i) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && s[i] < e && (n += t.charAt(s[i] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction rt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function ot(t, e, n) {\n    return t.length === e.length && t.every(((t, s) => n(t, e[s])));\n}\n\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */ function ut(t) {\n    // Return the input string, with an additional NUL byte appended.\n    return t + \"\\0\";\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass at {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new Q(G.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new Q(G.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new Q(G.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new Q(G.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return at.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return at.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new at(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? rt(this.nanoseconds, t.nanoseconds) : rt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class ct {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new ct(t);\n    }\n    static min() {\n        return new ct(new at(0, 0));\n    }\n    static max() {\n        return new ct(new at(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function ht(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction lt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\nfunction ft(t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass dt {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && L(), void 0 === n ? n = t.length - e : n > t.length - e && L(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === dt.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof dt ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let s = 0; s < n; s++) {\n            const n = t.get(s), i = e.get(s);\n            if (n < i) return -1;\n            if (n > i) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class _t extends dt {\n    construct(t, e, n) {\n        return new _t(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new Q(G.INVALID_ARGUMENT, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new _t(e);\n    }\n    static emptyPath() {\n        return new _t([]);\n    }\n}\n\nconst wt = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class mt extends dt {\n    construct(t, e, n) {\n        return new mt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return wt.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        mt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new mt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", s = 0;\n        const i = () => {\n            if (0 === n.length) throw new Q(G.INVALID_ARGUMENT, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let r = !1;\n        for (;s < t.length; ) {\n            const e = t[s];\n            if (\"\\\\\" === e) {\n                if (s + 1 === t.length) throw new Q(G.INVALID_ARGUMENT, \"Path has trailing escape character: \" + t);\n                const e = t[s + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new Q(G.INVALID_ARGUMENT, \"Path has invalid escape sequence: \" + t);\n                n += e, s += 2;\n            } else \"`\" === e ? (r = !r, s++) : \".\" !== e || r ? (n += e, s++) : (i(), s++);\n        }\n        if (i(), r) throw new Q(G.INVALID_ARGUMENT, \"Unterminated ` in path: \" + t);\n        return new mt(e);\n    }\n    static emptyPath() {\n        return new mt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class gt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(mt.comparator);\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return ot(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/** True if and only if the Base64 conversion functions are available. */\nfunction yt() {\n    return \"undefined\" != typeof atob;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */ class pt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new pt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new pt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return rt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\npt.EMPTY_BYTE_STRING = new pt(\"\");\n\nconst It = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Tt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (U(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = It.exec(t);\n        if (U(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const s = new Date(t);\n        return {\n            seconds: Math.floor(s.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Et(t.seconds),\n        nanos: Et(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Et(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function At(t) {\n    return \"string\" == typeof t ? pt.fromBase64String(t) : pt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Rt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Creates a new ServerTimestamp proto value (using the internal format).\n */\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nfunction bt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Rt(e) ? bt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Pt(t) {\n    const e = Tt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new at(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Vt {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, s, i, r, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = s, this.ssl = i, \n        this.forceLongPolling = r, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass vt {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new vt(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof vt && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Sentinel value that sorts before any Mutation Batch ID. */\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction St(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function Dt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */ function Ct(t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !Dt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class xt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new xt(_t.fromString(t));\n    }\n    static fromName(t) {\n        return new xt(_t.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new xt(_t.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === _t.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return _t.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new xt(new _t(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Nt = {\n    mapValue: {\n        fields: {\n            __type__: {\n                stringValue: \"__max__\"\n            }\n        }\n    }\n}, kt = {\n    nullValue: \"NULL_VALUE\"\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Mt(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Rt(t) ? 4 /* ServerTimestampValue */ : Ht(t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : L();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ot(t, e) {\n    if (t === e) return !0;\n    const n = Mt(t);\n    if (n !== Mt(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Pt(t).isEqual(Pt(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Tt(t.timestampValue), s = Tt(e.timestampValue);\n            return n.seconds === s.seconds && n.nanos === s.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return At(t.bytesValue).isEqual(At(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return Et(t.geoPointValue.latitude) === Et(e.geoPointValue.latitude) && Et(t.geoPointValue.longitude) === Et(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Et(t.integerValue) === Et(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Et(t.doubleValue), s = Et(e.doubleValue);\n                return n === s ? Dt(n) === Dt(s) : isNaN(n) && isNaN(s);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return ot(t.arrayValue.values || [], e.arrayValue.values || [], Ot);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, s = e.mapValue.fields || {};\n            if (ht(n) !== ht(s)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === s[t] || !Ot(n[t], s[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return L();\n    }\n}\n\nfunction Ft(t, e) {\n    return void 0 !== (t.values || []).find((t => Ot(t, e)));\n}\n\nfunction $t(t, e) {\n    if (t === e) return 0;\n    const n = Mt(t), s = Mt(e);\n    if (n !== s) return rt(n, s);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return rt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = Et(t.integerValue || t.doubleValue), s = Et(e.integerValue || e.doubleValue);\n            return n < s ? -1 : n > s ? 1 : n === s ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(s) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return Bt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return Bt(Pt(t), Pt(e));\n\n      case 5 /* StringValue */ :\n        return rt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = At(t), s = At(e);\n            return n.compareTo(s);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), s = e.split(\"/\");\n            for (let t = 0; t < n.length && t < s.length; t++) {\n                const e = rt(n[t], s[t]);\n                if (0 !== e) return e;\n            }\n            return rt(n.length, s.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = rt(Et(t.latitude), Et(e.latitude));\n            if (0 !== n) return n;\n            return rt(Et(t.longitude), Et(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], s = e.values || [];\n            for (let t = 0; t < n.length && t < s.length; ++t) {\n                const e = $t(n[t], s[t]);\n                if (e) return e;\n            }\n            return rt(n.length, s.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            if (t === Nt.mapValue && e === Nt.mapValue) return 0;\n            if (t === Nt.mapValue) return 1;\n            if (e === Nt.mapValue) return -1;\n            const n = t.fields || {}, s = Object.keys(n), i = e.fields || {}, r = Object.keys(i);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            s.sort(), r.sort();\n            for (let t = 0; t < s.length && t < r.length; ++t) {\n                const e = rt(s[t], r[t]);\n                if (0 !== e) return e;\n                const o = $t(n[s[t]], i[r[t]]);\n                if (0 !== o) return o;\n            }\n            return rt(s.length, r.length);\n        }\n        /**\n * Generates the canonical ID for the provided field value (as used in Target\n * serialization).\n */ (t.mapValue, e.mapValue);\n\n      default:\n        throw L();\n    }\n}\n\nfunction Bt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return rt(t, e);\n    const n = Tt(t), s = Tt(e), i = rt(n.seconds, s.seconds);\n    return 0 !== i ? i : rt(n.nanos, s.nanos);\n}\n\nfunction Lt(t) {\n    return Ut(t);\n}\n\nfunction Ut(t) {\n    return \"nullValue\" in t ? \"null\" : \"booleanValue\" in t ? \"\" + t.booleanValue : \"integerValue\" in t ? \"\" + t.integerValue : \"doubleValue\" in t ? \"\" + t.doubleValue : \"timestampValue\" in t ? function(t) {\n        const e = Tt(t);\n        return `time(${e.seconds},${e.nanos})`;\n    }(t.timestampValue) : \"stringValue\" in t ? t.stringValue : \"bytesValue\" in t ? At(t.bytesValue).toBase64() : \"referenceValue\" in t ? (n = t.referenceValue, \n    xt.fromName(n).toString()) : \"geoPointValue\" in t ? `geo(${(e = t.geoPointValue).latitude},${e.longitude})` : \"arrayValue\" in t ? function(t) {\n        let e = \"[\", n = !0;\n        for (const s of t.values || []) n ? n = !1 : e += \",\", e += Ut(s);\n        return e + \"]\";\n    }\n    /** Returns a reference value for the provided database and key. */ (t.arrayValue) : \"mapValue\" in t ? function(t) {\n        // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n        // matching canonical IDs for identical maps, we need to sort the keys.\n        const e = Object.keys(t.fields || {}).sort();\n        let n = \"{\", s = !0;\n        for (const i of e) s ? s = !1 : n += \",\", n += `${i}:${Ut(t.fields[i])}`;\n        return n + \"}\";\n    }(t.mapValue) : L();\n    var e, n;\n}\n\nfunction qt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an IntegerValue . */ function Kt(t) {\n    return !!t && \"integerValue\" in t;\n}\n\n/** Returns true if `value` is a DoubleValue. */\n/** Returns true if `value` is an ArrayValue. */\nfunction Gt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Qt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function jt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Wt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function zt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return lt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = zt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = zt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\n/** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */ function Ht(t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n}\n\n/** Returns the lowest value for the given value type (inclusive). */ function Jt(t) {\n    return \"nullValue\" in t ? kt : \"booleanValue\" in t ? {\n        booleanValue: !1\n    } : \"integerValue\" in t || \"doubleValue\" in t ? {\n        doubleValue: NaN\n    } : \"timestampValue\" in t ? {\n        timestampValue: {\n            seconds: Number.MIN_SAFE_INTEGER\n        }\n    } : \"stringValue\" in t ? {\n        stringValue: \"\"\n    } : \"bytesValue\" in t ? {\n        bytesValue: \"\"\n    } : \"referenceValue\" in t ? qt(vt.empty(), xt.empty()) : \"geoPointValue\" in t ? {\n        geoPointValue: {\n            latitude: -90,\n            longitude: -180\n        }\n    } : \"arrayValue\" in t ? {\n        arrayValue: {}\n    } : \"mapValue\" in t ? {\n        mapValue: {}\n    } : L();\n}\n\n/** Returns the largest value for the given value type (exclusive). */ function Yt(t) {\n    return \"nullValue\" in t ? {\n        booleanValue: !1\n    } : \"booleanValue\" in t ? {\n        doubleValue: NaN\n    } : \"integerValue\" in t || \"doubleValue\" in t ? {\n        timestampValue: {\n            seconds: Number.MIN_SAFE_INTEGER\n        }\n    } : \"timestampValue\" in t ? {\n        stringValue: \"\"\n    } : \"stringValue\" in t ? {\n        bytesValue: \"\"\n    } : \"bytesValue\" in t ? qt(vt.empty(), xt.empty()) : \"referenceValue\" in t ? {\n        geoPointValue: {\n            latitude: -90,\n            longitude: -180\n        }\n    } : \"geoPointValue\" in t ? {\n        arrayValue: {}\n    } : \"arrayValue\" in t ? {\n        mapValue: {}\n    } : \"mapValue\" in t ? Nt : L();\n}\n\nfunction Xt(t, e) {\n    const n = $t(t.value, e.value);\n    return 0 !== n ? n : t.inclusive && !e.inclusive ? -1 : !t.inclusive && e.inclusive ? 1 : 0;\n}\n\nfunction Zt(t, e) {\n    const n = $t(t.value, e.value);\n    return 0 !== n ? n : t.inclusive && !e.inclusive ? 1 : !t.inclusive && e.inclusive ? -1 : 0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class te {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new te({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Wt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = zt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = mt.emptyPath(), n = {}, s = [];\n        t.forEach(((t, i) => {\n            if (!e.isImmediateParentOf(i)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, s), n = {}, s = [], e = i.popLast();\n            }\n            t ? n[i.lastSegment()] = zt(t) : s.push(i.lastSegment());\n        }));\n        const i = this.getFieldsMap(e);\n        this.applyChanges(i, n, s);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Wt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ot(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let s = e.mapValue.fields[t.get(n)];\n            Wt(s) && s.mapValue.fields || (s = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = s), e = s;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        lt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new te(zt(this.value));\n    }\n}\n\n/**\n * Returns a FieldMask built from all fields in a MapValue.\n */ function ee(t) {\n    const e = [];\n    return lt(t.fields, ((t, n) => {\n        const s = new mt([ t ]);\n        if (Wt(n)) {\n            const t = ee(n.mapValue).fields;\n            if (0 === t.length) \n            // Preserve the empty map by adding it to the FieldMask.\n            e.push(s); else \n            // For nested and non-empty ObjectValues, add the FieldPath of the\n            // leaf nodes.\n            for (const n of t) e.push(s.child(n));\n        } else \n        // For nested and non-empty ObjectValues, add the FieldPath of the leaf\n        // nodes.\n        e.push(s);\n    })), new gt(e);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class ne {\n    constructor(t, e, n, s, i, r) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = s, this.data = i, \n        this.documentState = r;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new ne(t, 0 /* INVALID */ , ct.min(), ct.min(), te.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new ne(t, 1 /* FOUND_DOCUMENT */ , e, ct.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new ne(t, 2 /* NO_DOCUMENT */ , e, ct.min(), te.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new ne(t, 3 /* UNKNOWN_DOCUMENT */ , e, ct.min(), te.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = te.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = te.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof ne && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new ne(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * Compares the value for field `field` in the provided documents. Throws if\n * the field does not exist in both documents.\n */\n/**\n * An index definition for field indexes in Firestore.\n *\n * Every index is associated with a collection. The definition contains a list\n * of fields and their index kind (which can be `ASCENDING`, `DESCENDING` or\n * `CONTAINS` for ArrayContains/ArrayContainsAny queries).\n *\n * Unlike the backend, the SDK does not differentiate between collection or\n * collection group-scoped indices. Every index can be used for both single\n * collection and collection group queries.\n */\nclass se {\n    constructor(\n    /**\n     * The index ID. Returns -1 if the index ID is not available (e.g. the index\n     * has not yet been persisted).\n     */\n    t, \n    /** The collection ID this index applies to. */\n    e, \n    /** The field segments for this index. */\n    n, \n    /** Shows how up-to-date the index is for the current user. */\n    s) {\n        this.indexId = t, this.collectionGroup = e, this.fields = n, this.indexState = s;\n    }\n}\n\n/** An ID for an index that has not yet been added to persistence.  */\n/** Returns the ArrayContains/ArrayContainsAny segment for this index. */\nfunction ie(t) {\n    return t.fields.find((t => 2 /* CONTAINS */ === t.kind));\n}\n\n/** Returns all directional (ascending/descending) segments for this index. */ function re(t) {\n    return t.fields.filter((t => 2 /* CONTAINS */ !== t.kind));\n}\n\n/**\n * Returns the order of the document key component for the given index.\n *\n * PORTING NOTE: This is only used in the Web IndexedDb implementation.\n */ se.UNKNOWN_ID = -1;\n\n/** An index component consisting of field path and index type.  */\nclass oe {\n    constructor(\n    /** The field path of the component. */\n    t, \n    /** The fields sorting order. */\n    e) {\n        this.fieldPath = t, this.kind = e;\n    }\n}\n\n/**\n * Stores the \"high water mark\" that indicates how updated the Index is for the\n * current user.\n */ class ue {\n    constructor(\n    /**\n     * Indicates when the index was last updated (relative to other indexes).\n     */\n    t, \n    /** The the latest indexed read time, document and batch id. */\n    e) {\n        this.sequenceNumber = t, this.offset = e;\n    }\n    /** The state of an index that has not yet been backfilled. */    static empty() {\n        return new ue(0, he.min());\n    }\n}\n\n/**\n * Creates an offset that matches all documents with a read time higher than\n * `readTime`.\n */ function ae(t, e) {\n    // We want to create an offset that matches all documents with a read time\n    // greater than the provided read time. To do so, we technically need to\n    // create an offset for `(readTime, MAX_DOCUMENT_KEY)`. While we could use\n    // Unicode codepoints to generate MAX_DOCUMENT_KEY, it is much easier to use\n    // `(readTime + 1, DocumentKey.empty())` since `> DocumentKey.empty()` matches\n    // all valid document IDs.\n    const n = t.toTimestamp().seconds, s = t.toTimestamp().nanoseconds + 1, i = ct.fromTimestamp(1e9 === s ? new at(n + 1, 0) : new at(n, s));\n    return new he(i, xt.empty(), e);\n}\n\n/** Creates a new offset based on the provided document. */ function ce(t) {\n    return new he(t.readTime, t.key, -1);\n}\n\n/**\n * Stores the latest read time, document and batch ID that were processed for an\n * index.\n */ class he {\n    constructor(\n    /**\n     * The latest read time version that has been indexed by Firestore for this\n     * field index.\n     */\n    t, \n    /**\n     * The key of the last document that was indexed for this query. Use\n     * `DocumentKey.empty()` if no document has been indexed.\n     */\n    e, \n    /*\n     * The largest mutation batch id that's been processed by Firestore.\n     */\n    n) {\n        this.readTime = t, this.documentKey = e, this.largestBatchId = n;\n    }\n    /** Returns an offset that sorts before all regular offsets. */    static min() {\n        return new he(ct.min(), xt.empty(), -1);\n    }\n    /** Returns an offset that sorts after all regular offsets. */    static max() {\n        return new he(ct.max(), xt.empty(), -1);\n    }\n}\n\nfunction le(t, e) {\n    let n = t.readTime.compareTo(e.readTime);\n    return 0 !== n ? n : (n = xt.comparator(t.documentKey, e.documentKey), 0 !== n ? n : rt(t.largestBatchId, e.largestBatchId));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass fe {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || _e.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new fe(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, _e.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new fe(this.comparator, this.root.remove(t, this.comparator).copy(null, null, _e.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const s = this.comparator(t, n.key);\n            if (0 === s) return e + n.left.size;\n            s < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new de(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new de(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new de(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new de(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass de {\n    constructor(t, e, n, s) {\n        this.isReverse = s, this.nodeStack = [];\n        let i = 1;\n        for (;!t.isEmpty(); ) if (i = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && s && (i *= -1), i < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === i) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass _e {\n    constructor(t, e, n, s, i) {\n        this.key = t, this.value = e, this.color = null != n ? n : _e.RED, this.left = null != s ? s : _e.EMPTY, \n        this.right = null != i ? i : _e.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, s, i) {\n        return new _e(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != s ? s : this.left, null != i ? i : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let s = this;\n        const i = n(t, s.key);\n        return s = i < 0 ? s.copy(null, null, null, s.left.insert(t, e, n), null) : 0 === i ? s.copy(null, e, null, null, null) : s.copy(null, null, null, null, s.right.insert(t, e, n)), \n        s.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return _e.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, s = this;\n        if (e(t, s.key) < 0) s.left.isEmpty() || s.left.isRed() || s.left.left.isRed() || (s = s.moveRedLeft()), \n        s = s.copy(null, null, null, s.left.remove(t, e), null); else {\n            if (s.left.isRed() && (s = s.rotateRight()), s.right.isEmpty() || s.right.isRed() || s.right.left.isRed() || (s = s.moveRedRight()), \n            0 === e(t, s.key)) {\n                if (s.right.isEmpty()) return _e.EMPTY;\n                n = s.right.min(), s = s.copy(n.key, n.value, null, null, s.right.removeMin());\n            }\n            s = s.copy(null, null, null, null, s.right.remove(t, e));\n        }\n        return s.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, _e.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, _e.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw L();\n        if (this.right.isRed()) throw L();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw L();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n_e.EMPTY = null, _e.RED = !0, _e.BLACK = !1;\n\n// end LLRBEmptyNode\n_e.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw L();\n    }\n    get value() {\n        throw L();\n    }\n    get color() {\n        throw L();\n    }\n    get left() {\n        throw L();\n    }\n    get right() {\n        throw L();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, s, i) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new _e(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass we {\n    constructor(t) {\n        this.comparator = t, this.data = new fe(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const s = n.getNext();\n            if (this.comparator(s.key, t[1]) >= 0) return;\n            e(s.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new me(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new me(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof we)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, s = n.getNext().key;\n            if (0 !== this.comparator(t, s)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new we(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass me {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * Compares two sorted sets for equality using their natural ordering. The\n * method computes the intersection and invokes `onAdd` for every element that\n * is in `after` but not `before`. `onRemove` is invoked for every element in\n * `before` but missing from `after`.\n *\n * The method creates a copy of both `before` and `after` and runs in O(n log\n * n), where n is the size of the two lists.\n *\n * @param before - The elements that exist in the original set.\n * @param after - The elements to diff against the original set.\n * @param comparator - The comparator for the elements in before and after.\n * @param onAdd - A function to invoke for every element that is part of `\n * after` but not `before`.\n * @param onRemove - A function to invoke for every element that is part of\n * `before` but not `after`.\n */\n/**\n * Returns the next element from the iterator or `undefined` if none available.\n */\nfunction ge(t) {\n    return t.hasNext() ? t.getNext() : void 0;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass ye {\n    constructor(t, e = null, n = [], s = [], i = null, r = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = s, this.limit = i, \n        this.startAt = r, this.endAt = o, this.P = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], s = [], i = null, r = null, o = null) {\n    return new ye(t, e, n, s, i, r, o);\n}\n\nfunction Ie(t) {\n    const e = K(t);\n    if (null === e.P) {\n        let t = e.path.canonicalString();\n        null !== e.collectionGroup && (t += \"|cg:\" + e.collectionGroup), t += \"|f:\", t += e.filters.map((t => {\n            return (e = t).field.canonicalString() + e.op.toString() + Lt(e.value);\n            var e;\n        })).join(\",\"), t += \"|ob:\", t += e.orderBy.map((t => function(t) {\n            // TODO(b/29183165): Make this collision robust.\n            return t.field.canonicalString() + t.dir;\n        }(t))).join(\",\"), St(e.limit) || (t += \"|l:\", t += e.limit), e.startAt && (t += \"|lb:\", \n        t += e.startAt.inclusive ? \"b:\" : \"a:\", t += e.startAt.position.map((t => Lt(t))).join(\",\")), \n        e.endAt && (t += \"|ub:\", t += e.endAt.inclusive ? \"a:\" : \"b:\", t += e.endAt.position.map((t => Lt(t))).join(\",\")), \n        e.P = t;\n    }\n    return e.P;\n}\n\nfunction Te(t) {\n    let e = t.path.canonicalString();\n    return null !== t.collectionGroup && (e += \" collectionGroup=\" + t.collectionGroup), \n    t.filters.length > 0 && (e += `, filters: [${t.filters.map((t => {\n        return `${(e = t).field.canonicalString()} ${e.op} ${Lt(e.value)}`;\n        /** Returns a debug description for `filter`. */\n        var e;\n        /** Filter that matches on key fields (i.e. '__name__'). */    })).join(\", \")}]`), \n    St(t.limit) || (e += \", limit: \" + t.limit), t.orderBy.length > 0 && (e += `, orderBy: [${t.orderBy.map((t => function(t) {\n        return `${t.field.canonicalString()} (${t.dir})`;\n    }(t))).join(\", \")}]`), t.startAt && (e += \", startAt: \", e += t.startAt.inclusive ? \"b:\" : \"a:\", \n    e += t.startAt.position.map((t => Lt(t))).join(\",\")), t.endAt && (e += \", endAt: \", \n    e += t.endAt.inclusive ? \"a:\" : \"b:\", e += t.endAt.position.map((t => Lt(t))).join(\",\")), \n    `Target(${e})`;\n}\n\nfunction Ee(t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n    for (let n = 0; n < t.orderBy.length; n++) if (!$e(t.orderBy[n], e.orderBy[n])) return !1;\n    if (t.filters.length !== e.filters.length) return !1;\n    for (let i = 0; i < t.filters.length; i++) if (n = t.filters[i], s = e.filters[i], \n    n.op !== s.op || !n.field.isEqual(s.field) || !Ot(n.value, s.value)) return !1;\n    var n, s;\n    return t.collectionGroup === e.collectionGroup && (!!t.path.isEqual(e.path) && (!!Le(t.startAt, e.startAt) && Le(t.endAt, e.endAt)));\n}\n\nfunction Ae(t) {\n    return xt.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n}\n\n/** Returns the field filters that target the given field path. */ function Re(t, e) {\n    return t.filters.filter((t => t instanceof Ve && t.field.isEqual(e)));\n}\n\n/**\n * Returns the values that are used in ARRAY_CONTAINS or ARRAY_CONTAINS_ANY\n * filters. Returns `null` if there are no such filters.\n */\n/**\n * Returns the value to use as the lower bound for ascending index segment at\n * the provided `fieldPath` (or the upper bound for an descending segment).\n */\nfunction be(t, e, n) {\n    let s = kt, i = !0;\n    // Process all filters to find a value for the current field segment\n    for (const n of Re(t, e)) {\n        let t = kt, e = !0;\n        switch (n.op) {\n          case \"<\" /* LESS_THAN */ :\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            t = Jt(n.value);\n            break;\n\n          case \"==\" /* EQUAL */ :\n          case \"in\" /* IN */ :\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            t = n.value;\n            break;\n\n          case \">\" /* GREATER_THAN */ :\n            t = n.value, e = !1;\n            break;\n\n          case \"!=\" /* NOT_EQUAL */ :\n          case \"not-in\" /* NOT_IN */ :\n            t = kt;\n // Remaining filters cannot be used as lower bounds.\n                }\n        Xt({\n            value: s,\n            inclusive: i\n        }, {\n            value: t,\n            inclusive: e\n        }) < 0 && (s = t, i = e);\n    }\n    // If there is an additional bound, compare the values against the existing\n    // range to see if we can narrow the scope.\n        if (null !== n) for (let r = 0; r < t.orderBy.length; ++r) {\n        if (t.orderBy[r].field.isEqual(e)) {\n            const t = n.position[r];\n            Xt({\n                value: s,\n                inclusive: i\n            }, {\n                value: t,\n                inclusive: n.inclusive\n            }) < 0 && (s = t, i = n.inclusive);\n            break;\n        }\n    }\n    return {\n        value: s,\n        inclusive: i\n    };\n}\n\n/**\n * Returns the value to use as the upper bound for ascending index segment at\n * the provided `fieldPath` (or the lower bound for a descending segment).\n */ function Pe(t, e, n) {\n    let s = Nt, i = !0;\n    // Process all filters to find a value for the current field segment\n    for (const n of Re(t, e)) {\n        let t = Nt, e = !0;\n        switch (n.op) {\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n          case \">\" /* GREATER_THAN */ :\n            t = Yt(n.value), e = !1;\n            break;\n\n          case \"==\" /* EQUAL */ :\n          case \"in\" /* IN */ :\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            t = n.value;\n            break;\n\n          case \"<\" /* LESS_THAN */ :\n            t = n.value, e = !1;\n            break;\n\n          case \"!=\" /* NOT_EQUAL */ :\n          case \"not-in\" /* NOT_IN */ :\n            t = Nt;\n // Remaining filters cannot be used as upper bounds.\n                }\n        Zt({\n            value: s,\n            inclusive: i\n        }, {\n            value: t,\n            inclusive: e\n        }) > 0 && (s = t, i = e);\n    }\n    // If there is an additional bound, compare the values against the existing\n    // range to see if we can narrow the scope.\n        if (null !== n) for (let r = 0; r < t.orderBy.length; ++r) {\n        if (t.orderBy[r].field.isEqual(e)) {\n            const t = n.position[r];\n            Zt({\n                value: s,\n                inclusive: i\n            }, {\n                value: t,\n                inclusive: n.inclusive\n            }) > 0 && (s = t, i = n.inclusive);\n            break;\n        }\n    }\n    return {\n        value: s,\n        inclusive: i\n    };\n}\n\n/** Returns the number of segments of a perfect index for this target. */ class Ve extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.V(t, e, n) : new ve(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new xe(t, n) : \"in\" /* IN */ === e ? new Ne(t, n) : \"not-in\" /* NOT_IN */ === e ? new ke(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new Me(t, n) : new Ve(t, e, n);\n    }\n    static V(t, e, n) {\n        return \"in\" /* IN */ === e ? new Se(t, n) : new De(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.v($t(e, this.value)) : null !== e && Mt(this.value) === Mt(e) && this.v($t(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    v(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return L();\n        }\n    }\n    S() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\nclass ve extends Ve {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = xt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = xt.comparator(t.key, this.key);\n        return this.v(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Se extends Ve {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = Ce(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class De extends Ve {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = Ce(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Ce(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => xt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class xe extends Ve {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Gt(e) && Ft(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class Ne extends Ve {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Ft(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ke extends Ve {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Ft(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Ft(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class Me extends Ve {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Gt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Ft(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class Oe {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class Fe {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction $e(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction Be(t, e, n) {\n    let s = 0;\n    for (let i = 0; i < t.position.length; i++) {\n        const r = e[i], o = t.position[i];\n        if (r.field.isKeyField()) s = xt.comparator(xt.fromName(o.referenceValue), n.key); else {\n            s = $t(o, n.data.field(r.field));\n        }\n        if (\"desc\" /* DESCENDING */ === r.dir && (s *= -1), 0 !== s) break;\n    }\n    return s;\n}\n\n/**\n * Returns true if a document sorts after a bound using the provided sort\n * order.\n */ function Le(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ot(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class Ue {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], s = [], i = null, r = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = s, \n        this.limit = i, this.limitType = r, this.startAt = o, this.endAt = u, this.D = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.C = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query instance with the options provided. */ function qe(t, e, n, s, i, r, o, u) {\n    return new Ue(t, e, n, s, i, r, o, u);\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Ke(t) {\n    return new Ue(t);\n}\n\n/**\n * Helper to convert a collection group query into a collection query at a\n * specific path. This is used when executing collection group queries, since\n * we have to split the query into a set of collection queries at multiple\n * paths.\n */\n/**\n * Returns true if this query does not specify any query constraints that\n * could remove results.\n */\nfunction Ge(t) {\n    return 0 === t.filters.length && null === t.limit && null == t.startAt && null == t.endAt && (0 === t.explicitOrderBy.length || 1 === t.explicitOrderBy.length && t.explicitOrderBy[0].field.isKeyField());\n}\n\nfunction Qe(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction je(t) {\n    for (const e of t.filters) if (e.S()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction We(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function ze(t) {\n    const e = K(t);\n    if (null === e.D) {\n        e.D = [];\n        const t = je(e), n = Qe(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.D.push(new Fe(t)), e.D.push(new Fe(mt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.D.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.D.push(new Fe(mt.keyField(), t));\n            }\n        }\n    }\n    return e.D;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function He(t) {\n    const e = K(t);\n    if (!e.C) if (\"F\" /* First */ === e.limitType) e.C = pe(e.path, e.collectionGroup, ze(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of ze(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new Fe(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Oe(e.endAt.position, e.endAt.inclusive) : null, s = e.startAt ? new Oe(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.C = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, s);\n    }\n    return e.C;\n}\n\nfunction Je(t, e, n) {\n    return new Ue(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n}\n\nfunction Ye(t, e) {\n    return Ee(He(t), He(e)) && t.limitType === e.limitType;\n}\n\n// TODO(b/29183165): This is used to get a unique string from a query to, for\n// example, use as a dictionary key, but the implementation is subject to\n// collisions. Make it collision-free.\nfunction Xe(t) {\n    return `${Ie(He(t))}|lt:${t.limitType}`;\n}\n\nfunction Ze(t) {\n    return `Query(target=${Te(He(t))}; limitType=${t.limitType})`;\n}\n\n/** Returns whether `doc` matches the constraints of `query`. */ function tn(t, e) {\n    return e.isFoundDocument() && function(t, e) {\n        const n = e.key.path;\n        return null !== t.collectionGroup ? e.key.hasCollectionId(t.collectionGroup) && t.path.isPrefixOf(n) : xt.isDocumentKey(t.path) ? t.path.isEqual(n) : t.path.isImmediateParentOf(n);\n    }\n    /**\n * A document must have a value for every ordering clause in order to show up\n * in the results.\n */ (t, e) && function(t, e) {\n        for (const n of t.explicitOrderBy) \n        // order by key always matches\n        if (!n.field.isKeyField() && null === e.data.field(n.field)) return !1;\n        return !0;\n    }(t, e) && function(t, e) {\n        for (const n of t.filters) if (!n.matches(e)) return !1;\n        return !0;\n    }\n    /** Makes sure a document is within the bounds, if provided. */ (t, e) && function(t, e) {\n        if (t.startAt && !\n        /**\n * Returns true if a document sorts before a bound using the provided sort\n * order.\n */\n        function(t, e, n) {\n            const s = Be(t, e, n);\n            return t.inclusive ? s <= 0 : s < 0;\n        }(t.startAt, ze(t), e)) return !1;\n        if (t.endAt && !function(t, e, n) {\n            const s = Be(t, e, n);\n            return t.inclusive ? s >= 0 : s > 0;\n        }(t.endAt, ze(t), e)) return !1;\n        return !0;\n    }\n    /**\n * Returns the collection group that this query targets.\n *\n * PORTING NOTE: This is only used in the Web SDK to facilitate multi-tab\n * synchronization for query results.\n */ (t, e);\n}\n\nfunction en(t) {\n    return t.collectionGroup || (t.path.length % 2 == 1 ? t.path.lastSegment() : t.path.get(t.path.length - 2));\n}\n\n/**\n * Returns a new comparator function that can be used to compare two documents\n * based on the Query's ordering constraint.\n */ function nn(t) {\n    return (e, n) => {\n        let s = !1;\n        for (const i of ze(t)) {\n            const t = sn(i, e, n);\n            if (0 !== t) return t;\n            s = s || i.field.isKeyField();\n        }\n        return 0;\n    };\n}\n\nfunction sn(t, e, n) {\n    const s = t.field.isKeyField() ? xt.comparator(e.key, n.key) : function(t, e, n) {\n        const s = e.data.field(t), i = n.data.field(t);\n        return null !== s && null !== i ? $t(s, i) : L();\n    }\n    /**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * The initial mutation batch id for each index. Gets updated during index\n * backfill.\n */ (t.field, e, n);\n    switch (t.dir) {\n      case \"asc\" /* ASCENDING */ :\n        return s;\n\n      case \"desc\" /* DESCENDING */ :\n        return -1 * s;\n\n      default:\n        return L();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */ function rn(t, e) {\n    if (t.N) {\n        if (isNaN(e)) return {\n            doubleValue: \"NaN\"\n        };\n        if (e === 1 / 0) return {\n            doubleValue: \"Infinity\"\n        };\n        if (e === -1 / 0) return {\n            doubleValue: \"-Infinity\"\n        };\n    }\n    return {\n        doubleValue: Dt(e) ? \"-0\" : e\n    };\n}\n\n/**\n * Returns an IntegerValue for `value`.\n */ function on(t) {\n    return {\n        integerValue: \"\" + t\n    };\n}\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */ function un(t, e) {\n    return Ct(e) ? on(e) : rn(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class an {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/**\n * Computes the local transform result against the provided `previousValue`,\n * optionally using the provided localWriteTime.\n */ function cn(t, e, n) {\n    return t instanceof fn ? function(t, e) {\n        const n = {\n            fields: {\n                __type__: {\n                    stringValue: \"server_timestamp\"\n                },\n                __local_write_time__: {\n                    timestampValue: {\n                        seconds: t.seconds,\n                        nanos: t.nanoseconds\n                    }\n                }\n            }\n        };\n        return e && (n.fields.__previous_value__ = e), {\n            mapValue: n\n        };\n    }(n, e) : t instanceof dn ? _n(t, e) : t instanceof wn ? mn(t, e) : function(t, e) {\n        // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n        // precision and resolves overflows by reducing precision, we do not\n        // manually cap overflows at 2^63.\n        const n = ln(t, e), s = yn(n) + yn(t.k);\n        return Kt(n) && Kt(t.k) ? on(s) : rn(t.M, s);\n    }(t, e);\n}\n\n/**\n * Computes a final transform result after the transform has been acknowledged\n * by the server, potentially using the server-provided transformResult.\n */ function hn(t, e, n) {\n    // The server just sends null as the transform result for array operations,\n    // so we have to calculate a result the same as we do for local\n    // applications.\n    return t instanceof dn ? _n(t, e) : t instanceof wn ? mn(t, e) : n;\n}\n\n/**\n * If this transform operation is not idempotent, returns the base value to\n * persist for this transform. If a base value is returned, the transform\n * operation is always applied to this base value, even if document has\n * already been updated.\n *\n * Base values provide consistent behavior for non-idempotent transforms and\n * allow us to return the same latency-compensated value even if the backend\n * has already applied the transform operation. The base value is null for\n * idempotent transforms, as they can be re-played even if the backend has\n * already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent transforms.\n */ function ln(t, e) {\n    return t instanceof gn ? Kt(n = e) || function(t) {\n        return !!t && \"doubleValue\" in t;\n    }\n    /** Returns true if `value` is either an IntegerValue or a DoubleValue. */ (n) ? e : {\n        integerValue: 0\n    } : null;\n    var n;\n}\n\n/** Transforms a value into a server-generated timestamp. */\nclass fn extends an {}\n\n/** Transforms an array value via a union operation. */ class dn extends an {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\nfunction _n(t, e) {\n    const n = pn(e);\n    for (const e of t.elements) n.some((t => Ot(t, e))) || n.push(e);\n    return {\n        arrayValue: {\n            values: n\n        }\n    };\n}\n\n/** Transforms an array value via a remove operation. */ class wn extends an {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\nfunction mn(t, e) {\n    let n = pn(e);\n    for (const e of t.elements) n = n.filter((t => !Ot(t, e)));\n    return {\n        arrayValue: {\n            values: n\n        }\n    };\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class gn extends an {\n    constructor(t, e) {\n        super(), this.M = t, this.k = e;\n    }\n}\n\nfunction yn(t) {\n    return Et(t.integerValue || t.doubleValue);\n}\n\nfunction pn(t) {\n    return Gt(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class In {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\nfunction Tn(t, e) {\n    return t.field.isEqual(e.field) && function(t, e) {\n        return t instanceof dn && e instanceof dn || t instanceof wn && e instanceof wn ? ot(t.elements, e.elements, Ot) : t instanceof gn && e instanceof gn ? Ot(t.k, e.k) : t instanceof fn && e instanceof fn;\n    }(t.transform, e.transform);\n}\n\n/** The result of successfully applying a mutation to the backend. */\nclass En {\n    constructor(\n    /**\n     * The version at which the mutation was committed:\n     *\n     * - For most operations, this is the updateTime in the WriteResult.\n     * - For deletes, the commitTime of the WriteResponse (because deletes are\n     *   not stored and have no updateTime).\n     *\n     * Note that these versions can be different: No-op writes will not change\n     * the updateTime even though the commitTime advances.\n     */\n    t, \n    /**\n     * The resulting fields returned from the backend after a mutation\n     * containing field transforms has been committed. Contains one FieldValue\n     * for each FieldTransform that was in the mutation.\n     *\n     * Will be empty if the mutation did not contain any field transforms.\n     */\n    e) {\n        this.version = t, this.transformResults = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class An {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new An;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new An(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new An(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/** Returns true if the preconditions is valid for the given document. */ function Rn(t, e) {\n    return void 0 !== t.updateTime ? e.isFoundDocument() && e.version.isEqual(t.updateTime) : void 0 === t.exists || t.exists === e.isFoundDocument();\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class bn {}\n\n/**\n * Applies this mutation to the given document for the purposes of computing a\n * new remote document. If the input document doesn't match the expected state\n * (e.g. it is invalid or outdated), the document type may transition to\n * unknown.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param mutationResult - The result of applying the mutation from the backend.\n */ function Pn(t, e, n) {\n    t instanceof Cn ? function(t, e, n) {\n        // Unlike setMutationApplyToLocalView, if we're applying a mutation to a\n        // remote document the server has accepted the mutation so the precondition\n        // must have held.\n        const s = t.value.clone(), i = kn(t.fieldTransforms, e, n.transformResults);\n        s.setAll(i), e.convertToFoundDocument(n.version, s).setHasCommittedMutations();\n    }(t, e, n) : t instanceof xn ? function(t, e, n) {\n        if (!Rn(t.precondition, e)) \n        // Since the mutation was not rejected, we know that the precondition\n        // matched on the backend. We therefore must not have the expected version\n        // of the document in our cache and convert to an UnknownDocument with a\n        // known updateTime.\n        return void e.convertToUnknownDocument(n.version);\n        const s = kn(t.fieldTransforms, e, n.transformResults), i = e.data;\n        i.setAll(Nn(t)), i.setAll(s), e.convertToFoundDocument(n.version, i).setHasCommittedMutations();\n    }(t, e, n) : function(t, e, n) {\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\n        // document the server has accepted the mutation so the precondition must\n        // have held.\n        e.convertToNoDocument(n.version).setHasCommittedMutations();\n    }(0, e, n);\n}\n\n/**\n * Applies this mutation to the given document for the purposes of computing\n * the new local view of a document. If the input document doesn't match the\n * expected state, the document is not modified.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param localWriteTime - A timestamp indicating the local write time of the\n *     batch this mutation is a part of.\n */ function Vn(t, e, n) {\n    t instanceof Cn ? function(t, e, n) {\n        if (!Rn(t.precondition, e)) \n        // The mutation failed to apply (e.g. a document ID created with add()\n        // caused a name collision).\n        return;\n        const s = t.value.clone(), i = Mn(t.fieldTransforms, n, e);\n        s.setAll(i), e.convertToFoundDocument(Dn(e), s).setHasLocalMutations();\n    }\n    /**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ (t, e, n) : t instanceof xn ? function(t, e, n) {\n        if (!Rn(t.precondition, e)) return;\n        const s = Mn(t.fieldTransforms, n, e), i = e.data;\n        i.setAll(Nn(t)), i.setAll(s), e.convertToFoundDocument(Dn(e), i).setHasLocalMutations();\n    }\n    /**\n * Returns a FieldPath/Value map with the content of the PatchMutation.\n */ (t, e, n) : function(t, e) {\n        Rn(t.precondition, e) && \n        // We don't call `setHasLocalMutations()` since we want to be backwards\n        // compatible with the existing SDK behavior.\n        e.convertToNoDocument(ct.min());\n    }\n    /**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ (t, e);\n}\n\n/**\n * If this mutation is not idempotent, returns the base value to persist with\n * this mutation. If a base value is returned, the mutation is always applied\n * to this base value, even if document has already been updated.\n *\n * The base value is a sparse object that consists of only the document\n * fields for which this mutation contains a non-idempotent transformation\n * (e.g. a numeric increment). The provided value guarantees consistent\n * behavior for non-idempotent transforms and allow us to return the same\n * latency-compensated value even if the backend has already applied the\n * mutation. The base value is null for idempotent mutations, as they can be\n * re-played even if the backend has already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent mutations.\n */ function vn(t, e) {\n    let n = null;\n    for (const s of t.fieldTransforms) {\n        const t = e.data.field(s.field), i = ln(s.transform, t || null);\n        null != i && (null == n && (n = te.empty()), n.set(s.field, i));\n    }\n    return n || null;\n}\n\nfunction Sn(t, e) {\n    return t.type === e.type && (!!t.key.isEqual(e.key) && (!!t.precondition.isEqual(e.precondition) && (!!function(t, e) {\n        return void 0 === t && void 0 === e || !(!t || !e) && ot(t, e, ((t, e) => Tn(t, e)));\n    }(t.fieldTransforms, e.fieldTransforms) && (0 /* Set */ === t.type ? t.value.isEqual(e.value) : 1 /* Patch */ !== t.type || t.data.isEqual(e.data) && t.fieldMask.isEqual(e.fieldMask)))));\n}\n\n/**\n * Returns the version from the given document for use as the result of a\n * mutation. Mutations are defined to return the version of the base document\n * only if it is an existing document. Deleted and unknown documents have a\n * post-mutation version of SnapshotVersion.min().\n */ function Dn(t) {\n    return t.isFoundDocument() ? t.version : ct.min();\n}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Cn extends bn {\n    constructor(t, e, n, s = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = s, \n        this.type = 0 /* Set */;\n    }\n}\n\nclass xn extends bn {\n    constructor(t, e, n, s, i = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = s, \n        this.fieldTransforms = i, this.type = 1 /* Patch */;\n    }\n}\n\nfunction Nn(t) {\n    const e = new Map;\n    return t.fieldMask.fields.forEach((n => {\n        if (!n.isEmpty()) {\n            const s = t.data.field(n);\n            e.set(n, s);\n        }\n    })), e;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use after a mutation\n * containing transforms has been acknowledged by the server.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param mutableDocument - The current state of the document after applying all\n * previous mutations.\n * @param serverTransformResults - The transform results received by the server.\n * @returns The transform results list.\n */ function kn(t, e, n) {\n    const s = new Map;\n    U(t.length === n.length);\n    for (let i = 0; i < n.length; i++) {\n        const r = t[i], o = r.transform, u = e.data.field(r.field);\n        s.set(r.field, hn(o, u, n[i]));\n    }\n    return s;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use when applying a\n * transform locally.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param localWriteTime - The local time of the mutation (used to\n *     generate ServerTimestampValues).\n * @param mutableDocument - The current state of the document after applying all\n *     previous mutations.\n * @returns The transform results list.\n */ function Mn(t, e, n) {\n    const s = new Map;\n    for (const i of t) {\n        const t = i.transform, r = n.data.field(i.field);\n        s.set(i.field, cn(t, r, e));\n    }\n    return s;\n}\n\n/** A mutation that deletes the document at the given key. */ class On extends bn {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n}\n\nclass Fn extends bn {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class $n {\n    // TODO(b/33078163): just use simplest form of existence filter for now\n    constructor(t) {\n        this.count = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */ var Bn, Ln;\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\nfunction Un(t) {\n    switch (t) {\n      default:\n        return L();\n\n      case G.CANCELLED:\n      case G.UNKNOWN:\n      case G.DEADLINE_EXCEEDED:\n      case G.RESOURCE_EXHAUSTED:\n      case G.INTERNAL:\n      case G.UNAVAILABLE:\n // Unauthenticated means something went wrong with our token and we need\n        // to retry with new credentials which will happen automatically.\n              case G.UNAUTHENTICATED:\n        return !1;\n\n      case G.INVALID_ARGUMENT:\n      case G.NOT_FOUND:\n      case G.ALREADY_EXISTS:\n      case G.PERMISSION_DENIED:\n      case G.FAILED_PRECONDITION:\n // Aborted might be retried in some scenarios, but that is dependant on\n        // the context and should handled individually by the calling code.\n        // See https://cloud.google.com/apis/design/errors.\n              case G.ABORTED:\n      case G.OUT_OF_RANGE:\n      case G.UNIMPLEMENTED:\n      case G.DATA_LOSS:\n        return !0;\n    }\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nfunction qn(t) {\n    if (void 0 === t) \n    // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    return F(\"GRPC error has no .code\"), G.UNKNOWN;\n    switch (t) {\n      case Bn.OK:\n        return G.OK;\n\n      case Bn.CANCELLED:\n        return G.CANCELLED;\n\n      case Bn.UNKNOWN:\n        return G.UNKNOWN;\n\n      case Bn.DEADLINE_EXCEEDED:\n        return G.DEADLINE_EXCEEDED;\n\n      case Bn.RESOURCE_EXHAUSTED:\n        return G.RESOURCE_EXHAUSTED;\n\n      case Bn.INTERNAL:\n        return G.INTERNAL;\n\n      case Bn.UNAVAILABLE:\n        return G.UNAVAILABLE;\n\n      case Bn.UNAUTHENTICATED:\n        return G.UNAUTHENTICATED;\n\n      case Bn.INVALID_ARGUMENT:\n        return G.INVALID_ARGUMENT;\n\n      case Bn.NOT_FOUND:\n        return G.NOT_FOUND;\n\n      case Bn.ALREADY_EXISTS:\n        return G.ALREADY_EXISTS;\n\n      case Bn.PERMISSION_DENIED:\n        return G.PERMISSION_DENIED;\n\n      case Bn.FAILED_PRECONDITION:\n        return G.FAILED_PRECONDITION;\n\n      case Bn.ABORTED:\n        return G.ABORTED;\n\n      case Bn.OUT_OF_RANGE:\n        return G.OUT_OF_RANGE;\n\n      case Bn.UNIMPLEMENTED:\n        return G.UNIMPLEMENTED;\n\n      case Bn.DATA_LOSS:\n        return G.DATA_LOSS;\n\n      default:\n        return L();\n    }\n}\n\n/**\n * Converts an HTTP response's error status to the equivalent error code.\n *\n * @param status - An HTTP error response status (\"FAILED_PRECONDITION\",\n * \"UNKNOWN\", etc.)\n * @returns The equivalent Code. Non-matching responses are mapped to\n *     Code.UNKNOWN.\n */ (Ln = Bn || (Bn = {}))[Ln.OK = 0] = \"OK\", Ln[Ln.CANCELLED = 1] = \"CANCELLED\", \nLn[Ln.UNKNOWN = 2] = \"UNKNOWN\", Ln[Ln.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nLn[Ln.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", Ln[Ln.NOT_FOUND = 5] = \"NOT_FOUND\", \nLn[Ln.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", Ln[Ln.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nLn[Ln.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", Ln[Ln.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nLn[Ln.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", Ln[Ln.ABORTED = 10] = \"ABORTED\", \nLn[Ln.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", Ln[Ln.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nLn[Ln.INTERNAL = 13] = \"INTERNAL\", Ln[Ln.UNAVAILABLE = 14] = \"UNAVAILABLE\", Ln[Ln.DATA_LOSS = 15] = \"DATA_LOSS\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A map implementation that uses objects as keys. Objects must have an\n * associated equals function and must be immutable. Entries in the map are\n * stored together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */\nclass Kn {\n    constructor(t, e) {\n        this.mapKeyFn = t, this.equalsFn = e, \n        /**\n         * The inner map for a key/value pair. Due to the possibility of collisions we\n         * keep a list of entries that we do a linear search through to find an actual\n         * match. Note that collisions should be rare, so we still expect near\n         * constant time lookups in practice.\n         */\n        this.inner = {}, \n        /** The number of entries stored in the map */\n        this.innerSize = 0;\n    }\n    /** Get a value for this key, or undefined if it does not exist. */    get(t) {\n        const e = this.mapKeyFn(t), n = this.inner[e];\n        if (void 0 !== n) for (const [e, s] of n) if (this.equalsFn(e, t)) return s;\n    }\n    has(t) {\n        return void 0 !== this.get(t);\n    }\n    /** Put this key and value in the map. */    set(t, e) {\n        const n = this.mapKeyFn(t), s = this.inner[n];\n        if (void 0 === s) return this.inner[n] = [ [ t, e ] ], void this.innerSize++;\n        for (let n = 0; n < s.length; n++) if (this.equalsFn(s[n][0], t)) \n        // This is updating an existing entry and does not increase `innerSize`.\n        return void (s[n] = [ t, e ]);\n        s.push([ t, e ]), this.innerSize++;\n    }\n    /**\n     * Remove this key from the map. Returns a boolean if anything was deleted.\n     */    delete(t) {\n        const e = this.mapKeyFn(t), n = this.inner[e];\n        if (void 0 === n) return !1;\n        for (let s = 0; s < n.length; s++) if (this.equalsFn(n[s][0], t)) return 1 === n.length ? delete this.inner[e] : n.splice(s, 1), \n        this.innerSize--, !0;\n        return !1;\n    }\n    forEach(t) {\n        lt(this.inner, ((e, n) => {\n            for (const [e, s] of n) t(e, s);\n        }));\n    }\n    isEmpty() {\n        return ft(this.inner);\n    }\n    size() {\n        return this.innerSize;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Gn = new fe(xt.comparator);\n\nfunction Qn() {\n    return Gn;\n}\n\nconst jn = new fe(xt.comparator);\n\nfunction Wn(...t) {\n    let e = jn;\n    for (const n of t) e = e.insert(n.key, n);\n    return e;\n}\n\nfunction zn() {\n    return new Kn((t => t.toString()), ((t, e) => t.isEqual(e)));\n}\n\nconst Hn = new fe(xt.comparator);\n\nconst Jn = new we(xt.comparator);\n\nfunction Yn(...t) {\n    let e = Jn;\n    for (const n of t) e = e.add(n);\n    return e;\n}\n\nconst Xn = new we(rt);\n\nfunction Zn() {\n    return Xn;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */ class ts {\n    constructor(\n    /**\n     * The snapshot version this event brings us up to, or MIN if not set.\n     */\n    t, \n    /**\n     * A map from target to changes to the target. See TargetChange.\n     */\n    e, \n    /**\n     * A set of targets that is known to be inconsistent. Listens for these\n     * targets should be re-established without resume tokens.\n     */\n    n, \n    /**\n     * A set of which documents have changed or been deleted, along with the\n     * doc's new values (if not deleted).\n     */\n    s, \n    /**\n     * A set of which document updates are due only to limbo resolution targets.\n     */\n    i) {\n        this.snapshotVersion = t, this.targetChanges = e, this.targetMismatches = n, this.documentUpdates = s, \n        this.resolvedLimboDocuments = i;\n    }\n    /**\n     * HACK: Views require RemoteEvents in order to determine whether the view is\n     * CURRENT, but secondary tabs don't receive remote events. So this method is\n     * used to create a synthesized RemoteEvent that can be used to apply a\n     * CURRENT status change to a View, for queries executed in a different tab.\n     */\n    // PORTING NOTE: Multi-tab only\n    static createSynthesizedRemoteEventForCurrentChange(t, e) {\n        const n = new Map;\n        return n.set(t, es.createSynthesizedTargetChangeForCurrentChange(t, e)), new ts(ct.min(), n, Zn(), Qn(), Yn());\n    }\n}\n\n/**\n * A TargetChange specifies the set of changes for a specific target as part of\n * a RemoteEvent. These changes track which documents are added, modified or\n * removed, as well as the target's resume token and whether the target is\n * marked CURRENT.\n * The actual changes *to* documents are not part of the TargetChange since\n * documents may be part of multiple targets.\n */ class es {\n    constructor(\n    /**\n     * An opaque, server-assigned token that allows watching a query to be resumed\n     * after disconnecting without retransmitting all the data that matches the\n     * query. The resume token essentially identifies a point in time from which\n     * the server should resume sending results.\n     */\n    t, \n    /**\n     * The \"current\" (synced) status of this target. Note that \"current\"\n     * has special meaning in the RPC protocol that implies that a target is\n     * both up-to-date and consistent with the rest of the watch stream.\n     */\n    e, \n    /**\n     * The set of documents that were newly assigned to this target as part of\n     * this remote event.\n     */\n    n, \n    /**\n     * The set of documents that were already assigned to this target but received\n     * an update during this remote event.\n     */\n    s, \n    /**\n     * The set of documents that were removed from this target as part of this\n     * remote event.\n     */\n    i) {\n        this.resumeToken = t, this.current = e, this.addedDocuments = n, this.modifiedDocuments = s, \n        this.removedDocuments = i;\n    }\n    /**\n     * This method is used to create a synthesized TargetChanges that can be used to\n     * apply a CURRENT status change to a View (for queries executed in a different\n     * tab) or for new queries (to raise snapshots with correct CURRENT status).\n     */    static createSynthesizedTargetChangeForCurrentChange(t, e) {\n        return new es(pt.EMPTY_BYTE_STRING, e, Yn(), Yn(), Yn());\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */ class ns {\n    constructor(\n    /** The new document applies to all of these targets. */\n    t, \n    /** The new document is removed from all of these targets. */\n    e, \n    /** The key of the document for this change. */\n    n, \n    /**\n     * The new document or NoDocument if it was deleted. Is null if the\n     * document went out of view without the server sending a new document.\n     */\n    s) {\n        this.O = t, this.removedTargetIds = e, this.key = n, this.F = s;\n    }\n}\n\nclass ss {\n    constructor(t, e) {\n        this.targetId = t, this.$ = e;\n    }\n}\n\nclass is {\n    constructor(\n    /** What kind of change occurred to the watch target. */\n    t, \n    /** The target IDs that were added/removed/set. */\n    e, \n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    n = pt.EMPTY_BYTE_STRING\n    /** An RPC error indicating why the watch failed. */ , s = null) {\n        this.state = t, this.targetIds = e, this.resumeToken = n, this.cause = s;\n    }\n}\n\n/** Tracks the internal state of a Watch target. */ class rs {\n    constructor() {\n        /**\n         * The number of pending responses (adds or removes) that we are waiting on.\n         * We only consider targets active that have no pending responses.\n         */\n        this.B = 0, \n        /**\n         * Keeps track of the document changes since the last raised snapshot.\n         *\n         * These changes are continuously updated as we receive document updates and\n         * always reflect the current set of changes against the last issued snapshot.\n         */\n        this.L = as(), \n        /** See public getters for explanations of these fields. */\n        this.U = pt.EMPTY_BYTE_STRING, this.q = !1, \n        /**\n         * Whether this target state should be included in the next snapshot. We\n         * initialize to true so that newly-added targets are included in the next\n         * RemoteEvent.\n         */\n        this.K = !0;\n    }\n    /**\n     * Whether this target has been marked 'current'.\n     *\n     * 'Current' has special meaning in the RPC protocol: It implies that the\n     * Watch backend has sent us all changes up to the point at which the target\n     * was added and that the target is consistent with the rest of the watch\n     * stream.\n     */    get current() {\n        return this.q;\n    }\n    /** The last resume token sent to us for this target. */    get resumeToken() {\n        return this.U;\n    }\n    /** Whether this target has pending target adds or target removes. */    get G() {\n        return 0 !== this.B;\n    }\n    /** Whether we have modified any state that should trigger a snapshot. */    get j() {\n        return this.K;\n    }\n    /**\n     * Applies the resume token to the TargetChange, but only when it has a new\n     * value. Empty resumeTokens are discarded.\n     */    W(t) {\n        t.approximateByteSize() > 0 && (this.K = !0, this.U = t);\n    }\n    /**\n     * Creates a target change from the current set of changes.\n     *\n     * To reset the document changes after raising this snapshot, call\n     * `clearPendingChanges()`.\n     */    H() {\n        let t = Yn(), e = Yn(), n = Yn();\n        return this.L.forEach(((s, i) => {\n            switch (i) {\n              case 0 /* Added */ :\n                t = t.add(s);\n                break;\n\n              case 2 /* Modified */ :\n                e = e.add(s);\n                break;\n\n              case 1 /* Removed */ :\n                n = n.add(s);\n                break;\n\n              default:\n                L();\n            }\n        })), new es(this.U, this.q, t, e, n);\n    }\n    /**\n     * Resets the document changes and sets `hasPendingChanges` to false.\n     */    J() {\n        this.K = !1, this.L = as();\n    }\n    Y(t, e) {\n        this.K = !0, this.L = this.L.insert(t, e);\n    }\n    X(t) {\n        this.K = !0, this.L = this.L.remove(t);\n    }\n    Z() {\n        this.B += 1;\n    }\n    tt() {\n        this.B -= 1;\n    }\n    et() {\n        this.K = !0, this.q = !0;\n    }\n}\n\n/**\n * A helper class to accumulate watch changes into a RemoteEvent.\n */\nclass os {\n    constructor(t) {\n        this.nt = t, \n        /** The internal state of all tracked targets. */\n        this.st = new Map, \n        /** Keeps track of the documents to update since the last raised snapshot. */\n        this.it = Qn(), \n        /** A mapping of document keys to their set of target IDs. */\n        this.rt = us(), \n        /**\n         * A list of targets with existence filter mismatches. These targets are\n         * known to be inconsistent and their listens needs to be re-established by\n         * RemoteStore.\n         */\n        this.ot = new we(rt);\n    }\n    /**\n     * Processes and adds the DocumentWatchChange to the current set of changes.\n     */    ut(t) {\n        for (const e of t.O) t.F && t.F.isFoundDocument() ? this.at(e, t.F) : this.ct(e, t.key, t.F);\n        for (const e of t.removedTargetIds) this.ct(e, t.key, t.F);\n    }\n    /** Processes and adds the WatchTargetChange to the current set of changes. */    ht(t) {\n        this.forEachTarget(t, (e => {\n            const n = this.lt(e);\n            switch (t.state) {\n              case 0 /* NoChange */ :\n                this.ft(e) && n.W(t.resumeToken);\n                break;\n\n              case 1 /* Added */ :\n                // We need to decrement the number of pending acks needed from watch\n                // for this targetId.\n                n.tt(), n.G || \n                // We have a freshly added target, so we need to reset any state\n                // that we had previously. This can happen e.g. when remove and add\n                // back a target for existence filter mismatches.\n                n.J(), n.W(t.resumeToken);\n                break;\n\n              case 2 /* Removed */ :\n                // We need to keep track of removed targets to we can post-filter and\n                // remove any target changes.\n                // We need to decrement the number of pending acks needed from watch\n                // for this targetId.\n                n.tt(), n.G || this.removeTarget(e);\n                break;\n\n              case 3 /* Current */ :\n                this.ft(e) && (n.et(), n.W(t.resumeToken));\n                break;\n\n              case 4 /* Reset */ :\n                this.ft(e) && (\n                // Reset the target and synthesizes removes for all existing\n                // documents. The backend will re-add any documents that still\n                // match the target before it sends the next global snapshot.\n                this.dt(e), n.W(t.resumeToken));\n                break;\n\n              default:\n                L();\n            }\n        }));\n    }\n    /**\n     * Iterates over all targetIds that the watch change applies to: either the\n     * targetIds explicitly listed in the change or the targetIds of all currently\n     * active targets.\n     */    forEachTarget(t, e) {\n        t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.st.forEach(((t, n) => {\n            this.ft(n) && e(n);\n        }));\n    }\n    /**\n     * Handles existence filters and synthesizes deletes for filter mismatches.\n     * Targets that are invalidated by filter mismatches are added to\n     * `pendingTargetResets`.\n     */    _t(t) {\n        const e = t.targetId, n = t.$.count, s = this.wt(e);\n        if (s) {\n            const t = s.target;\n            if (Ae(t)) if (0 === n) {\n                // The existence filter told us the document does not exist. We deduce\n                // that this document does not exist and apply a deleted document to\n                // our updates. Without applying this deleted document there might be\n                // another query that will raise this document as part of a snapshot\n                // until it is resolved, essentially exposing inconsistency between\n                // queries.\n                const n = new xt(t.path);\n                this.ct(e, n, ne.newNoDocument(n, ct.min()));\n            } else U(1 === n); else {\n                this.gt(e) !== n && (\n                // Existence filter mismatch: We reset the mapping and raise a new\n                // snapshot with `isFromCache:true`.\n                this.dt(e), this.ot = this.ot.add(e));\n            }\n        }\n    }\n    /**\n     * Converts the currently accumulated state into a remote event at the\n     * provided snapshot version. Resets the accumulated changes before returning.\n     */    yt(t) {\n        const e = new Map;\n        this.st.forEach(((n, s) => {\n            const i = this.wt(s);\n            if (i) {\n                if (n.current && Ae(i.target)) {\n                    // Document queries for document that don't exist can produce an empty\n                    // result set. To update our local cache, we synthesize a document\n                    // delete if we have not previously received the document. This\n                    // resolves the limbo state of the document, removing it from\n                    // limboDocumentRefs.\n                    // TODO(dimond): Ideally we would have an explicit lookup target\n                    // instead resulting in an explicit delete message and we could\n                    // remove this special logic.\n                    const e = new xt(i.target.path);\n                    null !== this.it.get(e) || this.It(s, e) || this.ct(s, e, ne.newNoDocument(e, t));\n                }\n                n.j && (e.set(s, n.H()), n.J());\n            }\n        }));\n        let n = Yn();\n        // We extract the set of limbo-only document updates as the GC logic\n        // special-cases documents that do not appear in the target cache.\n        \n        // TODO(gsoltis): Expand on this comment once GC is available in the JS\n        // client.\n                this.rt.forEach(((t, e) => {\n            let s = !0;\n            e.forEachWhile((t => {\n                const e = this.wt(t);\n                return !e || 2 /* LimboResolution */ === e.purpose || (s = !1, !1);\n            })), s && (n = n.add(t));\n        })), this.it.forEach(((e, n) => n.setReadTime(t)));\n        const s = new ts(t, e, this.ot, this.it, n);\n        return this.it = Qn(), this.rt = us(), this.ot = new we(rt), s;\n    }\n    /**\n     * Adds the provided document to the internal list of document updates and\n     * its document key to the given target's mapping.\n     */\n    // Visible for testing.\n    at(t, e) {\n        if (!this.ft(t)) return;\n        const n = this.It(t, e.key) ? 2 /* Modified */ : 0 /* Added */;\n        this.lt(t).Y(e.key, n), this.it = this.it.insert(e.key, e), this.rt = this.rt.insert(e.key, this.Tt(e.key).add(t));\n    }\n    /**\n     * Removes the provided document from the target mapping. If the\n     * document no longer matches the target, but the document's state is still\n     * known (e.g. we know that the document was deleted or we received the change\n     * that caused the filter mismatch), the new document can be provided\n     * to update the remote document cache.\n     */\n    // Visible for testing.\n    ct(t, e, n) {\n        if (!this.ft(t)) return;\n        const s = this.lt(t);\n        this.It(t, e) ? s.Y(e, 1 /* Removed */) : \n        // The document may have entered and left the target before we raised a\n        // snapshot, so we can just ignore the change.\n        s.X(e), this.rt = this.rt.insert(e, this.Tt(e).delete(t)), n && (this.it = this.it.insert(e, n));\n    }\n    removeTarget(t) {\n        this.st.delete(t);\n    }\n    /**\n     * Returns the current count of documents in the target. This includes both\n     * the number of documents that the LocalStore considers to be part of the\n     * target as well as any accumulated changes.\n     */    gt(t) {\n        const e = this.lt(t).H();\n        return this.nt.getRemoteKeysForTarget(t).size + e.addedDocuments.size - e.removedDocuments.size;\n    }\n    /**\n     * Increment the number of acks needed from watch before we can consider the\n     * server to be 'in-sync' with the client's active targets.\n     */    Z(t) {\n        this.lt(t).Z();\n    }\n    lt(t) {\n        let e = this.st.get(t);\n        return e || (e = new rs, this.st.set(t, e)), e;\n    }\n    Tt(t) {\n        let e = this.rt.get(t);\n        return e || (e = new we(rt), this.rt = this.rt.insert(t, e)), e;\n    }\n    /**\n     * Verifies that the user is still interested in this target (by calling\n     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs\n     * from watch.\n     */    ft(t) {\n        const e = null !== this.wt(t);\n        return e || O(\"WatchChangeAggregator\", \"Detected inactive target\", t), e;\n    }\n    /**\n     * Returns the TargetData for an active target (i.e. a target that the user\n     * is still interested in that has no outstanding target change requests).\n     */    wt(t) {\n        const e = this.st.get(t);\n        return e && e.G ? null : this.nt.Et(t);\n    }\n    /**\n     * Resets the state of a Watch target to its initial state (e.g. sets\n     * 'current' to false, clears the resume token and removes its target mapping\n     * from all documents).\n     */    dt(t) {\n        this.st.set(t, new rs);\n        this.nt.getRemoteKeysForTarget(t).forEach((e => {\n            this.ct(t, e, /*updatedDocument=*/ null);\n        }));\n    }\n    /**\n     * Returns whether the LocalStore considers the document to be part of the\n     * specified target.\n     */    It(t, e) {\n        return this.nt.getRemoteKeysForTarget(t).has(e);\n    }\n}\n\nfunction us() {\n    return new fe(xt.comparator);\n}\n\nfunction as() {\n    return new fe(xt.comparator);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const cs = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), hs = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass ls {\n    constructor(t, e) {\n        this.databaseId = t, this.N = e;\n    }\n}\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction fs(t, e) {\n    if (t.N) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction ds(t, e) {\n    return t.N ? e.toBase64() : e.toUint8Array();\n}\n\n/**\n * Returns a ByteString based on the proto string value.\n */ function _s(t, e) {\n    return fs(t, e.toTimestamp());\n}\n\nfunction ws(t) {\n    return U(!!t), ct.fromTimestamp(function(t) {\n        const e = Tt(t);\n        return new at(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction ms(t, e) {\n    return function(t) {\n        return new _t([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction gs(t) {\n    const e = _t.fromString(t);\n    return U(Ks(e)), e;\n}\n\nfunction ys(t, e) {\n    return ms(t.databaseId, e.path);\n}\n\nfunction ps(t, e) {\n    const n = gs(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new Q(G.INVALID_ARGUMENT, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new Q(G.INVALID_ARGUMENT, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new xt(As(n));\n}\n\nfunction Is(t, e) {\n    return ms(t.databaseId, e);\n}\n\nfunction Ts(t) {\n    const e = gs(t);\n    // In v1beta1 queries for collections at the root did not have a trailing\n    // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n    // ability to read the v1beta1 form for compatibility with queries persisted\n    // in the local target cache.\n        return 4 === e.length ? _t.emptyPath() : As(e);\n}\n\nfunction Es(t) {\n    return new _t([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction As(t) {\n    return U(t.length > 4 && \"documents\" === t.get(4)), t.popFirst(5);\n}\n\n/** Creates a Document proto from key and fields (but no create/update time) */ function Rs(t, e, n) {\n    return {\n        name: ys(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction bs(t, e, n) {\n    const s = ps(t, e.name), i = ws(e.updateTime), r = new te({\n        mapValue: {\n            fields: e.fields\n        }\n    }), o = ne.newFoundDocument(s, i, r);\n    return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n}\n\nfunction Ps(t, e) {\n    return \"found\" in e ? function(t, e) {\n        U(!!e.found), e.found.name, e.found.updateTime;\n        const n = ps(t, e.found.name), s = ws(e.found.updateTime), i = new te({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return ne.newFoundDocument(n, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        U(!!e.missing), U(!!e.readTime);\n        const n = ps(t, e.missing), s = ws(e.readTime);\n        return ne.newNoDocument(n, s);\n    }(t, e) : L();\n}\n\nfunction Vs(t, e) {\n    let n;\n    if (\"targetChange\" in e) {\n        e.targetChange;\n        // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n        // if unset\n        const s = function(t) {\n            return \"NO_CHANGE\" === t ? 0 /* NoChange */ : \"ADD\" === t ? 1 /* Added */ : \"REMOVE\" === t ? 2 /* Removed */ : \"CURRENT\" === t ? 3 /* Current */ : \"RESET\" === t ? 4 /* Reset */ : L();\n        }(e.targetChange.targetChangeType || \"NO_CHANGE\"), i = e.targetChange.targetIds || [], r = function(t, e) {\n            return t.N ? (U(void 0 === e || \"string\" == typeof e), pt.fromBase64String(e || \"\")) : (U(void 0 === e || e instanceof Uint8Array), \n            pt.fromUint8Array(e || new Uint8Array));\n        }(t, e.targetChange.resumeToken), o = e.targetChange.cause, u = o && function(t) {\n            const e = void 0 === t.code ? G.UNKNOWN : qn(t.code);\n            return new Q(e, t.message || \"\");\n        }\n        /**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */ (o);\n        n = new is(s, i, r, u || null);\n    } else if (\"documentChange\" in e) {\n        e.documentChange;\n        const s = e.documentChange;\n        s.document, s.document.name, s.document.updateTime;\n        const i = ps(t, s.document.name), r = ws(s.document.updateTime), o = new te({\n            mapValue: {\n                fields: s.document.fields\n            }\n        }), u = ne.newFoundDocument(i, r, o), a = s.targetIds || [], c = s.removedTargetIds || [];\n        n = new ns(a, c, u.key, u);\n    } else if (\"documentDelete\" in e) {\n        e.documentDelete;\n        const s = e.documentDelete;\n        s.document;\n        const i = ps(t, s.document), r = s.readTime ? ws(s.readTime) : ct.min(), o = ne.newNoDocument(i, r), u = s.removedTargetIds || [];\n        n = new ns([], u, o.key, o);\n    } else if (\"documentRemove\" in e) {\n        e.documentRemove;\n        const s = e.documentRemove;\n        s.document;\n        const i = ps(t, s.document), r = s.removedTargetIds || [];\n        n = new ns([], r, i, null);\n    } else {\n        if (!(\"filter\" in e)) return L();\n        {\n            e.filter;\n            const t = e.filter;\n            t.targetId;\n            const s = t.count || 0, i = new $n(s), r = t.targetId;\n            n = new ss(r, i);\n        }\n    }\n    return n;\n}\n\nfunction vs(t, e) {\n    let n;\n    if (e instanceof Cn) n = {\n        update: Rs(t, e.key, e.value)\n    }; else if (e instanceof On) n = {\n        delete: ys(t, e.key)\n    }; else if (e instanceof xn) n = {\n        update: Rs(t, e.key, e.data),\n        updateMask: qs(e.fieldMask)\n    }; else {\n        if (!(e instanceof Fn)) return L();\n        n = {\n            verify: ys(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof fn) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof dn) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof wn) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof gn) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.k\n        };\n        throw L();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: _s(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : L();\n    }(t, e.precondition)), n;\n}\n\nfunction Ss(t, e) {\n    const n = e.currentDocument ? function(t) {\n        return void 0 !== t.updateTime ? An.updateTime(ws(t.updateTime)) : void 0 !== t.exists ? An.exists(t.exists) : An.none();\n    }(e.currentDocument) : An.none(), s = e.updateTransforms ? e.updateTransforms.map((e => function(t, e) {\n        let n = null;\n        if (\"setToServerValue\" in e) U(\"REQUEST_TIME\" === e.setToServerValue), n = new fn; else if (\"appendMissingElements\" in e) {\n            const t = e.appendMissingElements.values || [];\n            n = new dn(t);\n        } else if (\"removeAllFromArray\" in e) {\n            const t = e.removeAllFromArray.values || [];\n            n = new wn(t);\n        } else \"increment\" in e ? n = new gn(t, e.increment) : L();\n        const s = mt.fromServerFormat(e.fieldPath);\n        return new In(s, n);\n    }(t, e))) : [];\n    if (e.update) {\n        e.update.name;\n        const i = ps(t, e.update.name), r = new te({\n            mapValue: {\n                fields: e.update.fields\n            }\n        });\n        if (e.updateMask) {\n            const t = function(t) {\n                const e = t.fieldPaths || [];\n                return new gt(e.map((t => mt.fromServerFormat(t))));\n            }(e.updateMask);\n            return new xn(i, r, t, n, s);\n        }\n        return new Cn(i, r, n, s);\n    }\n    if (e.delete) {\n        const s = ps(t, e.delete);\n        return new On(s, n);\n    }\n    if (e.verify) {\n        const s = ps(t, e.verify);\n        return new Fn(s, n);\n    }\n    return L();\n}\n\nfunction Ds(t, e) {\n    return t && t.length > 0 ? (U(void 0 !== e), t.map((t => function(t, e) {\n        // NOTE: Deletes don't have an updateTime.\n        let n = t.updateTime ? ws(t.updateTime) : ws(e);\n        return n.isEqual(ct.min()) && (\n        // The Firestore Emulator currently returns an update time of 0 for\n        // deletes of non-existing documents (rather than null). This breaks the\n        // test \"get deleted doc while offline with source=cache\" as NoDocuments\n        // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n        // TODO(#2149): Remove this when Emulator is fixed\n        n = ws(e)), new En(n, t.transformResults || []);\n    }(t, e)))) : [];\n}\n\nfunction Cs(t, e) {\n    return {\n        documents: [ Is(t, e.path) ]\n    };\n}\n\nfunction xs(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, s = e.path;\n    null !== e.collectionGroup ? (n.parent = Is(t, s), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Is(t, s.popLast()), n.structuredQuery.from = [ {\n        collectionId: s.lastSegment()\n    } ]);\n    const i = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (jt(t.value)) return {\n                    unaryFilter: {\n                        field: $s(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Qt(t.value)) return {\n                    unaryFilter: {\n                        field: $s(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (jt(t.value)) return {\n                    unaryFilter: {\n                        field: $s(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Qt(t.value)) return {\n                    unaryFilter: {\n                        field: $s(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: $s(t.field),\n                    op: Fs(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    i && (n.structuredQuery.where = i);\n    const r = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: $s(t.field),\n                direction: Os(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    r && (n.structuredQuery.orderBy = r);\n    const o = function(t, e) {\n        return t.N || St(e) ? e : {\n            value: e\n        };\n    }\n    /**\n * Returns a number (or null) from a google.protobuf.Int32Value proto.\n */ (t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }(e.endAt)), n;\n}\n\nfunction Ns(t) {\n    let e = Ts(t.parent);\n    const n = t.structuredQuery, s = n.from ? n.from.length : 0;\n    let i = null;\n    if (s > 0) {\n        U(1 === s);\n        const t = n.from[0];\n        t.allDescendants ? i = t.collectionId : e = e.child(t.collectionId);\n    }\n    let r = [];\n    n.where && (r = Ms(n.where));\n    let o = [];\n    n.orderBy && (o = n.orderBy.map((t => function(t) {\n        return new Fe(Bs(t.field), \n        // visible for testing\n        function(t) {\n            switch (t) {\n              case \"ASCENDING\":\n                return \"asc\" /* ASCENDING */;\n\n              case \"DESCENDING\":\n                return \"desc\" /* DESCENDING */;\n\n              default:\n                return;\n            }\n        }\n        // visible for testing\n        (t.direction));\n    }(t))));\n    let u = null;\n    n.limit && (u = function(t) {\n        let e;\n        return e = \"object\" == typeof t ? t.value : t, St(e) ? null : e;\n    }(n.limit));\n    let a = null;\n    n.startAt && (a = function(t) {\n        const e = !!t.before, n = t.values || [];\n        return new Oe(n, e);\n    }(n.startAt));\n    let c = null;\n    return n.endAt && (c = function(t) {\n        const e = !t.before, n = t.values || [];\n        return new Oe(n, e);\n    }\n    // visible for testing\n    (n.endAt)), qe(e, i, o, r, u, \"F\" /* First */ , a, c);\n}\n\nfunction ks(t, e) {\n    const n = function(t, e) {\n        switch (e) {\n          case 0 /* Listen */ :\n            return null;\n\n          case 1 /* ExistenceFilterMismatch */ :\n            return \"existence-filter-mismatch\";\n\n          case 2 /* LimboResolution */ :\n            return \"limbo-document\";\n\n          default:\n            return L();\n        }\n    }(0, e.purpose);\n    return null == n ? null : {\n        \"goog-listen-tags\": n\n    };\n}\n\nfunction Ms(t) {\n    return t ? void 0 !== t.unaryFilter ? [ Us(t) ] : void 0 !== t.fieldFilter ? [ Ls(t) ] : void 0 !== t.compositeFilter ? t.compositeFilter.filters.map((t => Ms(t))).reduce(((t, e) => t.concat(e))) : L() : [];\n}\n\nfunction Os(t) {\n    return cs[t];\n}\n\nfunction Fs(t) {\n    return hs[t];\n}\n\nfunction $s(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Bs(t) {\n    return mt.fromServerFormat(t.fieldPath);\n}\n\nfunction Ls(t) {\n    return Ve.create(Bs(t.fieldFilter.field), function(t) {\n        switch (t) {\n          case \"EQUAL\":\n            return \"==\" /* EQUAL */;\n\n          case \"NOT_EQUAL\":\n            return \"!=\" /* NOT_EQUAL */;\n\n          case \"GREATER_THAN\":\n            return \">\" /* GREATER_THAN */;\n\n          case \"GREATER_THAN_OR_EQUAL\":\n            return \">=\" /* GREATER_THAN_OR_EQUAL */;\n\n          case \"LESS_THAN\":\n            return \"<\" /* LESS_THAN */;\n\n          case \"LESS_THAN_OR_EQUAL\":\n            return \"<=\" /* LESS_THAN_OR_EQUAL */;\n\n          case \"ARRAY_CONTAINS\":\n            return \"array-contains\" /* ARRAY_CONTAINS */;\n\n          case \"IN\":\n            return \"in\" /* IN */;\n\n          case \"NOT_IN\":\n            return \"not-in\" /* NOT_IN */;\n\n          case \"ARRAY_CONTAINS_ANY\":\n            return \"array-contains-any\" /* ARRAY_CONTAINS_ANY */;\n\n          default:\n            return L();\n        }\n    }(t.fieldFilter.op), t.fieldFilter.value);\n}\n\nfunction Us(t) {\n    switch (t.unaryFilter.op) {\n      case \"IS_NAN\":\n        const e = Bs(t.unaryFilter.field);\n        return Ve.create(e, \"==\" /* EQUAL */ , {\n            doubleValue: NaN\n        });\n\n      case \"IS_NULL\":\n        const n = Bs(t.unaryFilter.field);\n        return Ve.create(n, \"==\" /* EQUAL */ , {\n            nullValue: \"NULL_VALUE\"\n        });\n\n      case \"IS_NOT_NAN\":\n        const s = Bs(t.unaryFilter.field);\n        return Ve.create(s, \"!=\" /* NOT_EQUAL */ , {\n            doubleValue: NaN\n        });\n\n      case \"IS_NOT_NULL\":\n        const i = Bs(t.unaryFilter.field);\n        return Ve.create(i, \"!=\" /* NOT_EQUAL */ , {\n            nullValue: \"NULL_VALUE\"\n        });\n\n      default:\n        return L();\n    }\n}\n\nfunction qs(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction Ks(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Encodes a resource path into a IndexedDb-compatible string form.\n */\nfunction Gs(t) {\n    let e = \"\";\n    for (let n = 0; n < t.length; n++) e.length > 0 && (e = js(e)), e = Qs(t.get(n), e);\n    return js(e);\n}\n\n/** Encodes a single segment of a resource path into the given result */ function Qs(t, e) {\n    let n = e;\n    const s = t.length;\n    for (let e = 0; e < s; e++) {\n        const s = t.charAt(e);\n        switch (s) {\n          case \"\\0\":\n            n += \"\u0001\u0010\";\n            break;\n\n          case \"\u0001\":\n            n += \"\u0001\u0011\";\n            break;\n\n          default:\n            n += s;\n        }\n    }\n    return n;\n}\n\n/** Encodes a path separator into the given result */ function js(t) {\n    return t + \"\u0001\u0001\";\n}\n\n/**\n * Decodes the given IndexedDb-compatible string form of a resource path into\n * a ResourcePath instance. Note that this method is not suitable for use with\n * decoding resource names from the server; those are One Platform format\n * strings.\n */ function Ws(t) {\n    // Event the empty path must encode as a path of at least length 2. A path\n    // with exactly 2 must be the empty path.\n    const e = t.length;\n    if (U(e >= 2), 2 === e) return U(\"\u0001\" === t.charAt(0) && \"\u0001\" === t.charAt(1)), _t.emptyPath();\n    // Escape characters cannot exist past the second-to-last position in the\n    // source value.\n        const n = e - 2, s = [];\n    let i = \"\";\n    for (let r = 0; r < e; ) {\n        // The last two characters of a valid encoded path must be a separator, so\n        // there must be an end to this segment.\n        const e = t.indexOf(\"\u0001\", r);\n        (e < 0 || e > n) && L();\n        switch (t.charAt(e + 1)) {\n          case \"\u0001\":\n            const n = t.substring(r, e);\n            let o;\n            0 === i.length ? \n            // Avoid copying for the common case of a segment that excludes \\0\n            // and \\001\n            o = n : (i += n, o = i, i = \"\"), s.push(o);\n            break;\n\n          case \"\u0010\":\n            i += t.substring(r, e), i += \"\\0\";\n            break;\n\n          case \"\u0011\":\n            // The escape character can be used in the output to encode itself.\n            i += t.substring(r, e + 1);\n            break;\n\n          default:\n            L();\n        }\n        r = e + 2;\n    }\n    return new _t(s);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const zs = [ \"userId\", \"batchId\" ];\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */\n/**\n * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n * index to iterate over all at document mutations for a given path or lower.\n */\nfunction Hs(t, e) {\n    return [ t, Gs(e) ];\n}\n\n/**\n * Creates a full index key of [userId, encodedPath, batchId] for inserting\n * and deleting into the DbDocumentMutations index.\n */ function Js(t, e, n) {\n    return [ t, Gs(e), n ];\n}\n\n/**\n * Because we store all the useful information for this store in the key,\n * there is no useful information to store as the value. The raw (unencoded)\n * path cannot be stored because IndexedDb doesn't store prototype\n * information.\n */ const Ys = {}, Xs = [ \"prefixPath\", \"collectionGroup\", \"readTime\", \"documentId\" ], Zs = [ \"prefixPath\", \"collectionGroup\", \"documentId\" ], ti = [ \"collectionGroup\", \"readTime\", \"prefixPath\", \"documentId\" ], ei = [ \"canonicalId\", \"targetId\" ], ni = [ \"targetId\", \"path\" ], si = [ \"path\", \"targetId\" ], ii = [ \"collectionId\", \"parent\" ], ri = [ \"indexId\", \"uid\" ], oi = [ \"uid\", \"sequenceNumber\" ], ui = [ \"indexId\", \"uid\", \"arrayValue\", \"directionalValue\", \"orderedDocumentKey\", \"documentKey\" ], ai = [ \"indexId\", \"uid\", \"orderedDocumentKey\" ], ci = [ \"userId\", \"collectionPath\", \"documentId\" ], hi = [ \"userId\", \"collectionPath\", \"largestBatchId\" ], li = [ \"userId\", \"collectionGroup\", \"largestBatchId\" ], fi = [ ...[ ...[ ...[ ...[ \"mutationQueues\", \"mutations\", \"documentMutations\", \"remoteDocuments\", \"targets\", \"owner\", \"targetGlobal\", \"targetDocuments\" ], \"clientMetadata\" ], \"remoteDocumentGlobal\" ], \"collectionParents\" ], \"bundles\", \"namedQueries\" ], di = [ ...fi, \"documentOverlays\" ], _i = [ \"mutationQueues\", \"mutations\", \"documentMutations\", \"remoteDocumentsV14\", \"targets\", \"owner\", \"targetGlobal\", \"targetDocuments\", \"clientMetadata\", \"remoteDocumentGlobal\", \"collectionParents\", \"bundles\", \"namedQueries\", \"documentOverlays\" ], wi = [ ..._i, \"indexConfiguration\", \"indexState\", \"indexEntries\" ];\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mi = \"The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.\";\n\n/**\n * A base class representing a persistence transaction, encapsulating both the\n * transaction's sequence numbers as well as a list of onCommitted listeners.\n *\n * When you call Persistence.runTransaction(), it will create a transaction and\n * pass it to your callback. You then pass it to any method that operates\n * on persistence.\n */ class gi {\n    constructor() {\n        this.onCommittedListeners = [];\n    }\n    addOnCommittedListener(t) {\n        this.onCommittedListeners.push(t);\n    }\n    raiseOnCommittedEvent() {\n        this.onCommittedListeners.forEach((t => t()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * PersistencePromise is essentially a re-implementation of Promise except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */ class yi {\n    constructor(t) {\n        // NOTE: next/catchCallback will always point to our own wrapper functions,\n        // not the user's raw next() or catch() callbacks.\n        this.nextCallback = null, this.catchCallback = null, \n        // When the operation resolves, we'll set result or error and mark isDone.\n        this.result = void 0, this.error = void 0, this.isDone = !1, \n        // Set to true when .then() or .catch() are called and prevents additional\n        // chaining.\n        this.callbackAttached = !1, t((t => {\n            this.isDone = !0, this.result = t, this.nextCallback && \n            // value should be defined unless T is Void, but we can't express\n            // that in the type system.\n            this.nextCallback(t);\n        }), (t => {\n            this.isDone = !0, this.error = t, this.catchCallback && this.catchCallback(t);\n        }));\n    }\n    catch(t) {\n        return this.next(void 0, t);\n    }\n    next(t, e) {\n        return this.callbackAttached && L(), this.callbackAttached = !0, this.isDone ? this.error ? this.wrapFailure(e, this.error) : this.wrapSuccess(t, this.result) : new yi(((n, s) => {\n            this.nextCallback = e => {\n                this.wrapSuccess(t, e).next(n, s);\n            }, this.catchCallback = t => {\n                this.wrapFailure(e, t).next(n, s);\n            };\n        }));\n    }\n    toPromise() {\n        return new Promise(((t, e) => {\n            this.next(t, e);\n        }));\n    }\n    wrapUserFunction(t) {\n        try {\n            const e = t();\n            return e instanceof yi ? e : yi.resolve(e);\n        } catch (t) {\n            return yi.reject(t);\n        }\n    }\n    wrapSuccess(t, e) {\n        return t ? this.wrapUserFunction((() => t(e))) : yi.resolve(e);\n    }\n    wrapFailure(t, e) {\n        return t ? this.wrapUserFunction((() => t(e))) : yi.reject(e);\n    }\n    static resolve(t) {\n        return new yi(((e, n) => {\n            e(t);\n        }));\n    }\n    static reject(t) {\n        return new yi(((e, n) => {\n            n(t);\n        }));\n    }\n    static waitFor(\n    // Accept all Promise types in waitFor().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t) {\n        return new yi(((e, n) => {\n            let s = 0, i = 0, r = !1;\n            t.forEach((t => {\n                ++s, t.next((() => {\n                    ++i, r && i === s && e();\n                }), (t => n(t)));\n            })), r = !0, i === s && e();\n        }));\n    }\n    /**\n     * Given an array of predicate functions that asynchronously evaluate to a\n     * boolean, implements a short-circuiting `or` between the results. Predicates\n     * will be evaluated until one of them returns `true`, then stop. The final\n     * result will be whether any of them returned `true`.\n     */    static or(t) {\n        let e = yi.resolve(!1);\n        for (const n of t) e = e.next((t => t ? yi.resolve(t) : n()));\n        return e;\n    }\n    static forEach(t, e) {\n        const n = [];\n        return t.forEach(((t, s) => {\n            n.push(e.call(this, t, s));\n        })), this.waitFor(n);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `window` are guarded by SimpleDb.isAvailable()\n/* eslint-disable no-restricted-globals */\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nclass pi {\n    constructor(t, e) {\n        this.action = t, this.transaction = e, this.aborted = !1, \n        /**\n         * A `Promise` that resolves with the result of the IndexedDb transaction.\n         */\n        this.At = new j, this.transaction.oncomplete = () => {\n            this.At.resolve();\n        }, this.transaction.onabort = () => {\n            e.error ? this.At.reject(new Ei(t, e.error)) : this.At.resolve();\n        }, this.transaction.onerror = e => {\n            const n = Vi(e.target.error);\n            this.At.reject(new Ei(t, n));\n        };\n    }\n    static open(t, e, n, s) {\n        try {\n            return new pi(e, t.transaction(s, n));\n        } catch (t) {\n            throw new Ei(e, t);\n        }\n    }\n    get Rt() {\n        return this.At.promise;\n    }\n    abort(t) {\n        t && this.At.reject(t), this.aborted || (O(\"SimpleDb\", \"Aborting transaction:\", t ? t.message : \"Client-initiated abort\"), \n        this.aborted = !0, this.transaction.abort());\n    }\n    bt() {\n        // If the browser supports V3 IndexedDB, we invoke commit() explicitly to\n        // speed up index DB processing if the event loop remains blocks.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const t = this.transaction;\n        this.aborted || \"function\" != typeof t.commit || t.commit();\n    }\n    /**\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n     * operations performed on the SimpleDbStore happen within the context of this\n     * transaction and it cannot be used anymore once the transaction is\n     * completed.\n     *\n     * Note that we can't actually enforce that the KeyType and ValueType are\n     * correct, but they allow type safety through the rest of the consuming code.\n     */    store(t) {\n        const e = this.transaction.objectStore(t);\n        return new Ri(e);\n    }\n}\n\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */ class Ii {\n    /*\n     * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n     *\n     * Note that `version` must not be a downgrade. IndexedDB does not support\n     * downgrading the schema version. We currently do not support any way to do\n     * versioning outside of IndexedDB's versioning mechanism, as only\n     * version-upgrade transactions are allowed to do things like create\n     * objectstores.\n     */\n    constructor(t, e, n) {\n        this.name = t, this.version = e, this.Pt = n;\n        // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n        // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n        // whatever reason it's much harder to hit after 12.2 so we only proactively\n        // log on 12.2.\n        12.2 === Ii.Vt(getUA()) && F(\"Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\");\n    }\n    /** Deletes the specified database. */    static delete(t) {\n        return O(\"SimpleDb\", \"Removing database:\", t), bi(window.indexedDB.deleteDatabase(t)).toPromise();\n    }\n    /** Returns true if IndexedDB is available in the current environment. */    static vt() {\n        if (!isIndexedDBAvailable()) return !1;\n        if (Ii.St()) return !0;\n        // We extensively use indexed array values and compound keys,\n        // which IE and Edge do not support. However, they still have indexedDB\n        // defined on the window, so we need to check for them here and make sure\n        // to return that persistence is not enabled for those browsers.\n        // For tracking support of this feature, see here:\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n        // Check the UA string to find out the browser.\n                const t = getUA(), e = Ii.Vt(t), n = 0 < e && e < 10, s = Ii.Dt(t), i = 0 < s && s < 4.5;\n        // IE 10\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n        // IE 11\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n        // Edge\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n        // iOS Safari: Disable for users running iOS version < 10.\n                return !(t.indexOf(\"MSIE \") > 0 || t.indexOf(\"Trident/\") > 0 || t.indexOf(\"Edge/\") > 0 || n || i);\n    }\n    /**\n     * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n     * (see https://github.com/axemclion/IndexedDBShim).\n     */    static St() {\n        var t;\n        return \"undefined\" != typeof process && \"YES\" === (null === (t = process.env) || void 0 === t ? void 0 : t.Ct);\n    }\n    /** Helper to get a typed SimpleDbStore from a transaction. */    static xt(t, e) {\n        return t.store(e);\n    }\n    // visible for testing\n    /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n    static Vt(t) {\n        const e = t.match(/i(?:phone|pad|pod) os ([\\d_]+)/i), n = e ? e[1].split(\"_\").slice(0, 2).join(\".\") : \"-1\";\n        return Number(n);\n    }\n    // visible for testing\n    /** Parse User Agent to determine Android version. Returns -1 if not found. */\n    static Dt(t) {\n        const e = t.match(/Android ([\\d.]+)/i), n = e ? e[1].split(\".\").slice(0, 2).join(\".\") : \"-1\";\n        return Number(n);\n    }\n    /**\n     * Opens the specified database, creating or upgrading it if necessary.\n     */    async Nt(t) {\n        return this.db || (O(\"SimpleDb\", \"Opening database:\", this.name), this.db = await new Promise(((e, n) => {\n            // TODO(mikelehen): Investigate browser compatibility.\n            // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n            // suggests IE9 and older WebKit browsers handle upgrade\n            // differently. They expect setVersion, as described here:\n            // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n            const s = indexedDB.open(this.name, this.version);\n            s.onsuccess = t => {\n                const n = t.target.result;\n                e(n);\n            }, s.onblocked = () => {\n                n(new Ei(t, \"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.\"));\n            }, s.onerror = e => {\n                const s = e.target.error;\n                \"VersionError\" === s.name ? n(new Q(G.FAILED_PRECONDITION, \"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.\")) : \"InvalidStateError\" === s.name ? n(new Q(G.FAILED_PRECONDITION, \"Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: \" + s)) : n(new Ei(t, s));\n            }, s.onupgradeneeded = t => {\n                O(\"SimpleDb\", 'Database \"' + this.name + '\" requires upgrade from version:', t.oldVersion);\n                const e = t.target.result;\n                this.Pt.kt(e, s.transaction, t.oldVersion, this.version).next((() => {\n                    O(\"SimpleDb\", \"Database upgrade to version \" + this.version + \" complete\");\n                }));\n            };\n        }))), this.Mt && (this.db.onversionchange = t => this.Mt(t)), this.db;\n    }\n    Ot(t) {\n        this.Mt = t, this.db && (this.db.onversionchange = e => t(e));\n    }\n    async runTransaction(t, e, n, s) {\n        const i = \"readonly\" === e;\n        let r = 0;\n        for (;;) {\n            ++r;\n            try {\n                this.db = await this.Nt(t);\n                const e = pi.open(this.db, t, i ? \"readonly\" : \"readwrite\", n), r = s(e).next((t => (e.bt(), \n                t))).catch((t => (\n                // Abort the transaction if there was an error.\n                e.abort(t), yi.reject(t)))).toPromise();\n                // As noted above, errors are propagated by aborting the transaction. So\n                // we swallow any error here to avoid the browser logging it as unhandled.\n                return r.catch((() => {})), \n                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n                // fire), but still return the original transactionFnResult back to the\n                // caller.\n                await e.Rt, r;\n            } catch (t) {\n                // TODO(schmidt-sebastian): We could probably be smarter about this and\n                // not retry exceptions that are likely unrecoverable (such as quota\n                // exceeded errors).\n                // Note: We cannot use an instanceof check for FirestoreException, since the\n                // exception is wrapped in a generic error by our async/await handling.\n                const e = \"FirebaseError\" !== t.name && r < 3;\n                if (O(\"SimpleDb\", \"Transaction failed with error:\", t.message, \"Retrying:\", e), \n                this.close(), !e) return Promise.reject(t);\n            }\n        }\n    }\n    close() {\n        this.db && this.db.close(), this.db = void 0;\n    }\n}\n\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */ class Ti {\n    constructor(t) {\n        this.Ft = t, this.$t = !1, this.Bt = null;\n    }\n    get isDone() {\n        return this.$t;\n    }\n    get Lt() {\n        return this.Bt;\n    }\n    set cursor(t) {\n        this.Ft = t;\n    }\n    /**\n     * This function can be called to stop iteration at any point.\n     */    done() {\n        this.$t = !0;\n    }\n    /**\n     * This function can be called to skip to that next key, which could be\n     * an index or a primary key.\n     */    Ut(t) {\n        this.Bt = t;\n    }\n    /**\n     * Delete the current cursor value from the object store.\n     *\n     * NOTE: You CANNOT do this with a keysOnly query.\n     */    delete() {\n        return bi(this.Ft.delete());\n    }\n}\n\n/** An error that wraps exceptions that thrown during IndexedDB execution. */ class Ei extends Q {\n    constructor(t, e) {\n        super(G.UNAVAILABLE, `IndexedDB transaction '${t}' failed: ${e}`), this.name = \"IndexedDbTransactionError\";\n    }\n}\n\n/** Verifies whether `e` is an IndexedDbTransactionError. */ function Ai(t) {\n    // Use name equality, as instanceof checks on errors don't work with errors\n    // that wrap other errors.\n    return \"IndexedDbTransactionError\" === t.name;\n}\n\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */ class Ri {\n    constructor(t) {\n        this.store = t;\n    }\n    put(t, e) {\n        let n;\n        return void 0 !== e ? (O(\"SimpleDb\", \"PUT\", this.store.name, t, e), n = this.store.put(e, t)) : (O(\"SimpleDb\", \"PUT\", this.store.name, \"<auto-key>\", t), \n        n = this.store.put(t)), bi(n);\n    }\n    /**\n     * Adds a new value into an Object Store and returns the new key. Similar to\n     * IndexedDb's `add()`, this method will fail on primary key collisions.\n     *\n     * @param value - The object to write.\n     * @returns The key of the value to add.\n     */    add(t) {\n        O(\"SimpleDb\", \"ADD\", this.store.name, t, t);\n        return bi(this.store.add(t));\n    }\n    /**\n     * Gets the object with the specified key from the specified store, or null\n     * if no object exists with the specified key.\n     *\n     * @key The key of the object to get.\n     * @returns The object with the specified key or null if no object exists.\n     */    get(t) {\n        // We're doing an unsafe cast to ValueType.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return bi(this.store.get(t)).next((e => (\n        // Normalize nonexistence to null.\n        void 0 === e && (e = null), O(\"SimpleDb\", \"GET\", this.store.name, t, e), e)));\n    }\n    delete(t) {\n        O(\"SimpleDb\", \"DELETE\", this.store.name, t);\n        return bi(this.store.delete(t));\n    }\n    /**\n     * If we ever need more of the count variants, we can add overloads. For now,\n     * all we need is to count everything in a store.\n     *\n     * Returns the number of rows in the store.\n     */    count() {\n        O(\"SimpleDb\", \"COUNT\", this.store.name);\n        return bi(this.store.count());\n    }\n    qt(t, e) {\n        const n = this.options(t, e);\n        // Use `getAll()` if the browser supports IndexedDB v3, as it is roughly\n        // 20% faster. Unfortunately, getAll() does not support custom indices.\n                if (n.index || \"function\" != typeof this.store.getAll) {\n            const t = this.cursor(n), e = [];\n            return this.Kt(t, ((t, n) => {\n                e.push(n);\n            })).next((() => e));\n        }\n        {\n            const t = this.store.getAll(n.range);\n            return new yi(((e, n) => {\n                t.onerror = t => {\n                    n(t.target.error);\n                }, t.onsuccess = t => {\n                    e(t.target.result);\n                };\n            }));\n        }\n    }\n    /**\n     * Loads the first `count` elements from the provided index range. Loads all\n     * elements if no limit is provided.\n     */    Gt(t, e) {\n        const n = this.store.getAll(t, null === e ? void 0 : e);\n        return new yi(((t, e) => {\n            n.onerror = t => {\n                e(t.target.error);\n            }, n.onsuccess = e => {\n                t(e.target.result);\n            };\n        }));\n    }\n    Qt(t, e) {\n        O(\"SimpleDb\", \"DELETE ALL\", this.store.name);\n        const n = this.options(t, e);\n        n.jt = !1;\n        const s = this.cursor(n);\n        return this.Kt(s, ((t, e, n) => n.delete()));\n    }\n    Wt(t, e) {\n        let n;\n        e ? n = t : (n = {}, e = t);\n        const s = this.cursor(n);\n        return this.Kt(s, e);\n    }\n    /**\n     * Iterates over a store, but waits for the given callback to complete for\n     * each entry before iterating the next entry. This allows the callback to do\n     * asynchronous work to determine if this iteration should continue.\n     *\n     * The provided callback should return `true` to continue iteration, and\n     * `false` otherwise.\n     */    zt(t) {\n        const e = this.cursor({});\n        return new yi(((n, s) => {\n            e.onerror = t => {\n                const e = Vi(t.target.error);\n                s(e);\n            }, e.onsuccess = e => {\n                const s = e.target.result;\n                s ? t(s.primaryKey, s.value).next((t => {\n                    t ? s.continue() : n();\n                })) : n();\n            };\n        }));\n    }\n    Kt(t, e) {\n        const n = [];\n        return new yi(((s, i) => {\n            t.onerror = t => {\n                i(t.target.error);\n            }, t.onsuccess = t => {\n                const i = t.target.result;\n                if (!i) return void s();\n                const r = new Ti(i), o = e(i.primaryKey, i.value, r);\n                if (o instanceof yi) {\n                    const t = o.catch((t => (r.done(), yi.reject(t))));\n                    n.push(t);\n                }\n                r.isDone ? s() : null === r.Lt ? i.continue() : i.continue(r.Lt);\n            };\n        })).next((() => yi.waitFor(n)));\n    }\n    options(t, e) {\n        let n;\n        return void 0 !== t && (\"string\" == typeof t ? n = t : e = t), {\n            index: n,\n            range: e\n        };\n    }\n    cursor(t) {\n        let e = \"next\";\n        if (t.reverse && (e = \"prev\"), t.index) {\n            const n = this.store.index(t.index);\n            return t.jt ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);\n        }\n        return this.store.openCursor(t.range, e);\n    }\n}\n\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */ function bi(t) {\n    return new yi(((e, n) => {\n        t.onsuccess = t => {\n            const n = t.target.result;\n            e(n);\n        }, t.onerror = t => {\n            const e = Vi(t.target.error);\n            n(e);\n        };\n    }));\n}\n\n// Guard so we only report the error once.\nlet Pi = !1;\n\nfunction Vi(t) {\n    const e = Ii.Vt(getUA());\n    if (e >= 12.2 && e < 13) {\n        const e = \"An internal error was encountered in the Indexed Database server\";\n        if (t.message.indexOf(e) >= 0) {\n            // Wrap error in a more descriptive one.\n            const t = new Q(\"internal\", `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${e}'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.`);\n            return Pi || (Pi = !0, \n            // Throw a global exception outside of this promise chain, for the user to\n            // potentially catch.\n            setTimeout((() => {\n                throw t;\n            }), 0)), t;\n        }\n    }\n    return t;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class vi extends gi {\n    constructor(t, e) {\n        super(), this.Ht = t, this.currentSequenceNumber = e;\n    }\n}\n\nfunction Si(t, e) {\n    const n = K(t);\n    return Ii.xt(n.Ht, e);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */ class Di {\n    /**\n     * @param batchId - The unique ID of this mutation batch.\n     * @param localWriteTime - The original write time of this mutation.\n     * @param baseMutations - Mutations that are used to populate the base\n     * values when this mutation is applied locally. This can be used to locally\n     * overwrite values that are persisted in the remote document cache. Base\n     * mutations are never sent to the backend.\n     * @param mutations - The user-provided mutations in this mutation batch.\n     * User-provided mutations are applied both locally and remotely on the\n     * backend.\n     */\n    constructor(t, e, n, s) {\n        this.batchId = t, this.localWriteTime = e, this.baseMutations = n, this.mutations = s;\n    }\n    /**\n     * Applies all the mutations in this MutationBatch to the specified document\n     * to compute the state of the remote document\n     *\n     * @param document - The document to apply mutations to.\n     * @param batchResult - The result of applying the MutationBatch to the\n     * backend.\n     */    applyToRemoteDocument(t, e) {\n        const n = e.mutationResults;\n        for (let e = 0; e < this.mutations.length; e++) {\n            const s = this.mutations[e];\n            if (s.key.isEqual(t.key)) {\n                Pn(s, t, n[e]);\n            }\n        }\n    }\n    /**\n     * Computes the local view of a document given all the mutations in this\n     * batch.\n     *\n     * @param document - The document to apply mutations to.\n     */    applyToLocalView(t) {\n        // First, apply the base state. This allows us to apply non-idempotent\n        // transform against a consistent set of values.\n        for (const e of this.baseMutations) e.key.isEqual(t.key) && Vn(e, t, this.localWriteTime);\n        // Second, apply all user-provided mutations.\n                for (const e of this.mutations) e.key.isEqual(t.key) && Vn(e, t, this.localWriteTime);\n    }\n    /**\n     * Computes the local view for all provided documents given the mutations in\n     * this batch.\n     */    applyToLocalDocumentSet(t) {\n        // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n        // directly (as done in `applyToLocalView()`), we can reduce the complexity\n        // to O(n).\n        this.mutations.forEach((e => {\n            const n = t.get(e.key), s = n;\n            // TODO(mutabledocuments): This method should take a MutableDocumentMap\n            // and we should remove this cast.\n                        this.applyToLocalView(s), n.isValidDocument() || s.convertToNoDocument(ct.min());\n        }));\n    }\n    keys() {\n        return this.mutations.reduce(((t, e) => t.add(e.key)), Yn());\n    }\n    isEqual(t) {\n        return this.batchId === t.batchId && ot(this.mutations, t.mutations, ((t, e) => Sn(t, e))) && ot(this.baseMutations, t.baseMutations, ((t, e) => Sn(t, e)));\n    }\n}\n\n/** The result of applying a mutation batch to the backend. */ class Ci {\n    constructor(t, e, n, \n    /**\n     * A pre-computed mapping from each mutated document to the resulting\n     * version.\n     */\n    s) {\n        this.batch = t, this.commitVersion = e, this.mutationResults = n, this.docVersions = s;\n    }\n    /**\n     * Creates a new MutationBatchResult for the given batch and results. There\n     * must be one result for each mutation in the batch. This static factory\n     * caches a document=&gt;version mapping (docVersions).\n     */    static from(t, e, n) {\n        U(t.mutations.length === n.length);\n        let s = Hn;\n        const i = t.mutations;\n        for (let t = 0; t < i.length; t++) s = s.insert(i[t].key, n[t].version);\n        return new Ci(t, e, n, s);\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Representation of an overlay computed by Firestore.\n *\n * Holds information about a mutation and the largest batch id in Firestore when\n * the mutation was created.\n */ class xi {\n    constructor(t, e) {\n        this.largestBatchId = t, this.mutation = e;\n    }\n    getKey() {\n        return this.mutation.key;\n    }\n    isEqual(t) {\n        return null !== t && this.mutation === t.mutation;\n    }\n    toString() {\n        return `Overlay{\\n      largestBatchId: ${this.largestBatchId},\\n      mutation: ${this.mutation.toString()}\\n    }`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable set of metadata that the local store tracks for each target.\n */ class Ni {\n    constructor(\n    /** The target being listened to. */\n    t, \n    /**\n     * The target ID to which the target corresponds; Assigned by the\n     * LocalStore for user listens and by the SyncEngine for limbo watches.\n     */\n    e, \n    /** The purpose of the target. */\n    n, \n    /**\n     * The sequence number of the last transaction during which this target data\n     * was modified.\n     */\n    s, \n    /** The latest snapshot version seen for this target. */\n    i = ct.min()\n    /**\n     * The maximum snapshot version at which the associated view\n     * contained no limbo documents.\n     */ , r = ct.min()\n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */ , o = pt.EMPTY_BYTE_STRING) {\n        this.target = t, this.targetId = e, this.purpose = n, this.sequenceNumber = s, this.snapshotVersion = i, \n        this.lastLimboFreeSnapshotVersion = r, this.resumeToken = o;\n    }\n    /** Creates a new target data instance with an updated sequence number. */    withSequenceNumber(t) {\n        return new Ni(this.target, this.targetId, this.purpose, t, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken);\n    }\n    /**\n     * Creates a new target data instance with an updated resume token and\n     * snapshot version.\n     */    withResumeToken(t, e) {\n        return new Ni(this.target, this.targetId, this.purpose, this.sequenceNumber, e, this.lastLimboFreeSnapshotVersion, t);\n    }\n    /**\n     * Creates a new target data instance with an updated last limbo free\n     * snapshot version number.\n     */    withLastLimboFreeSnapshotVersion(t) {\n        return new Ni(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, t, this.resumeToken);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Serializer for values stored in the LocalStore. */ class ki {\n    constructor(t) {\n        this.Jt = t;\n    }\n}\n\n/** Decodes a remote document from storage locally to a Document. */ function Mi(t, e) {\n    let n;\n    if (e.document) n = bs(t.Jt, e.document, !!e.hasCommittedMutations); else if (e.noDocument) {\n        const t = xt.fromSegments(e.noDocument.path), s = Bi(e.noDocument.readTime);\n        n = ne.newNoDocument(t, s), e.hasCommittedMutations && n.setHasCommittedMutations();\n    } else {\n        if (!e.unknownDocument) return L();\n        {\n            const t = xt.fromSegments(e.unknownDocument.path), s = Bi(e.unknownDocument.version);\n            n = ne.newUnknownDocument(t, s);\n        }\n    }\n    return e.readTime && n.setReadTime(function(t) {\n        const e = new at(t[0], t[1]);\n        return ct.fromTimestamp(e);\n    }(e.readTime)), n;\n}\n\n/** Encodes a document for storage locally. */ function Oi(t, e) {\n    const n = e.key, s = {\n        prefixPath: n.getCollectionPath().popLast().toArray(),\n        collectionGroup: n.collectionGroup,\n        documentId: n.path.lastSegment(),\n        readTime: Fi(e.readTime),\n        hasCommittedMutations: e.hasCommittedMutations\n    };\n    if (e.isFoundDocument()) s.document = function(t, e) {\n        return {\n            name: ys(t, e.key),\n            fields: e.data.value.mapValue.fields,\n            updateTime: fs(t, e.version.toTimestamp())\n        };\n    }(t.Jt, e); else if (e.isNoDocument()) s.noDocument = {\n        path: n.path.toArray(),\n        readTime: $i(e.version)\n    }; else {\n        if (!e.isUnknownDocument()) return L();\n        s.unknownDocument = {\n            path: n.path.toArray(),\n            version: $i(e.version)\n        };\n    }\n    return s;\n}\n\nfunction Fi(t) {\n    const e = t.toTimestamp();\n    return [ e.seconds, e.nanoseconds ];\n}\n\nfunction $i(t) {\n    const e = t.toTimestamp();\n    return {\n        seconds: e.seconds,\n        nanoseconds: e.nanoseconds\n    };\n}\n\nfunction Bi(t) {\n    const e = new at(t.seconds, t.nanoseconds);\n    return ct.fromTimestamp(e);\n}\n\n/** Encodes a batch of mutations into a DbMutationBatch for local storage. */\n/** Decodes a DbMutationBatch into a MutationBatch */\nfunction Li(t, e) {\n    const n = (e.baseMutations || []).map((e => Ss(t.Jt, e)));\n    // Squash old transform mutations into existing patch or set mutations.\n    // The replacement of representing `transforms` with `update_transforms`\n    // on the SDK means that old `transform` mutations stored in IndexedDB need\n    // to be updated to `update_transforms`.\n    // TODO(b/174608374): Remove this code once we perform a schema migration.\n        for (let t = 0; t < e.mutations.length - 1; ++t) {\n        const n = e.mutations[t];\n        if (t + 1 < e.mutations.length && void 0 !== e.mutations[t + 1].transform) {\n            const s = e.mutations[t + 1];\n            n.updateTransforms = s.transform.fieldTransforms, e.mutations.splice(t + 1, 1), \n            ++t;\n        }\n    }\n    const s = e.mutations.map((e => Ss(t.Jt, e))), i = at.fromMillis(e.localWriteTimeMs);\n    return new Di(e.batchId, i, n, s);\n}\n\n/** Decodes a DbTarget into TargetData */ function Ui(t) {\n    const e = Bi(t.readTime), n = void 0 !== t.lastLimboFreeSnapshotVersion ? Bi(t.lastLimboFreeSnapshotVersion) : ct.min();\n    let s;\n    var i;\n    return void 0 !== t.query.documents ? (U(1 === (i = t.query).documents.length), \n    s = He(Ke(Ts(i.documents[0])))) : s = function(t) {\n        return He(Ns(t));\n    }(t.query), new Ni(s, t.targetId, 0 /* Listen */ , t.lastListenSequenceNumber, e, n, pt.fromBase64String(t.resumeToken));\n}\n\n/** Encodes TargetData into a DbTarget for storage locally. */ function qi(t, e) {\n    const n = $i(e.snapshotVersion), s = $i(e.lastLimboFreeSnapshotVersion);\n    let i;\n    i = Ae(e.target) ? Cs(t.Jt, e.target) : xs(t.Jt, e.target);\n    // We can't store the resumeToken as a ByteString in IndexedDb, so we\n    // convert it to a base64 string for storage.\n        const r = e.resumeToken.toBase64();\n    // lastListenSequenceNumber is always 0 until we do real GC.\n        return {\n        targetId: e.targetId,\n        canonicalId: Ie(e.target),\n        readTime: n,\n        resumeToken: r,\n        lastListenSequenceNumber: e.sequenceNumber,\n        lastLimboFreeSnapshotVersion: s,\n        query: i\n    };\n}\n\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\n/**\n * Encodes a `BundledQuery` from bundle proto to a Query object.\n *\n * This reconstructs the original query used to build the bundle being loaded,\n * including features exists only in SDKs (for example: limit-to-last).\n */\nfunction Ki(t) {\n    const e = Ns({\n        parent: t.parent,\n        structuredQuery: t.structuredQuery\n    });\n    return \"LAST\" === t.limitType ? Je(e, e.limit, \"L\" /* Last */) : e;\n}\n\n/** Encodes a NamedQuery proto object to a NamedQuery model object. */\n/** Encodes a DbDocumentOverlay object to an Overlay model object. */\nfunction Gi(t, e) {\n    return new xi(e.largestBatchId, Ss(t.Jt, e.overlayMutation));\n}\n\n/** Decodes an Overlay model object into a DbDocumentOverlay object. */\n/**\n * Returns the DbDocumentOverlayKey corresponding to the given user and\n * document key.\n */\nfunction Qi(t, e) {\n    const n = e.path.lastSegment();\n    return [ t, Gs(e.path.popLast()), n ];\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass ji {\n    getBundleMetadata(t, e) {\n        return Wi(t).get(e).next((t => {\n            if (t) return {\n                id: (e = t).bundleId,\n                createTime: Bi(e.createTime),\n                version: e.version\n            };\n            /** Encodes a DbBundle to a BundleMetadata object. */\n            var e;\n            /** Encodes a BundleMetadata to a DbBundle. */        }));\n    }\n    saveBundleMetadata(t, e) {\n        return Wi(t).put({\n            bundleId: (n = e).id,\n            createTime: $i(ws(n.createTime)),\n            version: n.version\n        });\n        var n;\n        /** Encodes a DbNamedQuery to a NamedQuery. */    }\n    getNamedQuery(t, e) {\n        return zi(t).get(e).next((t => {\n            if (t) return {\n                name: (e = t).name,\n                query: Ki(e.bundledQuery),\n                readTime: Bi(e.readTime)\n            };\n            var e;\n            /** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */        }));\n    }\n    saveNamedQuery(t, e) {\n        return zi(t).put(function(t) {\n            return {\n                name: t.name,\n                readTime: $i(ws(t.readTime)),\n                bundledQuery: t.bundledQuery\n            };\n        }(e));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the bundles object store.\n */ function Wi(t) {\n    return Si(t, \"bundles\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the namedQueries object store.\n */ function zi(t) {\n    return Si(t, \"namedQueries\");\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Implementation of DocumentOverlayCache using IndexedDb.\n */ class Hi {\n    /**\n     * @param serializer - The document serializer.\n     * @param userId - The userId for which we are accessing overlays.\n     */\n    constructor(t, e) {\n        this.M = t, this.userId = e;\n    }\n    static Yt(t, e) {\n        const n = e.uid || \"\";\n        return new Hi(t, n);\n    }\n    getOverlay(t, e) {\n        return Ji(t).get(Qi(this.userId, e)).next((t => t ? Gi(this.M, t) : null));\n    }\n    saveOverlays(t, e, n) {\n        const s = [];\n        return n.forEach(((n, i) => {\n            const r = new xi(e, i);\n            s.push(this.Xt(t, r));\n        })), yi.waitFor(s);\n    }\n    removeOverlaysForBatchId(t, e, n) {\n        const s = new Set;\n        // Get the set of unique collection paths.\n                e.forEach((t => s.add(Gs(t.getCollectionPath()))));\n        const i = [];\n        return s.forEach((e => {\n            const s = IDBKeyRange.bound([ this.userId, e, n ], [ this.userId, e, n + 1 ], \n            /*lowerOpen=*/ !1, \n            /*upperOpen=*/ !0);\n            i.push(Ji(t).Qt(\"collectionPathOverlayIndex\", s));\n        })), yi.waitFor(i);\n    }\n    getOverlaysForCollection(t, e, n) {\n        const s = zn(), i = Gs(e), r = IDBKeyRange.bound([ this.userId, i, n ], [ this.userId, i, Number.POSITIVE_INFINITY ], \n        /*lowerOpen=*/ !0);\n        return Ji(t).qt(\"collectionPathOverlayIndex\", r).next((t => {\n            for (const e of t) {\n                const t = Gi(this.M, e);\n                s.set(t.getKey(), t);\n            }\n            return s;\n        }));\n    }\n    getOverlaysForCollectionGroup(t, e, n, s) {\n        const i = zn();\n        let r;\n        // We want batch IDs larger than `sinceBatchId`, and so the lower bound\n        // is not inclusive.\n                const o = IDBKeyRange.bound([ this.userId, e, n ], [ this.userId, e, Number.POSITIVE_INFINITY ], \n        /*lowerOpen=*/ !0);\n        return Ji(t).Wt({\n            index: \"collectionGroupOverlayIndex\",\n            range: o\n        }, ((t, e, n) => {\n            // We do not want to return partial batch overlays, even if the size\n            // of the result set exceeds the given `count` argument. Therefore, we\n            // continue to aggregate results even after the result size exceeds\n            // `count` if there are more overlays from the `currentBatchId`.\n            const o = Gi(this.M, e);\n            i.size() < s || o.largestBatchId === r ? (i.set(o.getKey(), o), r = o.largestBatchId) : n.done();\n        })).next((() => i));\n    }\n    Xt(t, e) {\n        return Ji(t).put(function(t, e, n) {\n            const [s, i, r] = Qi(e, n.mutation.key);\n            return {\n                userId: e,\n                collectionPath: i,\n                documentId: r,\n                collectionGroup: n.mutation.key.getCollectionGroup(),\n                largestBatchId: n.largestBatchId,\n                overlayMutation: vs(t.Jt, n.mutation)\n            };\n        }(this.M, this.userId, e));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the document overlay object store.\n */ function Ji(t) {\n    return Si(t, \"documentOverlays\");\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: This code is copied from the backend. Code that is not used by\n// Firestore was removed.\n/** Firestore index value writer.  */\nclass Yi {\n    constructor() {}\n    // The write methods below short-circuit writing terminators for values\n    // containing a (terminating) truncated value.\n    // As an example, consider the resulting encoding for:\n    // [\"bar\", [2, \"foo\"]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TERM, TERM, TERM)\n    // [\"bar\", [2, truncated(\"foo\")]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TRUNC)\n    // [\"bar\", truncated([\"foo\"])] -> (STRING, \"bar\", TERM, ARRAY. STRING, \"foo\", TERM, TRUNC)\n    /** Writes an index value.  */\n    Zt(t, e) {\n        this.te(t, e), \n        // Write separator to split index values\n        // (see go/firestore-storage-format#encodings).\n        e.ee();\n    }\n    te(t, e) {\n        if (\"nullValue\" in t) this.ne(e, 5); else if (\"booleanValue\" in t) this.ne(e, 10), \n        e.se(t.booleanValue ? 1 : 0); else if (\"integerValue\" in t) this.ne(e, 15), e.se(Et(t.integerValue)); else if (\"doubleValue\" in t) {\n            const n = Et(t.doubleValue);\n            isNaN(n) ? this.ne(e, 13) : (this.ne(e, 15), Dt(n) ? \n            // -0.0, 0 and 0.0 are all considered the same\n            e.se(0) : e.se(n));\n        } else if (\"timestampValue\" in t) {\n            const n = t.timestampValue;\n            this.ne(e, 20), \"string\" == typeof n ? e.ie(n) : (e.ie(`${n.seconds || \"\"}`), e.se(n.nanos || 0));\n        } else if (\"stringValue\" in t) this.re(t.stringValue, e), this.oe(e); else if (\"bytesValue\" in t) this.ne(e, 30), \n        e.ue(At(t.bytesValue)), this.oe(e); else if (\"referenceValue\" in t) this.ae(t.referenceValue, e); else if (\"geoPointValue\" in t) {\n            const n = t.geoPointValue;\n            this.ne(e, 45), e.se(n.latitude || 0), e.se(n.longitude || 0);\n        } else \"mapValue\" in t ? Ht(t) ? this.ne(e, Number.MAX_SAFE_INTEGER) : (this.ce(t.mapValue, e), \n        this.oe(e)) : \"arrayValue\" in t ? (this.he(t.arrayValue, e), this.oe(e)) : L();\n    }\n    re(t, e) {\n        this.ne(e, 25), this.le(t, e);\n    }\n    le(t, e) {\n        e.ie(t);\n    }\n    ce(t, e) {\n        const n = t.fields || {};\n        this.ne(e, 55);\n        for (const t of Object.keys(n)) this.re(t, e), this.te(n[t], e);\n    }\n    he(t, e) {\n        const n = t.values || [];\n        this.ne(e, 50);\n        for (const t of n) this.te(t, e);\n    }\n    ae(t, e) {\n        this.ne(e, 37);\n        xt.fromName(t).path.forEach((t => {\n            this.ne(e, 60), this.le(t, e);\n        }));\n    }\n    ne(t, e) {\n        t.se(e);\n    }\n    oe(t) {\n        // While the SDK does not implement truncation, the truncation marker is\n        // used to terminate all variable length values (which are strings, bytes,\n        // references, arrays and maps).\n        t.se(2);\n    }\n}\n\nYi.fe = new Yi;\n\n/**\n * Counts the number of zeros in a byte.\n *\n * Visible for testing.\n */\nfunction Xi(t) {\n    if (0 === t) return 8;\n    let e = 0;\n    return t >> 4 == 0 && (\n    // Test if the first four bits are zero.\n    e += 4, t <<= 4), t >> 6 == 0 && (\n    // Test if the first two (or next two) bits are zero.\n    e += 2, t <<= 2), t >> 7 == 0 && (\n    // Test if the remaining bit is zero.\n    e += 1), e;\n}\n\n/** Counts the number of leading zeros in the given byte array. */\n/**\n * Returns the number of bytes required to store \"value\". Leading zero bytes\n * are skipped.\n */\nfunction Zi(t) {\n    // This is just the number of bytes for the unsigned representation of the number.\n    const e = 64 - function(t) {\n        let e = 0;\n        for (let n = 0; n < 8; ++n) {\n            const s = Xi(255 & t[n]);\n            if (e += s, 8 !== s) break;\n        }\n        return e;\n    }(t);\n    return Math.ceil(e / 8);\n}\n\n/**\n * OrderedCodeWriter is a minimal-allocation implementation of the writing\n * behavior defined by the backend.\n *\n * The code is ported from its Java counterpart.\n */ class tr {\n    constructor() {\n        this.buffer = new Uint8Array(1024), this.position = 0;\n    }\n    de(t) {\n        const e = t[Symbol.iterator]();\n        let n = e.next();\n        for (;!n.done; ) this._e(n.value), n = e.next();\n        this.we();\n    }\n    me(t) {\n        const e = t[Symbol.iterator]();\n        let n = e.next();\n        for (;!n.done; ) this.ge(n.value), n = e.next();\n        this.ye();\n    }\n    /** Writes utf8 bytes into this byte sequence, ascending. */    pe(t) {\n        for (const e of t) {\n            const t = e.charCodeAt(0);\n            if (t < 128) this._e(t); else if (t < 2048) this._e(960 | t >>> 6), this._e(128 | 63 & t); else if (e < \"\\ud800\" || \"\\udbff\" < e) this._e(480 | t >>> 12), \n            this._e(128 | 63 & t >>> 6), this._e(128 | 63 & t); else {\n                const t = e.codePointAt(0);\n                this._e(240 | t >>> 18), this._e(128 | 63 & t >>> 12), this._e(128 | 63 & t >>> 6), \n                this._e(128 | 63 & t);\n            }\n        }\n        this.we();\n    }\n    /** Writes utf8 bytes into this byte sequence, descending */    Ie(t) {\n        for (const e of t) {\n            const t = e.charCodeAt(0);\n            if (t < 128) this.ge(t); else if (t < 2048) this.ge(960 | t >>> 6), this.ge(128 | 63 & t); else if (e < \"\\ud800\" || \"\\udbff\" < e) this.ge(480 | t >>> 12), \n            this.ge(128 | 63 & t >>> 6), this.ge(128 | 63 & t); else {\n                const t = e.codePointAt(0);\n                this.ge(240 | t >>> 18), this.ge(128 | 63 & t >>> 12), this.ge(128 | 63 & t >>> 6), \n                this.ge(128 | 63 & t);\n            }\n        }\n        this.ye();\n    }\n    Te(t) {\n        // Values are encoded with a single byte length prefix, followed by the\n        // actual value in big-endian format with leading 0 bytes dropped.\n        const e = this.Ee(t), n = Zi(e);\n        this.Ae(1 + n), this.buffer[this.position++] = 255 & n;\n        // Write the length\n        for (let t = e.length - n; t < e.length; ++t) this.buffer[this.position++] = 255 & e[t];\n    }\n    Re(t) {\n        // Values are encoded with a single byte length prefix, followed by the\n        // inverted value in big-endian format with leading 0 bytes dropped.\n        const e = this.Ee(t), n = Zi(e);\n        this.Ae(1 + n), this.buffer[this.position++] = ~(255 & n);\n        // Write the length\n        for (let t = e.length - n; t < e.length; ++t) this.buffer[this.position++] = ~(255 & e[t]);\n    }\n    /**\n     * Writes the \"infinity\" byte sequence that sorts after all other byte\n     * sequences written in ascending order.\n     */    be() {\n        this.Pe(255), this.Pe(255);\n    }\n    /**\n     * Writes the \"infinity\" byte sequence that sorts before all other byte\n     * sequences written in descending order.\n     */    Ve() {\n        this.ve(255), this.ve(255);\n    }\n    /**\n     * Resets the buffer such that it is the same as when it was newly\n     * constructed.\n     */    reset() {\n        this.position = 0;\n    }\n    seed(t) {\n        this.Ae(t.length), this.buffer.set(t, this.position), this.position += t.length;\n    }\n    /** Makes a copy of the encoded bytes in this buffer.  */    Se() {\n        return this.buffer.slice(0, this.position);\n    }\n    /**\n     * Encodes `val` into an encoding so that the order matches the IEEE 754\n     * floating-point comparison results with the following exceptions:\n     *   -0.0 < 0.0\n     *   all non-NaN < NaN\n     *   NaN = NaN\n     */    Ee(t) {\n        const e = \n        /** Converts a JavaScript number to a byte array (using big endian encoding). */\n        function(t) {\n            const e = new DataView(new ArrayBuffer(8));\n            return e.setFloat64(0, t, /* littleEndian= */ !1), new Uint8Array(e.buffer);\n        }(t), n = 0 != (128 & e[0]);\n        // Check if the first bit is set. We use a bit mask since value[0] is\n        // encoded as a number from 0 to 255.\n                // Revert the two complement to get natural ordering\n        e[0] ^= n ? 255 : 128;\n        for (let t = 1; t < e.length; ++t) e[t] ^= n ? 255 : 0;\n        return e;\n    }\n    /** Writes a single byte ascending to the buffer. */    _e(t) {\n        const e = 255 & t;\n        0 === e ? (this.Pe(0), this.Pe(255)) : 255 === e ? (this.Pe(255), this.Pe(0)) : this.Pe(e);\n    }\n    /** Writes a single byte descending to the buffer.  */    ge(t) {\n        const e = 255 & t;\n        0 === e ? (this.ve(0), this.ve(255)) : 255 === e ? (this.ve(255), this.ve(0)) : this.ve(t);\n    }\n    we() {\n        this.Pe(0), this.Pe(1);\n    }\n    ye() {\n        this.ve(0), this.ve(1);\n    }\n    Pe(t) {\n        this.Ae(1), this.buffer[this.position++] = t;\n    }\n    ve(t) {\n        this.Ae(1), this.buffer[this.position++] = ~t;\n    }\n    Ae(t) {\n        const e = t + this.position;\n        if (e <= this.buffer.length) return;\n        // Try doubling.\n                let n = 2 * this.buffer.length;\n        // Still not big enough? Just allocate the right size.\n                n < e && (n = e);\n        // Create the new buffer.\n                const s = new Uint8Array(n);\n        s.set(this.buffer), // copy old data\n        this.buffer = s;\n    }\n}\n\nclass er {\n    constructor(t) {\n        this.De = t;\n    }\n    ue(t) {\n        this.De.de(t);\n    }\n    ie(t) {\n        this.De.pe(t);\n    }\n    se(t) {\n        this.De.Te(t);\n    }\n    ee() {\n        this.De.be();\n    }\n}\n\nclass nr {\n    constructor(t) {\n        this.De = t;\n    }\n    ue(t) {\n        this.De.me(t);\n    }\n    ie(t) {\n        this.De.Ie(t);\n    }\n    se(t) {\n        this.De.Re(t);\n    }\n    ee() {\n        this.De.Ve();\n    }\n}\n\n/**\n * Implements `DirectionalIndexByteEncoder` using `OrderedCodeWriter` for the\n * actual encoding.\n */ class sr {\n    constructor() {\n        this.De = new tr, this.Ce = new er(this.De), this.xe = new nr(this.De);\n    }\n    seed(t) {\n        this.De.seed(t);\n    }\n    Ne(t) {\n        return 0 /* ASCENDING */ === t ? this.Ce : this.xe;\n    }\n    Se() {\n        return this.De.Se();\n    }\n    reset() {\n        this.De.reset();\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Represents an index entry saved by the SDK in persisted storage. */ class ir {\n    constructor(t, e, n, s) {\n        this.indexId = t, this.documentKey = e, this.arrayValue = n, this.directionalValue = s;\n    }\n    /**\n     * Returns an IndexEntry entry that sorts immediately after the current\n     * directional value.\n     */    ke() {\n        const t = this.directionalValue.length, e = 0 === t || 255 === this.directionalValue[t - 1] ? t + 1 : t, n = new Uint8Array(e);\n        return n.set(this.directionalValue, 0), e !== t ? n.set([ 0 ], this.directionalValue.length) : ++n[n.length - 1], \n        new ir(this.indexId, this.documentKey, this.arrayValue, n);\n    }\n}\n\nfunction rr(t, e) {\n    let n = t.indexId - e.indexId;\n    return 0 !== n ? n : (n = or(t.arrayValue, e.arrayValue), 0 !== n ? n : (n = or(t.directionalValue, e.directionalValue), \n    0 !== n ? n : xt.comparator(t.documentKey, e.documentKey)));\n}\n\nfunction or(t, e) {\n    for (let n = 0; n < t.length && n < e.length; ++n) {\n        const s = t[n] - e[n];\n        if (0 !== s) return s;\n    }\n    return t.length - e.length;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A light query planner for Firestore.\n *\n * This class matches a `FieldIndex` against a Firestore Query `Target`. It\n * determines whether a given index can be used to serve the specified target.\n *\n * The following table showcases some possible index configurations:\n *\n * Query                                               | Index\n * -----------------------------------------------------------------------------\n * where('a', '==', 'a').where('b', '==', 'b')         | a ASC, b DESC\n * where('a', '==', 'a').where('b', '==', 'b')         | a ASC\n * where('a', '==', 'a').where('b', '==', 'b')         | b DESC\n * where('a', '>=', 'a').orderBy('a')                  | a ASC\n * where('a', '>=', 'a').orderBy('a', 'desc')          | a DESC\n * where('a', '>=', 'a').orderBy('a').orderBy('b')     | a ASC, b ASC\n * where('a', '>=', 'a').orderBy('a').orderBy('b')     | a ASC\n * where('a', 'array-contains', 'a').orderBy('b')      | a CONTAINS, b ASCENDING\n * where('a', 'array-contains', 'a').orderBy('b')      | a CONTAINS\n */ class ur {\n    constructor(t) {\n        this.collectionId = null != t.collectionGroup ? t.collectionGroup : t.path.lastSegment(), \n        this.Me = t.orderBy, this.Oe = [];\n        for (const e of t.filters) {\n            const t = e;\n            t.S() ? this.Fe = t : this.Oe.push(t);\n        }\n    }\n    /**\n     * Returns whether the index can be used to serve the TargetIndexMatcher's\n     * target.\n     *\n     * An index is considered capable of serving the target when:\n     * - The target uses all index segments for its filters and orderBy clauses.\n     *   The target can have additional filter and orderBy clauses, but not\n     *   fewer.\n     * - If an ArrayContains/ArrayContainsAnyfilter is used, the index must also\n     *   have a corresponding `CONTAINS` segment.\n     * - All directional index segments can be mapped to the target as a series of\n     *   equality filters, a single inequality filter and a series of orderBy\n     *   clauses.\n     * - The segments that represent the equality filters may appear out of order.\n     * - The optional segment for the inequality filter must appear after all\n     *   equality segments.\n     * - The segments that represent that orderBy clause of the target must appear\n     *   in order after all equality and inequality segments. Single orderBy\n     *   clauses cannot be skipped, but a continuous orderBy suffix may be\n     *   omitted.\n     */    $e(t) {\n        // If there is an array element, find a matching filter.\n        const e = ie(t);\n        if (void 0 !== e && !this.Be(e)) return !1;\n        const n = re(t);\n        let s = 0, i = 0;\n        // Process all equalities first. Equalities can appear out of order.\n        for (;s < n.length && this.Be(n[s]); ++s) ;\n        // If we already have processed all segments, all segments are used to serve\n        // the equality filters and we do not need to map any segments to the\n        // target's inequality and orderBy clauses.\n                if (s === n.length) return !0;\n        // If there is an inequality filter, the next segment must match both the\n        // filter and the first orderBy clause.\n                if (void 0 !== this.Fe) {\n            const t = n[s];\n            if (!this.Le(this.Fe, t) || !this.Ue(this.Me[i++], t)) return !1;\n            ++s;\n        }\n        // All remaining segments need to represent the prefix of the target's\n        // orderBy.\n                for (;s < n.length; ++s) {\n            const t = n[s];\n            if (i >= this.Me.length || !this.Ue(this.Me[i++], t)) return !1;\n        }\n        return !0;\n    }\n    Be(t) {\n        for (const e of this.Oe) if (this.Le(e, t)) return !0;\n        return !1;\n    }\n    Le(t, e) {\n        if (void 0 === t || !t.field.isEqual(e.fieldPath)) return !1;\n        const n = \"array-contains\" /* ARRAY_CONTAINS */ === t.op || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === t.op;\n        return 2 /* CONTAINS */ === e.kind === n;\n    }\n    Ue(t, e) {\n        return !!t.field.isEqual(e.fieldPath) && (0 /* ASCENDING */ === e.kind && \"asc\" /* ASCENDING */ === t.dir || 1 /* DESCENDING */ === e.kind && \"desc\" /* DESCENDING */ === t.dir);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory implementation of IndexManager.\n */ class ar {\n    constructor() {\n        this.qe = new cr;\n    }\n    addToCollectionParentIndex(t, e) {\n        return this.qe.add(e), yi.resolve();\n    }\n    getCollectionParents(t, e) {\n        return yi.resolve(this.qe.getEntries(e));\n    }\n    addFieldIndex(t, e) {\n        // Field indices are not supported with memory persistence.\n        return yi.resolve();\n    }\n    deleteFieldIndex(t, e) {\n        // Field indices are not supported with memory persistence.\n        return yi.resolve();\n    }\n    getDocumentsMatchingTarget(t, e) {\n        // Field indices are not supported with memory persistence.\n        return yi.resolve(null);\n    }\n    getIndexType(t, e) {\n        // Field indices are not supported with memory persistence.\n        return yi.resolve(0 /* NONE */);\n    }\n    getFieldIndexes(t, e) {\n        // Field indices are not supported with memory persistence.\n        return yi.resolve([]);\n    }\n    getNextCollectionGroupToUpdate(t) {\n        // Field indices are not supported with memory persistence.\n        return yi.resolve(null);\n    }\n    getMinOffset(t, e) {\n        return yi.resolve(he.min());\n    }\n    updateCollectionGroup(t, e, n) {\n        // Field indices are not supported with memory persistence.\n        return yi.resolve();\n    }\n    updateIndexEntries(t, e) {\n        // Field indices are not supported with memory persistence.\n        return yi.resolve();\n    }\n}\n\n/**\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\n * in indexeddb_schema.ts\n */ class cr {\n    constructor() {\n        this.index = {};\n    }\n    // Returns false if the entry already existed.\n    add(t) {\n        const e = t.lastSegment(), n = t.popLast(), s = this.index[e] || new we(_t.comparator), i = !s.has(n);\n        return this.index[e] = s.add(n), i;\n    }\n    has(t) {\n        const e = t.lastSegment(), n = t.popLast(), s = this.index[e];\n        return s && s.has(n);\n    }\n    getEntries(t) {\n        return (this.index[t] || new we(_t.comparator)).toArray();\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const hr = new Uint8Array(0);\n\n/**\n * A persisted implementation of IndexManager.\n *\n * PORTING NOTE: Unlike iOS and Android, the Web SDK does not memoize index\n * data as it supports multi-tab access.\n */\nclass lr {\n    constructor(t, e) {\n        this.user = t, this.databaseId = e, \n        /**\n         * An in-memory copy of the index entries we've already written since the SDK\n         * launched. Used to avoid re-writing the same entry repeatedly.\n         *\n         * This is *NOT* a complete cache of what's in persistence and so can never be\n         * used to satisfy reads.\n         */\n        this.Ke = new cr, \n        /**\n         * Maps from a target to its equivalent list of sub-targets. Each sub-target\n         * contains only one term from the target's disjunctive normal form (DNF).\n         */\n        this.Ge = new Kn((t => Ie(t)), ((t, e) => Ee(t, e))), this.uid = t.uid || \"\";\n    }\n    /**\n     * Adds a new entry to the collection parent index.\n     *\n     * Repeated calls for the same collectionPath should be avoided within a\n     * transaction as IndexedDbIndexManager only caches writes once a transaction\n     * has been committed.\n     */    addToCollectionParentIndex(t, e) {\n        if (!this.Ke.has(e)) {\n            const n = e.lastSegment(), s = e.popLast();\n            t.addOnCommittedListener((() => {\n                // Add the collection to the in memory cache only if the transaction was\n                // successfully committed.\n                this.Ke.add(e);\n            }));\n            const i = {\n                collectionId: n,\n                parent: Gs(s)\n            };\n            return fr(t).put(i);\n        }\n        return yi.resolve();\n    }\n    getCollectionParents(t, e) {\n        const n = [], s = IDBKeyRange.bound([ e, \"\" ], [ ut(e), \"\" ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        return fr(t).qt(s).next((t => {\n            for (const s of t) {\n                // This collectionId guard shouldn't be necessary (and isn't as long\n                // as we're running in a real browser), but there's a bug in\n                // indexeddbshim that breaks our range in our tests running in node:\n                // https://github.com/axemclion/IndexedDBShim/issues/334\n                if (s.collectionId !== e) break;\n                n.push(Ws(s.parent));\n            }\n            return n;\n        }));\n    }\n    addFieldIndex(t, e) {\n        // TODO(indexing): Verify that the auto-incrementing index ID works in\n        // Safari & Firefox.\n        const n = _r(t), s = function(t) {\n            return {\n                indexId: t.indexId,\n                collectionGroup: t.collectionGroup,\n                fields: t.fields.map((t => [ t.fieldPath.canonicalString(), t.kind ]))\n            };\n        }(e);\n        // `indexId` is auto-populated by IndexedDb\n        return delete s.indexId, n.add(s).next();\n    }\n    deleteFieldIndex(t, e) {\n        const n = _r(t), s = wr(t), i = dr(t);\n        return n.delete(e.indexId).next((() => s.delete(IDBKeyRange.bound([ e.indexId ], [ e.indexId + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0)))).next((() => i.delete(IDBKeyRange.bound([ e.indexId ], [ e.indexId + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0))));\n    }\n    getDocumentsMatchingTarget(t, e) {\n        const n = dr(t);\n        let s = !0;\n        const i = new Map;\n        return yi.forEach(this.Qe(e), (e => this.je(t, e).next((t => {\n            s && (s = !!t), i.set(e, t);\n        })))).next((() => {\n            if (s) {\n                let t = Yn();\n                const s = [];\n                return yi.forEach(i, ((i, r) => {\n                    /** Returns a debug representation of the field index */\n                    var o;\n                    O(\"IndexedDbIndexManager\", `Using index ${o = i, `id=${o.indexId}|cg=${o.collectionGroup}|f=${o.fields.map((t => `${t.fieldPath}:${t.kind}`)).join(\",\")}`} to execute ${Ie(e)}`);\n                    const u = function(t, e) {\n                        const n = ie(e);\n                        if (void 0 === n) return null;\n                        for (const e of Re(t, n.fieldPath)) switch (e.op) {\n                          case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                            return e.value.arrayValue.values || [];\n\n                          case \"array-contains\" /* ARRAY_CONTAINS */ :\n                            return [ e.value ];\n                            // Remaining filters are not array filters.\n                                                }\n                        return null;\n                    }\n                    /**\n * Returns the list of values that are used in != or NOT_IN filters. Returns\n * `null` if there are no such filters.\n */ (r, i), a = function(t, e) {\n                        const n = new Map;\n                        for (const s of re(e)) for (const e of Re(t, s.fieldPath)) switch (e.op) {\n                          case \"==\" /* EQUAL */ :\n                          case \"in\" /* IN */ :\n                            // Encode equality prefix, which is encoded in the index value before\n                            // the inequality (e.g. `a == 'a' && b != 'b'` is encoded to\n                            // `value != 'ab'`).\n                            n.set(s.fieldPath.canonicalString(), e.value);\n                            break;\n\n                          case \"not-in\" /* NOT_IN */ :\n                          case \"!=\" /* NOT_EQUAL */ :\n                            // NotIn/NotEqual is always a suffix. There cannot be any remaining\n                            // segments and hence we can return early here.\n                            return n.set(s.fieldPath.canonicalString(), e.value), Array.from(n.values());\n                            // Remaining filters cannot be used as notIn bounds.\n                                                }\n                        return null;\n                    }\n                    /**\n * Returns a lower bound of field values that can be used as a starting point to\n * scan the index defined by `fieldIndex`. Returns `MIN_VALUE` if no lower bound\n * exists.\n */ (r, i), c = function(t, e) {\n                        const n = [];\n                        let s = !0;\n                        // For each segment, retrieve a lower bound if there is a suitable filter or\n                        // startAt.\n                                                for (const i of re(e)) {\n                            const e = 0 /* ASCENDING */ === i.kind ? be(t, i.fieldPath, t.startAt) : Pe(t, i.fieldPath, t.startAt);\n                            n.push(e.value), s && (s = e.inclusive);\n                        }\n                        return new Oe(n, s);\n                    }\n                    /**\n * Returns an upper bound of field values that can be used as an ending point\n * when scanning the index defined by `fieldIndex`. Returns `MAX_VALUE` if no\n * upper bound exists.\n */ (r, i), h = function(t, e) {\n                        const n = [];\n                        let s = !0;\n                        // For each segment, retrieve an upper bound if there is a suitable filter or\n                        // endAt.\n                                                for (const i of re(e)) {\n                            const e = 0 /* ASCENDING */ === i.kind ? Pe(t, i.fieldPath, t.endAt) : be(t, i.fieldPath, t.endAt);\n                            n.push(e.value), s && (s = e.inclusive);\n                        }\n                        return new Oe(n, s);\n                    }(r, i), l = this.We(i, r, c), f = this.We(i, r, h), d = this.ze(i, r, a), _ = this.He(i.indexId, u, l, c.inclusive, f, h.inclusive, d);\n                    return yi.forEach(_, (i => n.Gt(i, e.limit).next((e => {\n                        e.forEach((e => {\n                            const n = xt.fromSegments(e.documentKey);\n                            t.has(n) || (t = t.add(n), s.push(n));\n                        }));\n                    }))));\n                })).next((() => s));\n            }\n            return yi.resolve(null);\n        }));\n    }\n    Qe(t) {\n        let e = this.Ge.get(t);\n        return e || (\n        // TODO(orquery): Implement DNF transform\n        e = [ t ], this.Ge.set(t, e), e);\n    }\n    /**\n     * Constructs a key range query on `DbIndexEntryStore` that unions all\n     * bounds.\n     */    He(t, e, n, s, i, r, o) {\n        // The number of total index scans we union together. This is similar to a\n        // distributed normal form, but adapted for array values. We create a single\n        // index range per value in an ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filter\n        // combined with the values from the query bounds.\n        const u = (null != e ? e.length : 1) * Math.max(n.length, i.length), a = u / (null != e ? e.length : 1), c = [];\n        for (let h = 0; h < u; ++h) {\n            const u = e ? this.Je(e[h / a]) : hr, l = this.Ye(t, u, n[h % a], s), f = this.Xe(t, u, i[h % a], r), d = o.map((e => this.Ye(t, u, e, \n            /* inclusive= */ !0)));\n            c.push(...this.createRange(l, f, d));\n        }\n        return c;\n    }\n    /** Generates the lower bound for `arrayValue` and `directionalValue`. */    Ye(t, e, n, s) {\n        const i = new ir(t, xt.empty(), e, n);\n        return s ? i : i.ke();\n    }\n    /** Generates the upper bound for `arrayValue` and `directionalValue`. */    Xe(t, e, n, s) {\n        const i = new ir(t, xt.empty(), e, n);\n        return s ? i.ke() : i;\n    }\n    je(t, e) {\n        const n = new ur(e), s = null != e.collectionGroup ? e.collectionGroup : e.path.lastSegment();\n        return this.getFieldIndexes(t, s).next((t => {\n            // Return the index with the most number of segments.\n            let e = null;\n            for (const s of t) {\n                n.$e(s) && (!e || s.fields.length > e.fields.length) && (e = s);\n            }\n            return e;\n        }));\n    }\n    getIndexType(t, e) {\n        let n = 2 /* FULL */;\n        return yi.forEach(this.Qe(e), (e => this.je(t, e).next((t => {\n            t ? 0 /* NONE */ !== n && t.fields.length < function(t) {\n                let e = new we(mt.comparator), n = !1;\n                for (const s of t.filters) {\n                    // TODO(orquery): Use the flattened filters here\n                    const t = s;\n                    // __name__ is not an explicit segment of any index, so we don't need to\n                    // count it.\n                                        t.field.isKeyField() || (\n                    // ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filters must be counted separately.\n                    // For instance, it is possible to have an index for \"a ARRAY a ASC\". Even\n                    // though these are on the same field, they should be counted as two\n                    // separate segments in an index.\n                    \"array-contains\" /* ARRAY_CONTAINS */ === t.op || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === t.op ? n = !0 : e = e.add(t.field));\n                }\n                for (const n of t.orderBy) \n                // __name__ is not an explicit segment of any index, so we don't need to\n                // count it.\n                n.field.isKeyField() || (e = e.add(n.field));\n                return e.size + (n ? 1 : 0);\n            }(e) && (n = 1 /* PARTIAL */) : n = 0 /* NONE */;\n        })))).next((() => n));\n    }\n    /**\n     * Returns the byte encoded form of the directional values in the field index.\n     * Returns `null` if the document does not have all fields specified in the\n     * index.\n     */    Ze(t, e) {\n        const n = new sr;\n        for (const s of re(t)) {\n            const t = e.data.field(s.fieldPath);\n            if (null == t) return null;\n            const i = n.Ne(s.kind);\n            Yi.fe.Zt(t, i);\n        }\n        return n.Se();\n    }\n    /** Encodes a single value to the ascending index format. */    Je(t) {\n        const e = new sr;\n        return Yi.fe.Zt(t, e.Ne(0 /* ASCENDING */)), e.Se();\n    }\n    /**\n     * Returns an encoded form of the document key that sorts based on the key\n     * ordering of the field index.\n     */    tn(t, e) {\n        const n = new sr;\n        return Yi.fe.Zt(qt(this.databaseId, e), n.Ne(function(t) {\n            const e = re(t);\n            return 0 === e.length ? 0 /* ASCENDING */ : e[e.length - 1].kind;\n        }(t))), n.Se();\n    }\n    /**\n     * Encodes the given field values according to the specification in `target`.\n     * For IN queries, a list of possible values is returned.\n     */    ze(t, e, n) {\n        if (null === n) return [];\n        let s = [];\n        s.push(new sr);\n        let i = 0;\n        for (const r of re(t)) {\n            const t = n[i++];\n            for (const n of s) if (this.en(e, r.fieldPath) && Gt(t)) s = this.nn(s, r, t); else {\n                const e = n.Ne(r.kind);\n                Yi.fe.Zt(t, e);\n            }\n        }\n        return this.sn(s);\n    }\n    /**\n     * Encodes the given bounds according to the specification in `target`. For IN\n     * queries, a list of possible values is returned.\n     */    We(t, e, n) {\n        return this.ze(t, e, n.position);\n    }\n    /** Returns the byte representation for the provided encoders. */    sn(t) {\n        const e = [];\n        for (let n = 0; n < t.length; ++n) e[n] = t[n].Se();\n        return e;\n    }\n    /**\n     * Creates a separate encoder for each element of an array.\n     *\n     * The method appends each value to all existing encoders (e.g. filter(\"a\",\n     * \"==\", \"a1\").filter(\"b\", \"in\", [\"b1\", \"b2\"]) becomes [\"a1,b1\", \"a1,b2\"]). A\n     * list of new encoders is returned.\n     */    nn(t, e, n) {\n        const s = [ ...t ], i = [];\n        for (const t of n.arrayValue.values || []) for (const n of s) {\n            const s = new sr;\n            s.seed(n.Se()), Yi.fe.Zt(t, s.Ne(e.kind)), i.push(s);\n        }\n        return i;\n    }\n    en(t, e) {\n        return !!t.filters.find((t => t instanceof Ve && t.field.isEqual(e) && (\"in\" /* IN */ === t.op || \"not-in\" /* NOT_IN */ === t.op)));\n    }\n    getFieldIndexes(t, e) {\n        const n = _r(t), s = wr(t);\n        return (e ? n.qt(\"collectionGroupIndex\", IDBKeyRange.bound(e, e)) : n.qt()).next((t => {\n            const e = [];\n            return yi.forEach(t, (t => s.get([ t.indexId, this.uid ]).next((n => {\n                e.push(function(t, e) {\n                    const n = e ? new ue(e.sequenceNumber, new he(Bi(e.readTime), new xt(Ws(e.documentKey)), e.largestBatchId)) : ue.empty(), s = t.fields.map((([t, e]) => new oe(mt.fromServerFormat(t), e)));\n                    return new se(t.indexId, t.collectionGroup, s, n);\n                }(t, n));\n            })))).next((() => e));\n        }));\n    }\n    getNextCollectionGroupToUpdate(t) {\n        return this.getFieldIndexes(t).next((t => 0 === t.length ? null : (t.sort(((t, e) => {\n            const n = t.indexState.sequenceNumber - e.indexState.sequenceNumber;\n            return 0 !== n ? n : rt(t.collectionGroup, e.collectionGroup);\n        })), t[0].collectionGroup)));\n    }\n    updateCollectionGroup(t, e, n) {\n        const s = _r(t), i = wr(t);\n        return this.rn(t).next((t => s.qt(\"collectionGroupIndex\", IDBKeyRange.bound(e, e)).next((e => yi.forEach(e, (e => i.put(function(t, e, n, s) {\n            return {\n                indexId: t,\n                uid: e.uid || \"\",\n                sequenceNumber: n,\n                readTime: $i(s.readTime),\n                documentKey: Gs(s.documentKey.path),\n                largestBatchId: s.largestBatchId\n            };\n        }(e.indexId, this.user, t, n))))))));\n    }\n    updateIndexEntries(t, e) {\n        // Porting Note: `getFieldIndexes()` on Web does not cache index lookups as\n        // it could be used across different IndexedDB transactions. As any cached\n        // data might be invalidated by other multi-tab clients, we can only trust\n        // data within a single IndexedDB transaction. We therefore add a cache\n        // here.\n        const n = new Map;\n        return yi.forEach(e, ((e, s) => {\n            const i = n.get(e.collectionGroup);\n            return (i ? yi.resolve(i) : this.getFieldIndexes(t, e.collectionGroup)).next((i => (n.set(e.collectionGroup, i), \n            yi.forEach(i, (n => this.on(t, e, n).next((e => {\n                const i = this.un(s, n);\n                return e.isEqual(i) ? yi.resolve() : this.an(t, s, n, e, i);\n            })))))));\n        }));\n    }\n    cn(t, e, n, s) {\n        return dr(t).put({\n            indexId: s.indexId,\n            uid: this.uid,\n            arrayValue: s.arrayValue,\n            directionalValue: s.directionalValue,\n            orderedDocumentKey: this.tn(n, e.key),\n            documentKey: e.key.path.toArray()\n        });\n    }\n    hn(t, e, n, s) {\n        return dr(t).delete([ s.indexId, this.uid, s.arrayValue, s.directionalValue, this.tn(n, e.key), e.key.path.toArray() ]);\n    }\n    on(t, e, n) {\n        const s = dr(t);\n        let i = new we(rr);\n        return s.Wt({\n            index: \"documentKeyIndex\",\n            range: IDBKeyRange.only([ n.indexId, this.uid, this.tn(n, e) ])\n        }, ((t, s) => {\n            i = i.add(new ir(n.indexId, e, s.arrayValue, s.directionalValue));\n        })).next((() => i));\n    }\n    /** Creates the index entries for the given document. */    un(t, e) {\n        let n = new we(rr);\n        const s = this.Ze(e, t);\n        if (null == s) return n;\n        const i = ie(e);\n        if (null != i) {\n            const r = t.data.field(i.fieldPath);\n            if (Gt(r)) for (const i of r.arrayValue.values || []) n = n.add(new ir(e.indexId, t.key, this.Je(i), s));\n        } else n = n.add(new ir(e.indexId, t.key, hr, s));\n        return n;\n    }\n    /**\n     * Updates the index entries for the provided document by deleting entries\n     * that are no longer referenced in `newEntries` and adding all newly added\n     * entries.\n     */    an(t, e, n, s, i) {\n        O(\"IndexedDbIndexManager\", \"Updating index entries for document '%s'\", e.key);\n        const r = [];\n        return function(t, e, n, s, i) {\n            const r = t.getIterator(), o = e.getIterator();\n            let u = ge(r), a = ge(o);\n            // Walk through the two sets at the same time, using the ordering defined by\n            // `comparator`.\n            for (;u || a; ) {\n                let t = !1, e = !1;\n                if (u && a) {\n                    const s = n(u, a);\n                    s < 0 ? \n                    // The element was removed if the next element in our ordered\n                    // walkthrough is only in `before`.\n                    e = !0 : s > 0 && (\n                    // The element was added if the next element in our ordered walkthrough\n                    // is only in `after`.\n                    t = !0);\n                } else null != u ? e = !0 : t = !0;\n                t ? (s(a), a = ge(o)) : e ? (i(u), u = ge(r)) : (u = ge(r), a = ge(o));\n            }\n        }(s, i, rr, (\n        /* onAdd= */ s => {\n            r.push(this.cn(t, e, n, s));\n        }), (\n        /* onRemove= */ s => {\n            r.push(this.hn(t, e, n, s));\n        })), yi.waitFor(r);\n    }\n    rn(t) {\n        let e = 1;\n        return wr(t).Wt({\n            index: \"sequenceNumberIndex\",\n            reverse: !0,\n            range: IDBKeyRange.upperBound([ this.uid, Number.MAX_SAFE_INTEGER ])\n        }, ((t, n, s) => {\n            s.done(), e = n.sequenceNumber + 1;\n        })).next((() => e));\n    }\n    /**\n     * Returns a new set of IDB ranges that splits the existing range and excludes\n     * any values that match the `notInValue` from these ranges. As an example,\n     * '[foo > 2 && foo != 3]` becomes  `[foo > 2 && < 3, foo > 3]`.\n     */    createRange(t, e, n) {\n        // The notIn values need to be sorted and unique so that we can return a\n        // sorted set of non-overlapping ranges.\n        n = n.sort(((t, e) => rr(t, e))).filter(((t, e, n) => !e || 0 !== rr(t, n[e - 1])));\n        const s = [];\n        s.push(t);\n        for (const i of n) {\n            const n = rr(i, t), r = rr(i, e);\n            if (0 === n) \n            // `notInValue` is the lower bound. We therefore need to raise the bound\n            // to the next value.\n            s[0] = t.ke(); else if (n > 0 && r < 0) \n            // `notInValue` is in the middle of the range\n            s.push(i), s.push(i.ke()); else if (r > 0) \n            // `notInValue` (and all following values) are out of the range\n            break;\n        }\n        s.push(e);\n        const i = [];\n        for (let t = 0; t < s.length; t += 2) i.push(IDBKeyRange.bound([ s[t].indexId, this.uid, s[t].arrayValue, s[t].directionalValue, hr, [] ], [ s[t + 1].indexId, this.uid, s[t + 1].arrayValue, s[t + 1].directionalValue, hr, [] ]));\n        return i;\n    }\n    getMinOffset(t, e) {\n        let n;\n        return yi.forEach(this.Qe(e), (e => this.je(t, e).next((t => {\n            t ? (!n || le(t.indexState.offset, n) < 0) && (n = t.indexState.offset) : n = he.min();\n        })))).next((() => n));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */ function fr(t) {\n    return Si(t, \"collectionParents\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index entry object store.\n */ function dr(t) {\n    return Si(t, \"indexEntries\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index configuration object store.\n */ function _r(t) {\n    return Si(t, \"indexConfiguration\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index state object store.\n */ function wr(t) {\n    return Si(t, \"indexState\");\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const mr = {\n    didRun: !1,\n    sequenceNumbersCollected: 0,\n    targetsRemoved: 0,\n    documentsRemoved: 0\n};\n\nclass gr {\n    constructor(\n    // When we attempt to collect, we will only do so if the cache size is greater than this\n    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n    t, \n    // The percentage of sequence numbers that we will attempt to collect\n    e, \n    // A cap on the total number of sequence numbers that will be collected. This prevents\n    // us from collecting a huge number of sequence numbers if the cache has grown very large.\n    n) {\n        this.cacheSizeCollectionThreshold = t, this.percentileToCollect = e, this.maximumSequenceNumbersToCollect = n;\n    }\n    static withCacheSize(t) {\n        return new gr(t, gr.DEFAULT_COLLECTION_PERCENTILE, gr.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Delete a mutation batch and the associated document mutations.\n * @returns A PersistencePromise of the document mutations that were removed.\n */\nfunction yr(t, e, n) {\n    const s = t.store(\"mutations\"), i = t.store(\"documentMutations\"), r = [], o = IDBKeyRange.only(n.batchId);\n    let u = 0;\n    const a = s.Wt({\n        range: o\n    }, ((t, e, n) => (u++, n.delete())));\n    r.push(a.next((() => {\n        U(1 === u);\n    })));\n    const c = [];\n    for (const t of n.mutations) {\n        const s = Js(e, t.key.path, n.batchId);\n        r.push(i.delete(s)), c.push(t.key);\n    }\n    return yi.waitFor(r).next((() => c));\n}\n\n/**\n * Returns an approximate size for the given document.\n */ function pr(t) {\n    if (!t) return 0;\n    let e;\n    if (t.document) e = t.document; else if (t.unknownDocument) e = t.unknownDocument; else {\n        if (!t.noDocument) throw L();\n        e = t.noDocument;\n    }\n    return JSON.stringify(e).length;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A mutation queue for a specific user, backed by IndexedDB. */ gr.DEFAULT_COLLECTION_PERCENTILE = 10, \ngr.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3, gr.DEFAULT = new gr(41943040, gr.DEFAULT_COLLECTION_PERCENTILE, gr.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT), \ngr.DISABLED = new gr(-1, 0, 0);\n\nclass Ir {\n    constructor(\n    /**\n     * The normalized userId (e.g. null UID => \"\" userId) used to store /\n     * retrieve mutations.\n     */\n    t, e, n, s) {\n        this.userId = t, this.M = e, this.indexManager = n, this.referenceDelegate = s, \n        /**\n         * Caches the document keys for pending mutation batches. If the mutation\n         * has been removed from IndexedDb, the cached value may continue to\n         * be used to retrieve the batch's document keys. To remove a cached value\n         * locally, `removeCachedMutationKeys()` should be invoked either directly\n         * or through `removeMutationBatches()`.\n         *\n         * With multi-tab, when the primary client acknowledges or rejects a mutation,\n         * this cache is used by secondary clients to invalidate the local\n         * view of the documents that were previously affected by the mutation.\n         */\n        // PORTING NOTE: Multi-tab only.\n        this.ln = {};\n    }\n    /**\n     * Creates a new mutation queue for the given user.\n     * @param user - The user for which to create a mutation queue.\n     * @param serializer - The serializer to use when persisting to IndexedDb.\n     */    static Yt(t, e, n, s) {\n        // TODO(mcg): Figure out what constraints there are on userIDs\n        // In particular, are there any reserved characters? are empty ids allowed?\n        // For the moment store these together in the same mutations table assuming\n        // that empty userIDs aren't allowed.\n        U(\"\" !== t.uid);\n        const i = t.isAuthenticated() ? t.uid : \"\";\n        return new Ir(i, e, n, s);\n    }\n    checkEmpty(t) {\n        let e = !0;\n        const n = IDBKeyRange.bound([ this.userId, Number.NEGATIVE_INFINITY ], [ this.userId, Number.POSITIVE_INFINITY ]);\n        return Er(t).Wt({\n            index: \"userMutationsIndex\",\n            range: n\n        }, ((t, n, s) => {\n            e = !1, s.done();\n        })).next((() => e));\n    }\n    addMutationBatch(t, e, n, s) {\n        const i = Ar(t), r = Er(t);\n        // The IndexedDb implementation in Chrome (and Firefox) does not handle\n        // compound indices that include auto-generated keys correctly. To ensure\n        // that the index entry is added correctly in all browsers, we perform two\n        // writes: The first write is used to retrieve the next auto-generated Batch\n        // ID, and the second write populates the index and stores the actual\n        // mutation batch.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972\n        // We write an empty object to obtain key\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return r.add({}).next((o => {\n            U(\"number\" == typeof o);\n            const u = new Di(o, e, n, s), a = function(t, e, n) {\n                const s = n.baseMutations.map((e => vs(t.Jt, e))), i = n.mutations.map((e => vs(t.Jt, e)));\n                return {\n                    userId: e,\n                    batchId: n.batchId,\n                    localWriteTimeMs: n.localWriteTime.toMillis(),\n                    baseMutations: s,\n                    mutations: i\n                };\n            }(this.M, this.userId, u), c = [];\n            let h = new we(((t, e) => rt(t.canonicalString(), e.canonicalString())));\n            for (const t of s) {\n                const e = Js(this.userId, t.key.path, o);\n                h = h.add(t.key.path.popLast()), c.push(r.put(a)), c.push(i.put(e, Ys));\n            }\n            return h.forEach((e => {\n                c.push(this.indexManager.addToCollectionParentIndex(t, e));\n            })), t.addOnCommittedListener((() => {\n                this.ln[o] = u.keys();\n            })), yi.waitFor(c).next((() => u));\n        }));\n    }\n    lookupMutationBatch(t, e) {\n        return Er(t).get(e).next((t => t ? (U(t.userId === this.userId), Li(this.M, t)) : null));\n    }\n    /**\n     * Returns the document keys for the mutation batch with the given batchId.\n     * For primary clients, this method returns `null` after\n     * `removeMutationBatches()` has been called. Secondary clients return a\n     * cached result until `removeCachedMutationKeys()` is invoked.\n     */\n    // PORTING NOTE: Multi-tab only.\n    fn(t, e) {\n        return this.ln[e] ? yi.resolve(this.ln[e]) : this.lookupMutationBatch(t, e).next((t => {\n            if (t) {\n                const n = t.keys();\n                return this.ln[e] = n, n;\n            }\n            return null;\n        }));\n    }\n    getNextMutationBatchAfterBatchId(t, e) {\n        const n = e + 1, s = IDBKeyRange.lowerBound([ this.userId, n ]);\n        let i = null;\n        return Er(t).Wt({\n            index: \"userMutationsIndex\",\n            range: s\n        }, ((t, e, s) => {\n            e.userId === this.userId && (U(e.batchId >= n), i = Li(this.M, e)), s.done();\n        })).next((() => i));\n    }\n    getHighestUnacknowledgedBatchId(t) {\n        const e = IDBKeyRange.upperBound([ this.userId, Number.POSITIVE_INFINITY ]);\n        let n = -1;\n        return Er(t).Wt({\n            index: \"userMutationsIndex\",\n            range: e,\n            reverse: !0\n        }, ((t, e, s) => {\n            n = e.batchId, s.done();\n        })).next((() => n));\n    }\n    getAllMutationBatches(t) {\n        const e = IDBKeyRange.bound([ this.userId, -1 ], [ this.userId, Number.POSITIVE_INFINITY ]);\n        return Er(t).qt(\"userMutationsIndex\", e).next((t => t.map((t => Li(this.M, t)))));\n    }\n    getAllMutationBatchesAffectingDocumentKey(t, e) {\n        // Scan the document-mutation index starting with a prefix starting with\n        // the given documentKey.\n        const n = Hs(this.userId, e.path), s = IDBKeyRange.lowerBound(n), i = [];\n        return Ar(t).Wt({\n            range: s\n        }, ((n, s, r) => {\n            const [o, u, a] = n, c = Ws(u);\n            // Only consider rows matching exactly the specific key of\n            // interest. Note that because we order by path first, and we\n            // order terminators before path separators, we'll encounter all\n            // the index rows for documentKey contiguously. In particular, all\n            // the rows for documentKey will occur before any rows for\n            // documents nested in a subcollection beneath documentKey so we\n            // can stop as soon as we hit any such row.\n                        if (o === this.userId && e.path.isEqual(c)) \n            // Look up the mutation batch in the store.\n            return Er(t).get(a).next((t => {\n                if (!t) throw L();\n                U(t.userId === this.userId), i.push(Li(this.M, t));\n            }));\n            r.done();\n        })).next((() => i));\n    }\n    getAllMutationBatchesAffectingDocumentKeys(t, e) {\n        let n = new we(rt);\n        const s = [];\n        return e.forEach((e => {\n            const i = Hs(this.userId, e.path), r = IDBKeyRange.lowerBound(i), o = Ar(t).Wt({\n                range: r\n            }, ((t, s, i) => {\n                const [r, o, u] = t, a = Ws(o);\n                // Only consider rows matching exactly the specific key of\n                // interest. Note that because we order by path first, and we\n                // order terminators before path separators, we'll encounter all\n                // the index rows for documentKey contiguously. In particular, all\n                // the rows for documentKey will occur before any rows for\n                // documents nested in a subcollection beneath documentKey so we\n                // can stop as soon as we hit any such row.\n                                r === this.userId && e.path.isEqual(a) ? n = n.add(u) : i.done();\n            }));\n            s.push(o);\n        })), yi.waitFor(s).next((() => this.dn(t, n)));\n    }\n    getAllMutationBatchesAffectingQuery(t, e) {\n        const n = e.path, s = n.length + 1, i = Hs(this.userId, n), r = IDBKeyRange.lowerBound(i);\n        // Collect up unique batchIDs encountered during a scan of the index. Use a\n        // SortedSet to accumulate batch IDs so they can be traversed in order in a\n        // scan of the main table.\n        let o = new we(rt);\n        return Ar(t).Wt({\n            range: r\n        }, ((t, e, i) => {\n            const [r, u, a] = t, c = Ws(u);\n            r === this.userId && n.isPrefixOf(c) ? \n            // Rows with document keys more than one segment longer than the\n            // query path can't be matches. For example, a query on 'rooms'\n            // can't match the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            c.length === s && (o = o.add(a)) : i.done();\n        })).next((() => this.dn(t, o)));\n    }\n    dn(t, e) {\n        const n = [], s = [];\n        // TODO(rockwood): Implement this using iterate.\n        return e.forEach((e => {\n            s.push(Er(t).get(e).next((t => {\n                if (null === t) throw L();\n                U(t.userId === this.userId), n.push(Li(this.M, t));\n            })));\n        })), yi.waitFor(s).next((() => n));\n    }\n    removeMutationBatch(t, e) {\n        return yr(t.Ht, this.userId, e).next((n => (t.addOnCommittedListener((() => {\n            this._n(e.batchId);\n        })), yi.forEach(n, (e => this.referenceDelegate.markPotentiallyOrphaned(t, e))))));\n    }\n    /**\n     * Clears the cached keys for a mutation batch. This method should be\n     * called by secondary clients after they process mutation updates.\n     *\n     * Note that this method does not have to be called from primary clients as\n     * the corresponding cache entries are cleared when an acknowledged or\n     * rejected batch is removed from the mutation queue.\n     */\n    // PORTING NOTE: Multi-tab only\n    _n(t) {\n        delete this.ln[t];\n    }\n    performConsistencyCheck(t) {\n        return this.checkEmpty(t).next((e => {\n            if (!e) return yi.resolve();\n            // Verify that there are no entries in the documentMutations index if\n            // the queue is empty.\n                        const n = IDBKeyRange.lowerBound([ this.userId ]);\n            const s = [];\n            return Ar(t).Wt({\n                range: n\n            }, ((t, e, n) => {\n                if (t[0] === this.userId) {\n                    const e = Ws(t[1]);\n                    s.push(e);\n                } else n.done();\n            })).next((() => {\n                U(0 === s.length);\n            }));\n        }));\n    }\n    containsKey(t, e) {\n        return Tr(t, this.userId, e);\n    }\n    // PORTING NOTE: Multi-tab only (state is held in memory in other clients).\n    /** Returns the mutation queue's metadata from IndexedDb. */\n    wn(t) {\n        return Rr(t).get(this.userId).next((t => t || {\n            userId: this.userId,\n            lastAcknowledgedBatchId: -1,\n            lastStreamToken: \"\"\n        }));\n    }\n}\n\n/**\n * @returns true if the mutation queue for the given user contains a pending\n *         mutation for the given key.\n */ function Tr(t, e, n) {\n    const s = Hs(e, n.path), i = s[1], r = IDBKeyRange.lowerBound(s);\n    let o = !1;\n    return Ar(t).Wt({\n        range: r,\n        jt: !0\n    }, ((t, n, s) => {\n        const [r, u, /*batchID*/ a] = t;\n        r === e && u === i && (o = !0), s.done();\n    })).next((() => o));\n}\n\n/** Returns true if any mutation queue contains the given document. */\n/**\n * Helper to get a typed SimpleDbStore for the mutations object store.\n */\nfunction Er(t) {\n    return Si(t, \"mutations\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */ function Ar(t) {\n    return Si(t, \"documentMutations\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */ function Rr(t) {\n    return Si(t, \"mutationQueues\");\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Offset to ensure non-overlapping target ids. */\n/**\n * Generates monotonically increasing target IDs for sending targets to the\n * watch stream.\n *\n * The client constructs two generators, one for the target cache, and one for\n * for the sync engine (to generate limbo documents targets). These\n * generators produce non-overlapping IDs (by using even and odd IDs\n * respectively).\n *\n * By separating the target ID space, the query cache can generate target IDs\n * that persist across client restarts, while sync engine can independently\n * generate in-memory target IDs that are transient and can be reused after a\n * restart.\n */\nclass br {\n    constructor(t) {\n        this.mn = t;\n    }\n    next() {\n        return this.mn += 2, this.mn;\n    }\n    static gn() {\n        // The target cache generator must return '2' in its first call to `next()`\n        // as there is no differentiation in the protocol layer between an unset\n        // number and the number '0'. If we were to sent a target with target ID\n        // '0', the backend would consider it unset and replace it with its own ID.\n        return new br(0);\n    }\n    static yn() {\n        // Sync engine assigns target IDs for limbo document detection.\n        return new br(-1);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Pr {\n    constructor(t, e) {\n        this.referenceDelegate = t, this.M = e;\n    }\n    // PORTING NOTE: We don't cache global metadata for the target cache, since\n    // some of it (in particular `highestTargetId`) can be modified by secondary\n    // tabs. We could perhaps be more granular (and e.g. still cache\n    // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go\n    // to IndexedDb whenever we need to read metadata. We can revisit if it turns\n    // out to have a meaningful performance impact.\n    allocateTargetId(t) {\n        return this.pn(t).next((e => {\n            const n = new br(e.highestTargetId);\n            return e.highestTargetId = n.next(), this.In(t, e).next((() => e.highestTargetId));\n        }));\n    }\n    getLastRemoteSnapshotVersion(t) {\n        return this.pn(t).next((t => ct.fromTimestamp(new at(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds))));\n    }\n    getHighestSequenceNumber(t) {\n        return this.pn(t).next((t => t.highestListenSequenceNumber));\n    }\n    setTargetsMetadata(t, e, n) {\n        return this.pn(t).next((s => (s.highestListenSequenceNumber = e, n && (s.lastRemoteSnapshotVersion = n.toTimestamp()), \n        e > s.highestListenSequenceNumber && (s.highestListenSequenceNumber = e), this.In(t, s))));\n    }\n    addTargetData(t, e) {\n        return this.Tn(t, e).next((() => this.pn(t).next((n => (n.targetCount += 1, this.En(e, n), \n        this.In(t, n))))));\n    }\n    updateTargetData(t, e) {\n        return this.Tn(t, e);\n    }\n    removeTargetData(t, e) {\n        return this.removeMatchingKeysForTargetId(t, e.targetId).next((() => Vr(t).delete(e.targetId))).next((() => this.pn(t))).next((e => (U(e.targetCount > 0), \n        e.targetCount -= 1, this.In(t, e))));\n    }\n    /**\n     * Drops any targets with sequence number less than or equal to the upper bound, excepting those\n     * present in `activeTargetIds`. Document associations for the removed targets are also removed.\n     * Returns the number of targets removed.\n     */    removeTargets(t, e, n) {\n        let s = 0;\n        const i = [];\n        return Vr(t).Wt(((r, o) => {\n            const u = Ui(o);\n            u.sequenceNumber <= e && null === n.get(u.targetId) && (s++, i.push(this.removeTargetData(t, u)));\n        })).next((() => yi.waitFor(i))).next((() => s));\n    }\n    /**\n     * Call provided function with each `TargetData` that we have cached.\n     */    forEachTarget(t, e) {\n        return Vr(t).Wt(((t, n) => {\n            const s = Ui(n);\n            e(s);\n        }));\n    }\n    pn(t) {\n        return vr(t).get(\"targetGlobalKey\").next((t => (U(null !== t), t)));\n    }\n    In(t, e) {\n        return vr(t).put(\"targetGlobalKey\", e);\n    }\n    Tn(t, e) {\n        return Vr(t).put(qi(this.M, e));\n    }\n    /**\n     * In-place updates the provided metadata to account for values in the given\n     * TargetData. Saving is done separately. Returns true if there were any\n     * changes to the metadata.\n     */    En(t, e) {\n        let n = !1;\n        return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), \n        t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, \n        n = !0), n;\n    }\n    getTargetCount(t) {\n        return this.pn(t).next((t => t.targetCount));\n    }\n    getTargetData(t, e) {\n        // Iterating by the canonicalId may yield more than one result because\n        // canonicalId values are not required to be unique per target. This query\n        // depends on the queryTargets index to be efficient.\n        const n = Ie(e), s = IDBKeyRange.bound([ n, Number.NEGATIVE_INFINITY ], [ n, Number.POSITIVE_INFINITY ]);\n        let i = null;\n        return Vr(t).Wt({\n            range: s,\n            index: \"queryTargetsIndex\"\n        }, ((t, n, s) => {\n            const r = Ui(n);\n            // After finding a potential match, check that the target is\n            // actually equal to the requested target.\n                        Ee(e, r.target) && (i = r, s.done());\n        })).next((() => i));\n    }\n    addMatchingKeys(t, e, n) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        const s = [], i = Sr(t);\n        return e.forEach((e => {\n            const r = Gs(e.path);\n            s.push(i.put({\n                targetId: n,\n                path: r\n            })), s.push(this.referenceDelegate.addReference(t, n, e));\n        })), yi.waitFor(s);\n    }\n    removeMatchingKeys(t, e, n) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        const s = Sr(t);\n        return yi.forEach(e, (e => {\n            const i = Gs(e.path);\n            return yi.waitFor([ s.delete([ n, i ]), this.referenceDelegate.removeReference(t, n, e) ]);\n        }));\n    }\n    removeMatchingKeysForTargetId(t, e) {\n        const n = Sr(t), s = IDBKeyRange.bound([ e ], [ e + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        return n.delete(s);\n    }\n    getMatchingKeysForTargetId(t, e) {\n        const n = IDBKeyRange.bound([ e ], [ e + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0), s = Sr(t);\n        let i = Yn();\n        return s.Wt({\n            range: n,\n            jt: !0\n        }, ((t, e, n) => {\n            const s = Ws(t[1]), r = new xt(s);\n            i = i.add(r);\n        })).next((() => i));\n    }\n    containsKey(t, e) {\n        const n = Gs(e.path), s = IDBKeyRange.bound([ n ], [ ut(n) ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        let i = 0;\n        return Sr(t).Wt({\n            index: \"documentTargetsIndex\",\n            jt: !0,\n            range: s\n        }, (([t, e], n, s) => {\n            // Having a sentinel row for a document does not count as containing that document;\n            // For the target cache, containing the document means the document is part of some\n            // target.\n            0 !== t && (i++, s.done());\n        })).next((() => i > 0));\n    }\n    /**\n     * Looks up a TargetData entry by target ID.\n     *\n     * @param targetId - The target ID of the TargetData entry to look up.\n     * @returns The cached TargetData entry, or null if the cache has no entry for\n     * the target.\n     */\n    // PORTING NOTE: Multi-tab only.\n    Et(t, e) {\n        return Vr(t).get(e).next((t => t ? Ui(t) : null));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the queries object store.\n */ function Vr(t) {\n    return Si(t, \"targets\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the target globals object store.\n */ function vr(t) {\n    return Si(t, \"targetGlobal\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the document target object store.\n */ function Sr(t) {\n    return Si(t, \"targetDocuments\");\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\n * operation fails because the primary lease has been taken by another client,\n * we ignore the error (the persistence layer will immediately call\n * `applyPrimaryLease` to propagate the primary state change). All other errors\n * are re-thrown.\n *\n * @param err - An error returned by a LocalStore operation.\n * @returns A Promise that resolves after we recovered, or the original error.\n */ async function Dr(t) {\n    if (t.code !== G.FAILED_PRECONDITION || t.message !== mi) throw t;\n    O(\"LocalStore\", \"Unexpectedly lost primary lease\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Cr([t, e], [n, s]) {\n    const i = rt(t, n);\n    return 0 === i ? rt(e, s) : i;\n}\n\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */ class xr {\n    constructor(t) {\n        this.An = t, this.buffer = new we(Cr), this.Rn = 0;\n    }\n    bn() {\n        return ++this.Rn;\n    }\n    Pn(t) {\n        const e = [ t, this.bn() ];\n        if (this.buffer.size < this.An) this.buffer = this.buffer.add(e); else {\n            const t = this.buffer.last();\n            Cr(e, t) < 0 && (this.buffer = this.buffer.delete(t).add(e));\n        }\n    }\n    get maxValue() {\n        // Guaranteed to be non-empty. If we decide we are not collecting any\n        // sequence numbers, nthSequenceNumber below short-circuits. If we have\n        // decided that we are collecting n sequence numbers, it's because n is some\n        // percentage of the existing sequence numbers. That means we should never\n        // be in a situation where we are collecting sequence numbers but don't\n        // actually have any.\n        return this.buffer.last()[0];\n    }\n}\n\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */ class Nr {\n    constructor(t, e) {\n        this.garbageCollector = t, this.asyncQueue = e, this.Vn = !1, this.vn = null;\n    }\n    start(t) {\n        -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold && this.Sn(t);\n    }\n    stop() {\n        this.vn && (this.vn.cancel(), this.vn = null);\n    }\n    get started() {\n        return null !== this.vn;\n    }\n    Sn(t) {\n        const e = this.Vn ? 3e5 : 6e4;\n        O(\"LruGarbageCollector\", `Garbage collection scheduled in ${e}ms`), this.vn = this.asyncQueue.enqueueAfterDelay(\"lru_garbage_collection\" /* LruGarbageCollection */ , e, (async () => {\n            this.vn = null, this.Vn = !0;\n            try {\n                await t.collectGarbage(this.garbageCollector);\n            } catch (t) {\n                Ai(t) ? O(\"LruGarbageCollector\", \"Ignoring IndexedDB error during garbage collection: \", t) : await Dr(t);\n            }\n            await this.Sn(t);\n        }));\n    }\n}\n\n/** Implements the steps for LRU garbage collection. */ class kr {\n    constructor(t, e) {\n        this.Dn = t, this.params = e;\n    }\n    calculateTargetCount(t, e) {\n        return this.Dn.Cn(t).next((t => Math.floor(e / 100 * t)));\n    }\n    nthSequenceNumber(t, e) {\n        if (0 === e) return yi.resolve(nt.A);\n        const n = new xr(e);\n        return this.Dn.forEachTarget(t, (t => n.Pn(t.sequenceNumber))).next((() => this.Dn.xn(t, (t => n.Pn(t))))).next((() => n.maxValue));\n    }\n    removeTargets(t, e, n) {\n        return this.Dn.removeTargets(t, e, n);\n    }\n    removeOrphanedDocuments(t, e) {\n        return this.Dn.removeOrphanedDocuments(t, e);\n    }\n    collect(t, e) {\n        return -1 === this.params.cacheSizeCollectionThreshold ? (O(\"LruGarbageCollector\", \"Garbage collection skipped; disabled\"), \n        yi.resolve(mr)) : this.getCacheSize(t).next((n => n < this.params.cacheSizeCollectionThreshold ? (O(\"LruGarbageCollector\", `Garbage collection skipped; Cache size ${n} is lower than threshold ${this.params.cacheSizeCollectionThreshold}`), \n        mr) : this.Nn(t, e)));\n    }\n    getCacheSize(t) {\n        return this.Dn.getCacheSize(t);\n    }\n    Nn(t, e) {\n        let n, s, i, r, o, a, c;\n        const h = Date.now();\n        return this.calculateTargetCount(t, this.params.percentileToCollect).next((e => (\n        // Cap at the configured max\n        e > this.params.maximumSequenceNumbersToCollect ? (O(\"LruGarbageCollector\", `Capping sequence numbers to collect down to the maximum of ${this.params.maximumSequenceNumbersToCollect} from ${e}`), \n        s = this.params.maximumSequenceNumbersToCollect) : s = e, r = Date.now(), this.nthSequenceNumber(t, s)))).next((s => (n = s, \n        o = Date.now(), this.removeTargets(t, n, e)))).next((e => (i = e, a = Date.now(), \n        this.removeOrphanedDocuments(t, n)))).next((t => {\n            if (c = Date.now(), k() <= LogLevel.DEBUG) {\n                O(\"LruGarbageCollector\", `LRU Garbage Collection\\n\\tCounted targets in ${r - h}ms\\n\\tDetermined least recently used ${s} in ` + (o - r) + \"ms\\n\" + `\\tRemoved ${i} targets in ` + (a - o) + \"ms\\n\" + `\\tRemoved ${t} documents in ` + (c - a) + \"ms\\n\" + `Total Duration: ${c - h}ms`);\n            }\n            return yi.resolve({\n                didRun: !0,\n                sequenceNumbersCollected: s,\n                targetsRemoved: i,\n                documentsRemoved: t\n            });\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Provides LRU functionality for IndexedDB persistence. */\nclass Mr {\n    constructor(t, e) {\n        this.db = t, this.garbageCollector = function(t, e) {\n            return new kr(t, e);\n        }(this, e);\n    }\n    Cn(t) {\n        const e = this.kn(t);\n        return this.db.getTargetCache().getTargetCount(t).next((t => e.next((e => t + e))));\n    }\n    kn(t) {\n        let e = 0;\n        return this.xn(t, (t => {\n            e++;\n        })).next((() => e));\n    }\n    forEachTarget(t, e) {\n        return this.db.getTargetCache().forEachTarget(t, e);\n    }\n    xn(t, e) {\n        return this.Mn(t, ((t, n) => e(n)));\n    }\n    addReference(t, e, n) {\n        return Or(t, n);\n    }\n    removeReference(t, e, n) {\n        return Or(t, n);\n    }\n    removeTargets(t, e, n) {\n        return this.db.getTargetCache().removeTargets(t, e, n);\n    }\n    markPotentiallyOrphaned(t, e) {\n        return Or(t, e);\n    }\n    /**\n     * Returns true if anything would prevent this document from being garbage\n     * collected, given that the document in question is not present in any\n     * targets and has a sequence number less than or equal to the upper bound for\n     * the collection run.\n     */    On(t, e) {\n        return function(t, e) {\n            let n = !1;\n            return Rr(t).zt((s => Tr(t, s, e).next((t => (t && (n = !0), yi.resolve(!t)))))).next((() => n));\n        }(t, e);\n    }\n    removeOrphanedDocuments(t, e) {\n        const n = this.db.getRemoteDocumentCache().newChangeBuffer(), s = [];\n        let i = 0;\n        return this.Mn(t, ((r, o) => {\n            if (o <= e) {\n                const e = this.On(t, r).next((e => {\n                    if (!e) \n                    // Our size accounting requires us to read all documents before\n                    // removing them.\n                    return i++, n.getEntry(t, r).next((() => (n.removeEntry(r, ct.min()), Sr(t).delete([ 0, Gs(r.path) ]))));\n                }));\n                s.push(e);\n            }\n        })).next((() => yi.waitFor(s))).next((() => n.apply(t))).next((() => i));\n    }\n    removeTarget(t, e) {\n        const n = e.withSequenceNumber(t.currentSequenceNumber);\n        return this.db.getTargetCache().updateTargetData(t, n);\n    }\n    updateLimboDocument(t, e) {\n        return Or(t, e);\n    }\n    /**\n     * Call provided function for each document in the cache that is 'orphaned'. Orphaned\n     * means not a part of any target, so the only entry in the target-document index for\n     * that document will be the sentinel row (targetId 0), which will also have the sequence\n     * number for the last time the document was accessed.\n     */    Mn(t, e) {\n        const n = Sr(t);\n        let s, i = nt.A;\n        return n.Wt({\n            index: \"documentTargetsIndex\"\n        }, (([t, n], {path: r, sequenceNumber: o}) => {\n            0 === t ? (\n            // if nextToReport is valid, report it, this is a new key so the\n            // last one must not be a member of any targets.\n            i !== nt.A && e(new xt(Ws(s)), i), \n            // set nextToReport to be this sequence number. It's the next one we\n            // might report, if we don't find any targets for this document.\n            // Note that the sequence number must be defined when the targetId\n            // is 0.\n            i = o, s = r) : \n            // set nextToReport to be invalid, we know we don't need to report\n            // this one since we found a target for it.\n            i = nt.A;\n        })).next((() => {\n            // Since we report sequence numbers after getting to the next key, we\n            // need to check if the last key we iterated over was an orphaned\n            // document and report it.\n            i !== nt.A && e(new xt(Ws(s)), i);\n        }));\n    }\n    getCacheSize(t) {\n        return this.db.getRemoteDocumentCache().getSize(t);\n    }\n}\n\nfunction Or(t, e) {\n    return Sr(t).put(\n    /**\n * @returns A value suitable for writing a sentinel row in the target-document\n * store.\n */\n    function(t, e) {\n        return {\n            targetId: 0,\n            path: Gs(t.path),\n            sequenceNumber: e\n        };\n    }(e, t.currentSequenceNumber));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * Entries added to the cache *must* be read first. This is to facilitate\n * calculating the size delta of the pending changes.\n *\n * PORTING NOTE: This class was implemented then removed from other platforms.\n * If byte-counting ends up being needed on the other platforms, consider\n * porting this class as part of that implementation work.\n */ class Fr {\n    constructor() {\n        // A mapping of document key to the new cache entry that should be written.\n        this.changes = new Kn((t => t.toString()), ((t, e) => t.isEqual(e))), this.changesApplied = !1;\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.addEntry()` call.\n     *\n     * You can only modify documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */    addEntry(t) {\n        this.assertNotApplied(), this.changes.set(t.key, t);\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.removeEntry()` call.\n     *\n     * You can only remove documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */    removeEntry(t, e) {\n        this.assertNotApplied(), this.changes.set(t, ne.newInvalidDocument(t).setReadTime(e));\n    }\n    /**\n     * Looks up an entry in the cache. The buffered changes will first be checked,\n     * and if no buffered change applies, this will forward to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document or an invalid document if we have nothing\n     * cached.\n     */    getEntry(t, e) {\n        this.assertNotApplied();\n        const n = this.changes.get(e);\n        return void 0 !== n ? yi.resolve(n) : this.getFromCache(t, e);\n    }\n    /**\n     * Looks up several entries in the cache, forwarding to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKeys - The keys of the entries to look up.\n     * @returns A map of cached documents, indexed by key. If an entry cannot be\n     *     found, the corresponding key will be mapped to an invalid document.\n     */    getEntries(t, e) {\n        return this.getAllFromCache(t, e);\n    }\n    /**\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\n     * the provided transaction.\n     */    apply(t) {\n        return this.assertNotApplied(), this.changesApplied = !0, this.applyChanges(t);\n    }\n    /** Helper to assert this.changes is not null  */    assertNotApplied() {}\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newIndexedDbRemoteDocumentCache()`.\n */ class $r {\n    constructor(t) {\n        this.M = t;\n    }\n    setIndexManager(t) {\n        this.indexManager = t;\n    }\n    /**\n     * Adds the supplied entries to the cache.\n     *\n     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */    addEntry(t, e, n) {\n        return Ur(t).put(n);\n    }\n    /**\n     * Removes a document from the cache.\n     *\n     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */    removeEntry(t, e, n) {\n        return Ur(t).delete(\n        /**\n * Returns a key that can be used for document lookups via the primary key of\n * the DbRemoteDocument object store.\n */\n        function(t, e) {\n            const n = t.path.toArray();\n            return [ \n            /* prefix path */ n.slice(0, n.length - 2), \n            /* collection id */ n[n.length - 2], Fi(e), \n            /* document id */ n[n.length - 1] ];\n        }\n        /**\n * Returns a key that can be used for document lookups on the\n * `DbRemoteDocumentDocumentCollectionGroupIndex` index.\n */ (e, n));\n    }\n    /**\n     * Updates the current cache size.\n     *\n     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the\n     * cache's metadata.\n     */    updateMetadata(t, e) {\n        return this.getMetadata(t).next((n => (n.byteSize += e, this.Fn(t, n))));\n    }\n    getEntry(t, e) {\n        let n = ne.newInvalidDocument(e);\n        return Ur(t).Wt({\n            index: \"documentKeyIndex\",\n            range: IDBKeyRange.only(qr(e))\n        }, ((t, s) => {\n            n = this.$n(e, s);\n        })).next((() => n));\n    }\n    /**\n     * Looks up an entry in the cache.\n     *\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document entry and its size.\n     */    Bn(t, e) {\n        let n = {\n            size: 0,\n            document: ne.newInvalidDocument(e)\n        };\n        return Ur(t).Wt({\n            index: \"documentKeyIndex\",\n            range: IDBKeyRange.only(qr(e))\n        }, ((t, s) => {\n            n = {\n                document: this.$n(e, s),\n                size: pr(s)\n            };\n        })).next((() => n));\n    }\n    getEntries(t, e) {\n        let n = Qn();\n        return this.Ln(t, e, ((t, e) => {\n            const s = this.$n(t, e);\n            n = n.insert(t, s);\n        })).next((() => n));\n    }\n    /**\n     * Looks up several entries in the cache.\n     *\n     * @param documentKeys - The set of keys entries to look up.\n     * @returns A map of documents indexed by key and a map of sizes indexed by\n     *     key (zero if the document does not exist).\n     */    Un(t, e) {\n        let n = Qn(), s = new fe(xt.comparator);\n        return this.Ln(t, e, ((t, e) => {\n            const i = this.$n(t, e);\n            n = n.insert(t, i), s = s.insert(t, pr(e));\n        })).next((() => ({\n            documents: n,\n            qn: s\n        })));\n    }\n    Ln(t, e, n) {\n        if (e.isEmpty()) return yi.resolve();\n        let s = new we(Gr);\n        e.forEach((t => s = s.add(t)));\n        const i = IDBKeyRange.bound(qr(s.first()), qr(s.last())), r = s.getIterator();\n        let o = r.getNext();\n        return Ur(t).Wt({\n            index: \"documentKeyIndex\",\n            range: i\n        }, ((t, e, s) => {\n            const i = xt.fromSegments([ ...e.prefixPath, e.collectionGroup, e.documentId ]);\n            // Go through keys not found in cache.\n                        for (;o && Gr(o, i) < 0; ) n(o, null), o = r.getNext();\n            o && o.isEqual(i) && (\n            // Key found in cache.\n            n(o, e), o = r.hasNext() ? r.getNext() : null), \n            // Skip to the next key (if there is one).\n            o ? s.Ut(qr(o)) : s.done();\n        })).next((() => {\n            // The rest of the keys are not in the cache. One case where `iterate`\n            // above won't go through them is when the cache is empty.\n            for (;o; ) n(o, null), o = r.hasNext() ? r.getNext() : null;\n        }));\n    }\n    getAllFromCollection(t, e, n) {\n        const s = [ e.popLast().toArray(), e.lastSegment(), Fi(n.readTime), n.documentKey.path.isEmpty() ? \"\" : n.documentKey.path.lastSegment() ], i = [ e.popLast().toArray(), e.lastSegment(), [ Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER ], \"\" ];\n        return Ur(t).qt(IDBKeyRange.bound(s, i, !0)).next((t => {\n            let e = Qn();\n            for (const n of t) {\n                const t = this.$n(xt.fromSegments(n.prefixPath.concat(n.collectionGroup, n.documentId)), n);\n                e = e.insert(t.key, t);\n            }\n            return e;\n        }));\n    }\n    getAllFromCollectionGroup(t, e, n, s) {\n        let i = Qn();\n        const r = Kr(e, n), o = Kr(e, he.max());\n        return Ur(t).Wt({\n            index: \"collectionGroupIndex\",\n            range: IDBKeyRange.bound(r, o, !0)\n        }, ((t, e, n) => {\n            const r = this.$n(xt.fromSegments(e.prefixPath.concat(e.collectionGroup, e.documentId)), e);\n            i = i.insert(r.key, r), i.size === s && n.done();\n        })).next((() => i));\n    }\n    newChangeBuffer(t) {\n        return new Br(this, !!t && t.trackRemovals);\n    }\n    getSize(t) {\n        return this.getMetadata(t).next((t => t.byteSize));\n    }\n    getMetadata(t) {\n        return Lr(t).get(\"remoteDocumentGlobalKey\").next((t => (U(!!t), t)));\n    }\n    Fn(t, e) {\n        return Lr(t).put(\"remoteDocumentGlobalKey\", e);\n    }\n    /**\n     * Decodes `dbRemoteDoc` and returns the document (or an invalid document if\n     * the document corresponds to the format used for sentinel deletes).\n     */    $n(t, e) {\n        if (e) {\n            const t = Mi(this.M, e);\n            // Whether the document is a sentinel removal and should only be used in the\n            // `getNewDocumentChanges()`\n                        if (!(t.isNoDocument() && t.version.isEqual(ct.min()))) return t;\n        }\n        return ne.newInvalidDocument(t);\n    }\n}\n\n/** Creates a new IndexedDbRemoteDocumentCache. */\n/**\n * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.\n *\n * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size\n * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb\n * when we apply the changes.\n */\nclass Br extends Fr {\n    /**\n     * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.\n     * @param trackRemovals - Whether to create sentinel deletes that can be tracked by\n     * `getNewDocumentChanges()`.\n     */\n    constructor(t, e) {\n        super(), this.Kn = t, this.trackRemovals = e, \n        // A map of document sizes and read times prior to applying the changes in\n        // this buffer.\n        this.Gn = new Kn((t => t.toString()), ((t, e) => t.isEqual(e)));\n    }\n    applyChanges(t) {\n        const e = [];\n        let n = 0, s = new we(((t, e) => rt(t.canonicalString(), e.canonicalString())));\n        return this.changes.forEach(((i, r) => {\n            const o = this.Gn.get(i);\n            if (e.push(this.Kn.removeEntry(t, i, o.readTime)), r.isValidDocument()) {\n                const u = Oi(this.Kn.M, r);\n                s = s.add(i.path.popLast());\n                const a = pr(u);\n                n += a - o.size, e.push(this.Kn.addEntry(t, i, u));\n            } else if (n -= o.size, this.trackRemovals) {\n                // In order to track removals, we store a \"sentinel delete\" in the\n                // RemoteDocumentCache. This entry is represented by a NoDocument\n                // with a version of 0 and ignored by `maybeDecodeDocument()` but\n                // preserved in `getNewDocumentChanges()`.\n                const n = Oi(this.Kn.M, r.convertToNoDocument(ct.min()));\n                e.push(this.Kn.addEntry(t, i, n));\n            }\n        })), s.forEach((n => {\n            e.push(this.Kn.indexManager.addToCollectionParentIndex(t, n));\n        })), e.push(this.Kn.updateMetadata(t, n)), yi.waitFor(e);\n    }\n    getFromCache(t, e) {\n        // Record the size of everything we load from the cache so we can compute a delta later.\n        return this.Kn.Bn(t, e).next((t => (this.Gn.set(e, {\n            size: t.size,\n            readTime: t.document.readTime\n        }), t.document)));\n    }\n    getAllFromCache(t, e) {\n        // Record the size of everything we load from the cache so we can compute\n        // a delta later.\n        return this.Kn.Un(t, e).next((({documents: t, qn: e}) => (\n        // Note: `getAllFromCache` returns two maps instead of a single map from\n        // keys to `DocumentSizeEntry`s. This is to allow returning the\n        // `MutableDocumentMap` directly, without a conversion.\n        e.forEach(((e, n) => {\n            this.Gn.set(e, {\n                size: n,\n                readTime: t.get(e).readTime\n            });\n        })), t)));\n    }\n}\n\nfunction Lr(t) {\n    return Si(t, \"remoteDocumentGlobal\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */ function Ur(t) {\n    return Si(t, \"remoteDocumentsV14\");\n}\n\n/**\n * Returns a key that can be used for document lookups on the\n * `DbRemoteDocumentDocumentKeyIndex` index.\n */ function qr(t) {\n    const e = t.path.toArray();\n    return [ \n    /* prefix path */ e.slice(0, e.length - 2), \n    /* collection id */ e[e.length - 2], \n    /* document id */ e[e.length - 1] ];\n}\n\nfunction Kr(t, e) {\n    const n = e.documentKey.path.toArray();\n    return [ \n    /* collection id */ t, Fi(e.readTime), \n    /* prefix path */ n.slice(0, n.length - 2), \n    /* document id */ n.length > 0 ? n[n.length - 1] : \"\" ];\n}\n\n/**\n * Comparator that compares document keys according to the primary key sorting\n * used by the `DbRemoteDocumentDocument` store (by prefix path, collection id\n * and then document ID).\n *\n * Visible for testing.\n */ function Gr(t, e) {\n    const n = t.path.toArray(), s = e.path.toArray();\n    // The ordering is based on https://chromium.googlesource.com/chromium/blink/+/fe5c21fef94dae71c1c3344775b8d8a7f7e6d9ec/Source/modules/indexeddb/IDBKey.cpp#74\n    let i = 0;\n    for (let t = 0; t < n.length - 2 && t < s.length - 2; ++t) if (i = rt(n[t], s[t]), \n    i) return i;\n    return i = rt(n.length, s.length), i || (i = rt(n[n.length - 2], s[s.length - 2]), \n    i || rt(n[n.length - 1], s[s.length - 1]));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(indexing): Remove this constant\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Performs database creation and schema upgrades. */\nclass Qr {\n    constructor(t) {\n        this.M = t;\n    }\n    /**\n     * Performs database creation and schema upgrades.\n     *\n     * Note that in production, this method is only ever used to upgrade the schema\n     * to SCHEMA_VERSION. Different values of toVersion are only used for testing\n     * and local feature development.\n     */    kt(t, e, n, s) {\n        const i = new pi(\"createOrUpgrade\", e);\n        n < 1 && s >= 1 && (function(t) {\n            t.createObjectStore(\"owner\");\n        }(t), function(t) {\n            t.createObjectStore(\"mutationQueues\", {\n                keyPath: \"userId\"\n            });\n            t.createObjectStore(\"mutations\", {\n                keyPath: \"batchId\",\n                autoIncrement: !0\n            }).createIndex(\"userMutationsIndex\", zs, {\n                unique: !0\n            }), t.createObjectStore(\"documentMutations\");\n        }\n        /**\n * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads\n * and rewrites all data.\n */ (t), jr(t), function(t) {\n            t.createObjectStore(\"remoteDocuments\");\n        }(t));\n        // Migration 2 to populate the targetGlobal object no longer needed since\n        // migration 3 unconditionally clears it.\n                let r = yi.resolve();\n        return n < 3 && s >= 3 && (\n        // Brand new clients don't need to drop and recreate--only clients that\n        // potentially have corrupt data.\n        0 !== n && (!function(t) {\n            t.deleteObjectStore(\"targetDocuments\"), t.deleteObjectStore(\"targets\"), t.deleteObjectStore(\"targetGlobal\");\n        }(t), jr(t)), r = r.next((() => \n        /**\n * Creates the target global singleton row.\n *\n * @param txn - The version upgrade transaction for indexeddb\n */\n        function(t) {\n            const e = t.store(\"targetGlobal\"), n = {\n                highestTargetId: 0,\n                highestListenSequenceNumber: 0,\n                lastRemoteSnapshotVersion: ct.min().toTimestamp(),\n                targetCount: 0\n            };\n            return e.put(\"targetGlobalKey\", n);\n        }(i)))), n < 4 && s >= 4 && (0 !== n && (\n        // Schema version 3 uses auto-generated keys to generate globally unique\n        // mutation batch IDs (this was previously ensured internally by the\n        // client). To migrate to the new schema, we have to read all mutations\n        // and write them back out. We preserve the existing batch IDs to guarantee\n        // consistency with other object stores. Any further mutation batch IDs will\n        // be auto-generated.\n        r = r.next((() => function(t, e) {\n            return e.store(\"mutations\").qt().next((n => {\n                t.deleteObjectStore(\"mutations\");\n                t.createObjectStore(\"mutations\", {\n                    keyPath: \"batchId\",\n                    autoIncrement: !0\n                }).createIndex(\"userMutationsIndex\", zs, {\n                    unique: !0\n                });\n                const s = e.store(\"mutations\"), i = n.map((t => s.put(t)));\n                return yi.waitFor(i);\n            }));\n        }(t, i)))), r = r.next((() => {\n            !function(t) {\n                t.createObjectStore(\"clientMetadata\", {\n                    keyPath: \"clientId\"\n                });\n            }(t);\n        }))), n < 5 && s >= 5 && (r = r.next((() => this.Qn(i)))), n < 6 && s >= 6 && (r = r.next((() => (function(t) {\n            t.createObjectStore(\"remoteDocumentGlobal\");\n        }(t), this.jn(i))))), n < 7 && s >= 7 && (r = r.next((() => this.Wn(i)))), n < 8 && s >= 8 && (r = r.next((() => this.zn(t, i)))), \n        n < 9 && s >= 9 && (r = r.next((() => {\n            // Multi-Tab used to manage its own changelog, but this has been moved\n            // to the DbRemoteDocument object store itself. Since the previous change\n            // log only contained transient data, we can drop its object store.\n            !function(t) {\n                t.objectStoreNames.contains(\"remoteDocumentChanges\") && t.deleteObjectStore(\"remoteDocumentChanges\");\n            }(t);\n            // Note: Schema version 9 used to create a read time index for the\n            // RemoteDocumentCache. This is now done with schema version 13.\n                }))), n < 10 && s >= 10 && (r = r.next((() => this.Hn(i)))), n < 11 && s >= 11 && (r = r.next((() => {\n            !function(t) {\n                t.createObjectStore(\"bundles\", {\n                    keyPath: \"bundleId\"\n                });\n            }(t), function(t) {\n                t.createObjectStore(\"namedQueries\", {\n                    keyPath: \"name\"\n                });\n            }(t);\n        }))), n < 12 && s >= 12 && (r = r.next((() => {\n            !function(t) {\n                const e = t.createObjectStore(\"documentOverlays\", {\n                    keyPath: ci\n                });\n                e.createIndex(\"collectionPathOverlayIndex\", hi, {\n                    unique: !1\n                }), e.createIndex(\"collectionGroupOverlayIndex\", li, {\n                    unique: !1\n                });\n            }(t);\n        }))), n < 13 && s >= 13 && (r = r.next((() => function(t) {\n            const e = t.createObjectStore(\"remoteDocumentsV14\", {\n                keyPath: Xs\n            });\n            e.createIndex(\"documentKeyIndex\", Zs), e.createIndex(\"collectionGroupIndex\", ti);\n        }(t))).next((() => this.Jn(t, i))).next((() => t.deleteObjectStore(\"remoteDocuments\")))), \n        n < 14 && s >= 14 && (r = r.next((() => {\n            !function(t) {\n                t.createObjectStore(\"indexConfiguration\", {\n                    keyPath: \"indexId\",\n                    autoIncrement: !0\n                }).createIndex(\"collectionGroupIndex\", \"collectionGroup\", {\n                    unique: !1\n                });\n                t.createObjectStore(\"indexState\", {\n                    keyPath: ri\n                }).createIndex(\"sequenceNumberIndex\", oi, {\n                    unique: !1\n                });\n                t.createObjectStore(\"indexEntries\", {\n                    keyPath: ui\n                }).createIndex(\"documentKeyIndex\", ai, {\n                    unique: !1\n                });\n            }(t);\n        }))), r;\n    }\n    jn(t) {\n        let e = 0;\n        return t.store(\"remoteDocuments\").Wt(((t, n) => {\n            e += pr(n);\n        })).next((() => {\n            const n = {\n                byteSize: e\n            };\n            return t.store(\"remoteDocumentGlobal\").put(\"remoteDocumentGlobalKey\", n);\n        }));\n    }\n    Qn(t) {\n        const e = t.store(\"mutationQueues\"), n = t.store(\"mutations\");\n        return e.qt().next((e => yi.forEach(e, (e => {\n            const s = IDBKeyRange.bound([ e.userId, -1 ], [ e.userId, e.lastAcknowledgedBatchId ]);\n            return n.qt(\"userMutationsIndex\", s).next((n => yi.forEach(n, (n => {\n                U(n.userId === e.userId);\n                const s = Li(this.M, n);\n                return yr(t, e.userId, s).next((() => {}));\n            }))));\n        }))));\n    }\n    /**\n     * Ensures that every document in the remote document cache has a corresponding sentinel row\n     * with a sequence number. Missing rows are given the most recently used sequence number.\n     */    Wn(t) {\n        const e = t.store(\"targetDocuments\"), n = t.store(\"remoteDocuments\");\n        return t.store(\"targetGlobal\").get(\"targetGlobalKey\").next((t => {\n            const s = [];\n            return n.Wt(((n, i) => {\n                const r = new _t(n), o = function(t) {\n                    return [ 0, Gs(t) ];\n                }(r);\n                s.push(e.get(o).next((n => n ? yi.resolve() : (n => e.put({\n                    targetId: 0,\n                    path: Gs(n),\n                    sequenceNumber: t.highestListenSequenceNumber\n                }))(r))));\n            })).next((() => yi.waitFor(s)));\n        }));\n    }\n    zn(t, e) {\n        // Create the index.\n        t.createObjectStore(\"collectionParents\", {\n            keyPath: ii\n        });\n        const n = e.store(\"collectionParents\"), s = new cr, i = t => {\n            if (s.add(t)) {\n                const e = t.lastSegment(), s = t.popLast();\n                return n.put({\n                    collectionId: e,\n                    parent: Gs(s)\n                });\n            }\n        };\n        // Helper to add an index entry iff we haven't already written it.\n                // Index existing remote documents.\n        return e.store(\"remoteDocuments\").Wt({\n            jt: !0\n        }, ((t, e) => {\n            const n = new _t(t);\n            return i(n.popLast());\n        })).next((() => e.store(\"documentMutations\").Wt({\n            jt: !0\n        }, (([t, e, n], s) => {\n            const r = Ws(e);\n            return i(r.popLast());\n        }))));\n    }\n    Hn(t) {\n        const e = t.store(\"targets\");\n        return e.Wt(((t, n) => {\n            const s = Ui(n), i = qi(this.M, s);\n            return e.put(i);\n        }));\n    }\n    Jn(t, e) {\n        const n = e.store(\"remoteDocuments\"), s = [];\n        return n.Wt(((t, n) => {\n            const i = e.store(\"remoteDocumentsV14\"), r = (o = n, o.document ? new xt(_t.fromString(o.document.name).popFirst(5)) : o.noDocument ? xt.fromSegments(o.noDocument.path) : o.unknownDocument ? xt.fromSegments(o.unknownDocument.path) : L()).path.toArray();\n            var o;\n            /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */            const u = {\n                prefixPath: r.slice(0, r.length - 2),\n                collectionGroup: r[r.length - 2],\n                documentId: r[r.length - 1],\n                readTime: n.readTime || [ 0, 0 ],\n                unknownDocument: n.unknownDocument,\n                noDocument: n.noDocument,\n                document: n.document,\n                hasCommittedMutations: !!n.hasCommittedMutations\n            };\n            s.push(i.put(u));\n        })).next((() => yi.waitFor(s)));\n    }\n}\n\nfunction jr(t) {\n    t.createObjectStore(\"targetDocuments\", {\n        keyPath: ni\n    }).createIndex(\"documentTargetsIndex\", si, {\n        unique: !0\n    });\n    // NOTE: This is unique only because the TargetId is the suffix.\n    t.createObjectStore(\"targets\", {\n        keyPath: \"targetId\"\n    }).createIndex(\"queryTargetsIndex\", ei, {\n        unique: !0\n    }), t.createObjectStore(\"targetGlobal\");\n}\n\nconst Wr = \"Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.\";\n\n/**\n * Oldest acceptable age in milliseconds for client metadata before the client\n * is considered inactive and its associated data is garbage collected.\n */\n/**\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\n * across sessions.\n *\n * On Web only, the Firestore SDKs support shared access to its persistence\n * layer. This allows multiple browser tabs to read and write to IndexedDb and\n * to synchronize state even without network connectivity. Shared access is\n * currently optional and not enabled unless all clients invoke\n * `enablePersistence()` with `{synchronizeTabs:true}`.\n *\n * In multi-tab mode, if multiple clients are active at the same time, the SDK\n * will designate one client as the “primary client”. An effort is made to pick\n * a visible, network-connected and active client, and this client is\n * responsible for letting other clients know about its presence. The primary\n * client writes a unique client-generated identifier (the client ID) to\n * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to\n * update this entry, another client can acquire the lease and take over as\n * primary.\n *\n * Some persistence operations in the SDK are designated as primary-client only\n * operations. This includes the acknowledgment of mutations and all updates of\n * remote documents. The effects of these operations are written to persistence\n * and then broadcast to other tabs via LocalStorage (see\n * `WebStorageSharedClientState`), which then refresh their state from\n * persistence.\n *\n * Similarly, the primary client listens to notifications sent by secondary\n * clients to discover persistence changes written by secondary clients, such as\n * the addition of new mutations and query targets.\n *\n * If multi-tab is not enabled and another tab already obtained the primary\n * lease, IndexedDbPersistence enters a failed state and all subsequent\n * operations will automatically fail.\n *\n * Additionally, there is an optimization so that when a tab is closed, the\n * primary lease is released immediately (this is especially important to make\n * sure that a refreshed tab is able to immediately re-acquire the primary\n * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload\n * since it is an asynchronous API. So in addition to attempting to give up the\n * lease, the leaseholder writes its client ID to a \"zombiedClient\" entry in\n * LocalStorage which acts as an indicator that another tab should go ahead and\n * take the primary lease immediately regardless of the current lease timestamp.\n *\n * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no\n * longer optional.\n */\nclass zr {\n    constructor(\n    /**\n     * Whether to synchronize the in-memory state of multiple tabs and share\n     * access to local persistence.\n     */\n    t, e, n, s, i, r, o, u, a, \n    /**\n     * If set to true, forcefully obtains database access. Existing tabs will\n     * no longer be able to access IndexedDB.\n     */\n    c, h = 13) {\n        if (this.allowTabSynchronization = t, this.persistenceKey = e, this.clientId = n, \n        this.Yn = i, this.window = r, this.document = o, this.Xn = a, this.Zn = c, this.ts = h, \n        this.es = null, this.ns = !1, this.isPrimary = !1, this.networkEnabled = !0, \n        /** Our window.unload handler, if registered. */\n        this.ss = null, this.inForeground = !1, \n        /** Our 'visibilitychange' listener if registered. */\n        this.rs = null, \n        /** The client metadata refresh task. */\n        this.os = null, \n        /** The last time we garbage collected the client metadata object store. */\n        this.us = Number.NEGATIVE_INFINITY, \n        /** A listener to notify on primary state changes. */\n        this.cs = t => Promise.resolve(), !zr.vt()) throw new Q(G.UNIMPLEMENTED, \"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.\");\n        this.referenceDelegate = new Mr(this, s), this.hs = e + \"main\", this.M = new ki(u), \n        this.ls = new Ii(this.hs, this.ts, new Qr(this.M)), this.fs = new Pr(this.referenceDelegate, this.M), \n        this.ds = function(t) {\n            return new $r(t);\n        }(this.M), this._s = new ji, this.window && this.window.localStorage ? this.ws = this.window.localStorage : (this.ws = null, \n        !1 === c && F(\"IndexedDbPersistence\", \"LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page.\"));\n    }\n    /**\n     * Attempt to start IndexedDb persistence.\n     *\n     * @returns Whether persistence was enabled.\n     */    start() {\n        // NOTE: This is expected to fail sometimes (in the case of another tab\n        // already having the persistence lock), so it's the first thing we should\n        // do.\n        return this.gs().then((() => {\n            if (!this.isPrimary && !this.allowTabSynchronization) \n            // Fail `start()` if `synchronizeTabs` is disabled and we cannot\n            // obtain the primary lease.\n            throw new Q(G.FAILED_PRECONDITION, Wr);\n            return this.ys(), this.ps(), this.Is(), this.runTransaction(\"getHighestListenSequenceNumber\", \"readonly\", (t => this.fs.getHighestSequenceNumber(t)));\n        })).then((t => {\n            this.es = new nt(t, this.Xn);\n        })).then((() => {\n            this.ns = !0;\n        })).catch((t => (this.ls && this.ls.close(), Promise.reject(t))));\n    }\n    /**\n     * Registers a listener that gets called when the primary state of the\n     * instance changes. Upon registering, this listener is invoked immediately\n     * with the current primary state.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    Ts(t) {\n        return this.cs = async e => {\n            if (this.started) return t(e);\n        }, t(this.isPrimary);\n    }\n    /**\n     * Registers a listener that gets called when the database receives a\n     * version change event indicating that it has deleted.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    setDatabaseDeletedListener(t) {\n        this.ls.Ot((async e => {\n            // Check if an attempt is made to delete IndexedDB.\n            null === e.newVersion && await t();\n        }));\n    }\n    /**\n     * Adjusts the current network state in the client's metadata, potentially\n     * affecting the primary lease.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    setNetworkEnabled(t) {\n        this.networkEnabled !== t && (this.networkEnabled = t, \n        // Schedule a primary lease refresh for immediate execution. The eventual\n        // lease update will be propagated via `primaryStateListener`.\n        this.Yn.enqueueAndForget((async () => {\n            this.started && await this.gs();\n        })));\n    }\n    /**\n     * Updates the client metadata in IndexedDb and attempts to either obtain or\n     * extend the primary lease for the local client. Asynchronously notifies the\n     * primary state listener if the client either newly obtained or released its\n     * primary lease.\n     */    gs() {\n        return this.runTransaction(\"updateClientMetadataAndTryBecomePrimary\", \"readwrite\", (t => Jr(t).put({\n            clientId: this.clientId,\n            updateTimeMs: Date.now(),\n            networkEnabled: this.networkEnabled,\n            inForeground: this.inForeground\n        }).next((() => {\n            if (this.isPrimary) return this.Es(t).next((t => {\n                t || (this.isPrimary = !1, this.Yn.enqueueRetryable((() => this.cs(!1))));\n            }));\n        })).next((() => this.As(t))).next((e => this.isPrimary && !e ? this.Rs(t).next((() => !1)) : !!e && this.bs(t).next((() => !0)))))).catch((t => {\n            if (Ai(t)) \n            // Proceed with the existing state. Any subsequent access to\n            // IndexedDB will verify the lease.\n            return O(\"IndexedDbPersistence\", \"Failed to extend owner lease: \", t), this.isPrimary;\n            if (!this.allowTabSynchronization) throw t;\n            return O(\"IndexedDbPersistence\", \"Releasing owner lease after error during lease refresh\", t), \n            /* isPrimary= */ !1;\n        })).then((t => {\n            this.isPrimary !== t && this.Yn.enqueueRetryable((() => this.cs(t))), this.isPrimary = t;\n        }));\n    }\n    Es(t) {\n        return Hr(t).get(\"owner\").next((t => yi.resolve(this.Ps(t))));\n    }\n    Vs(t) {\n        return Jr(t).delete(this.clientId);\n    }\n    /**\n     * If the garbage collection threshold has passed, prunes the\n     * RemoteDocumentChanges and the ClientMetadata store based on the last update\n     * time of all clients.\n     */    async vs() {\n        if (this.isPrimary && !this.Ss(this.us, 18e5)) {\n            this.us = Date.now();\n            const t = await this.runTransaction(\"maybeGarbageCollectMultiClientState\", \"readwrite-primary\", (t => {\n                const e = Si(t, \"clientMetadata\");\n                return e.qt().next((t => {\n                    const n = this.Ds(t, 18e5), s = t.filter((t => -1 === n.indexOf(t)));\n                    // Delete metadata for clients that are no longer considered active.\n                    return yi.forEach(s, (t => e.delete(t.clientId))).next((() => s));\n                }));\n            })).catch((() => []));\n            // Delete potential leftover entries that may continue to mark the\n            // inactive clients as zombied in LocalStorage.\n            // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for\n            // the client atomically, but we can't. So we opt to delete the IndexedDb\n            // entries first to avoid potentially reviving a zombied client.\n                        if (this.ws) for (const e of t) this.ws.removeItem(this.Cs(e.clientId));\n        }\n    }\n    /**\n     * Schedules a recurring timer to update the client metadata and to either\n     * extend or acquire the primary lease if the client is eligible.\n     */    Is() {\n        this.os = this.Yn.enqueueAfterDelay(\"client_metadata_refresh\" /* ClientMetadataRefresh */ , 4e3, (() => this.gs().then((() => this.vs())).then((() => this.Is()))));\n    }\n    /** Checks whether `client` is the local client. */    Ps(t) {\n        return !!t && t.ownerId === this.clientId;\n    }\n    /**\n     * Evaluate the state of all active clients and determine whether the local\n     * client is or can act as the holder of the primary lease. Returns whether\n     * the client is eligible for the lease, but does not actually acquire it.\n     * May return 'false' even if there is no active leaseholder and another\n     * (foreground) client should become leaseholder instead.\n     */    As(t) {\n        if (this.Zn) return yi.resolve(!0);\n        return Hr(t).get(\"owner\").next((e => {\n            // A client is eligible for the primary lease if:\n            // - its network is enabled and the client's tab is in the foreground.\n            // - its network is enabled and no other client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and the client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and no other client's tab is in\n            //   the foreground.\n            // - the `forceOwningTab` setting was passed in.\n            if (null !== e && this.Ss(e.leaseTimestampMs, 5e3) && !this.xs(e.ownerId)) {\n                if (this.Ps(e) && this.networkEnabled) return !0;\n                if (!this.Ps(e)) {\n                    if (!e.allowTabSynchronization) \n                    // Fail the `canActAsPrimary` check if the current leaseholder has\n                    // not opted into multi-tab synchronization. If this happens at\n                    // client startup, we reject the Promise returned by\n                    // `enablePersistence()` and the user can continue to use Firestore\n                    // with in-memory persistence.\n                    // If this fails during a lease refresh, we will instead block the\n                    // AsyncQueue from executing further operations. Note that this is\n                    // acceptable since mixing & matching different `synchronizeTabs`\n                    // settings is not supported.\n                    // TODO(b/114226234): Remove this check when `synchronizeTabs` can\n                    // no longer be turned off.\n                    throw new Q(G.FAILED_PRECONDITION, Wr);\n                    return !1;\n                }\n            }\n            return !(!this.networkEnabled || !this.inForeground) || Jr(t).qt().next((t => void 0 === this.Ds(t, 5e3).find((t => {\n                if (this.clientId !== t.clientId) {\n                    const e = !this.networkEnabled && t.networkEnabled, n = !this.inForeground && t.inForeground, s = this.networkEnabled === t.networkEnabled;\n                    if (e || n && s) return !0;\n                }\n                return !1;\n            }))));\n        })).next((t => (this.isPrimary !== t && O(\"IndexedDbPersistence\", `Client ${t ? \"is\" : \"is not\"} eligible for a primary lease.`), \n        t)));\n    }\n    async shutdown() {\n        // The shutdown() operations are idempotent and can be called even when\n        // start() aborted (e.g. because it couldn't acquire the persistence lease).\n        this.ns = !1, this.Ns(), this.os && (this.os.cancel(), this.os = null), this.ks(), \n        this.Ms(), \n        // Use `SimpleDb.runTransaction` directly to avoid failing if another tab\n        // has obtained the primary lease.\n        await this.ls.runTransaction(\"shutdown\", \"readwrite\", [ \"owner\", \"clientMetadata\" ], (t => {\n            const e = new vi(t, nt.A);\n            return this.Rs(e).next((() => this.Vs(e)));\n        })), this.ls.close(), \n        // Remove the entry marking the client as zombied from LocalStorage since\n        // we successfully deleted its metadata from IndexedDb.\n        this.Os();\n    }\n    /**\n     * Returns clients that are not zombied and have an updateTime within the\n     * provided threshold.\n     */    Ds(t, e) {\n        return t.filter((t => this.Ss(t.updateTimeMs, e) && !this.xs(t.clientId)));\n    }\n    /**\n     * Returns the IDs of the clients that are currently active. If multi-tab\n     * is not supported, returns an array that only contains the local client's\n     * ID.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    Fs() {\n        return this.runTransaction(\"getActiveClients\", \"readonly\", (t => Jr(t).qt().next((t => this.Ds(t, 18e5).map((t => t.clientId))))));\n    }\n    get started() {\n        return this.ns;\n    }\n    getMutationQueue(t, e) {\n        return Ir.Yt(t, this.M, e, this.referenceDelegate);\n    }\n    getTargetCache() {\n        return this.fs;\n    }\n    getRemoteDocumentCache() {\n        return this.ds;\n    }\n    getIndexManager(t) {\n        return new lr(t, this.M.Jt.databaseId);\n    }\n    getDocumentOverlayCache(t) {\n        return Hi.Yt(this.M, t);\n    }\n    getBundleCache() {\n        return this._s;\n    }\n    runTransaction(t, e, n) {\n        O(\"IndexedDbPersistence\", \"Starting transaction:\", t);\n        const s = \"readonly\" === e ? \"readonly\" : \"readwrite\", i = 14 === (r = this.ts) ? wi : 13 === r ? _i : 12 === r ? di : 11 === r ? fi : void L();\n        /** Returns the object stores for the provided schema. */\n        var r;\n        let o;\n        // Do all transactions as readwrite against all object stores, since we\n        // are the only reader/writer.\n                return this.ls.runTransaction(t, s, i, (s => (o = new vi(s, this.es ? this.es.next() : nt.A), \n        \"readwrite-primary\" === e ? this.Es(o).next((t => !!t || this.As(o))).next((e => {\n            if (!e) throw F(`Failed to obtain primary lease for action '${t}'.`), this.isPrimary = !1, \n            this.Yn.enqueueRetryable((() => this.cs(!1))), new Q(G.FAILED_PRECONDITION, mi);\n            return n(o);\n        })).next((t => this.bs(o).next((() => t)))) : this.$s(o).next((() => n(o)))))).then((t => (o.raiseOnCommittedEvent(), \n        t)));\n    }\n    /**\n     * Verifies that the current tab is the primary leaseholder or alternatively\n     * that the leaseholder has opted into multi-tab synchronization.\n     */\n    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer\n    // be turned off.\n    $s(t) {\n        return Hr(t).get(\"owner\").next((t => {\n            if (null !== t && this.Ss(t.leaseTimestampMs, 5e3) && !this.xs(t.ownerId) && !this.Ps(t) && !(this.Zn || this.allowTabSynchronization && t.allowTabSynchronization)) throw new Q(G.FAILED_PRECONDITION, Wr);\n        }));\n    }\n    /**\n     * Obtains or extends the new primary lease for the local client. This\n     * method does not verify that the client is eligible for this lease.\n     */    bs(t) {\n        const e = {\n            ownerId: this.clientId,\n            allowTabSynchronization: this.allowTabSynchronization,\n            leaseTimestampMs: Date.now()\n        };\n        return Hr(t).put(\"owner\", e);\n    }\n    static vt() {\n        return Ii.vt();\n    }\n    /** Checks the primary lease and removes it if we are the current primary. */    Rs(t) {\n        const e = Hr(t);\n        return e.get(\"owner\").next((t => this.Ps(t) ? (O(\"IndexedDbPersistence\", \"Releasing primary lease.\"), \n        e.delete(\"owner\")) : yi.resolve()));\n    }\n    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */    Ss(t, e) {\n        const n = Date.now();\n        return !(t < n - e) && (!(t > n) || (F(`Detected an update time that is in the future: ${t} > ${n}`), \n        !1));\n    }\n    ys() {\n        null !== this.document && \"function\" == typeof this.document.addEventListener && (this.rs = () => {\n            this.Yn.enqueueAndForget((() => (this.inForeground = \"visible\" === this.document.visibilityState, \n            this.gs())));\n        }, this.document.addEventListener(\"visibilitychange\", this.rs), this.inForeground = \"visible\" === this.document.visibilityState);\n    }\n    ks() {\n        this.rs && (this.document.removeEventListener(\"visibilitychange\", this.rs), this.rs = null);\n    }\n    /**\n     * Attaches a window.unload handler that will synchronously write our\n     * clientId to a \"zombie client id\" location in LocalStorage. This can be used\n     * by tabs trying to acquire the primary lease to determine that the lease\n     * is no longer valid even if the timestamp is recent. This is particularly\n     * important for the refresh case (so the tab correctly re-acquires the\n     * primary lease). LocalStorage is used for this rather than IndexedDb because\n     * it is a synchronous API and so can be used reliably from  an unload\n     * handler.\n     */    ps() {\n        var t;\n        \"function\" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.ss = () => {\n            // Note: In theory, this should be scheduled on the AsyncQueue since it\n            // accesses internal state. We execute this code directly during shutdown\n            // to make sure it gets a chance to run.\n            this.Ns(), isSafari() && navigator.appVersion.match(/Version\\/1[45]/) && \n            // On Safari 14 and 15, we do not run any cleanup actions as it might\n            // trigger a bug that prevents Safari from re-opening IndexedDB during\n            // the next page load.\n            // See https://bugs.webkit.org/show_bug.cgi?id=226547\n            this.Yn.enterRestrictedMode(/* purgeExistingTasks= */ !0), this.Yn.enqueueAndForget((() => this.shutdown()));\n        }, this.window.addEventListener(\"pagehide\", this.ss));\n    }\n    Ms() {\n        this.ss && (this.window.removeEventListener(\"pagehide\", this.ss), this.ss = null);\n    }\n    /**\n     * Returns whether a client is \"zombied\" based on its LocalStorage entry.\n     * Clients become zombied when their tab closes without running all of the\n     * cleanup logic in `shutdown()`.\n     */    xs(t) {\n        var e;\n        try {\n            const n = null !== (null === (e = this.ws) || void 0 === e ? void 0 : e.getItem(this.Cs(t)));\n            return O(\"IndexedDbPersistence\", `Client '${t}' ${n ? \"is\" : \"is not\"} zombied in LocalStorage`), \n            n;\n        } catch (t) {\n            // Gracefully handle if LocalStorage isn't working.\n            return F(\"IndexedDbPersistence\", \"Failed to get zombied client id.\", t), !1;\n        }\n    }\n    /**\n     * Record client as zombied (a client that had its tab closed). Zombied\n     * clients are ignored during primary tab selection.\n     */    Ns() {\n        if (this.ws) try {\n            this.ws.setItem(this.Cs(this.clientId), String(Date.now()));\n        } catch (t) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            F(\"Failed to set zombie client id.\", t);\n        }\n    }\n    /** Removes the zombied client entry if it exists. */    Os() {\n        if (this.ws) try {\n            this.ws.removeItem(this.Cs(this.clientId));\n        } catch (t) {\n            // Ignore\n        }\n    }\n    Cs(t) {\n        return `firestore_zombie_${this.persistenceKey}_${t}`;\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the primary client object store.\n */ function Hr(t) {\n    return Si(t, \"owner\");\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the client metadata object store.\n */ function Jr(t) {\n    return Si(t, \"clientMetadata\");\n}\n\n/**\n * Generates a string used as a prefix when storing data in IndexedDB and\n * LocalStorage.\n */ function Yr(t, e) {\n    // Use two different prefix formats:\n    //   * firestore / persistenceKey / projectID . databaseID / ...\n    //   * firestore / persistenceKey / projectID / ...\n    // projectIDs are DNS-compatible names and cannot contain dots\n    // so there's no danger of collisions.\n    let n = t.projectId;\n    return t.isDefaultDatabase || (n += \".\" + t.database), \"firestore/\" + e + \"/\" + n + \"/\";\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */\nclass Xr {\n    constructor(t, e, n) {\n        this.ds = t, this.Bs = e, this.indexManager = n;\n    }\n    /**\n     * Get the local view of the document identified by `key`.\n     *\n     * @returns Local view of the document or null if we don't have any cached\n     * state for it.\n     */    Ls(t, e) {\n        return this.Bs.getAllMutationBatchesAffectingDocumentKey(t, e).next((n => this.Us(t, e, n)));\n    }\n    /** Internal version of `getDocument` that allows reusing batches. */    Us(t, e, n) {\n        return this.ds.getEntry(t, e).next((t => {\n            for (const e of n) e.applyToLocalView(t);\n            return t;\n        }));\n    }\n    // Returns the view of the given `docs` as they would appear after applying\n    // all mutations in the given `batches`.\n    qs(t, e) {\n        t.forEach(((t, n) => {\n            for (const t of e) t.applyToLocalView(n);\n        }));\n    }\n    /**\n     * Gets the local view of the documents identified by `keys`.\n     *\n     * If we don't have cached state for a document in `keys`, a NoDocument will\n     * be stored for that key in the resulting set.\n     */    Ks(t, e) {\n        return this.ds.getEntries(t, e).next((e => this.Gs(t, e).next((() => e))));\n    }\n    /**\n     * Applies the local view the given `baseDocs` without retrieving documents\n     * from the local store.\n     */    Gs(t, e) {\n        return this.Bs.getAllMutationBatchesAffectingDocumentKeys(t, e).next((t => this.qs(e, t)));\n    }\n    /**\n     * Performs a query against the local view of all documents.\n     *\n     * @param transaction - The persistence transaction.\n     * @param query - The query to match documents against.\n     * @param offset - Read time and key to start scanning by (exclusive).\n     */    Qs(t, e, n) {\n        /**\n * Returns whether the query matches a single document by path (rather than a\n * collection).\n */\n        return function(t) {\n            return xt.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n        }(e) ? this.js(t, e.path) : We(e) ? this.Ws(t, e, n) : this.zs(t, e, n);\n    }\n    js(t, e) {\n        // Just do a simple document lookup.\n        return this.Ls(t, new xt(e)).next((t => {\n            let e = Wn();\n            return t.isFoundDocument() && (e = e.insert(t.key, t)), e;\n        }));\n    }\n    Ws(t, e, n) {\n        const s = e.collectionGroup;\n        let i = Wn();\n        return this.indexManager.getCollectionParents(t, s).next((r => yi.forEach(r, (r => {\n            const o = function(t, e) {\n                return new Ue(e, \n                /*collectionGroup=*/ null, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n            }(e, r.child(s));\n            return this.zs(t, o, n).next((t => {\n                t.forEach(((t, e) => {\n                    i = i.insert(t, e);\n                }));\n            }));\n        })).next((() => i))));\n    }\n    zs(t, e, n) {\n        // Query the remote documents and overlay mutations.\n        let s;\n        return this.ds.getAllFromCollection(t, e.path, n).next((n => (s = n, this.Bs.getAllMutationBatchesAffectingQuery(t, e)))).next((t => {\n            for (const e of t) for (const t of e.mutations) {\n                const n = t.key;\n                let i = s.get(n);\n                null == i && (\n                // Create invalid document to apply mutations on top of\n                i = ne.newInvalidDocument(n), s = s.insert(n, i)), Vn(t, i, e.localWriteTime), i.isFoundDocument() || (s = s.remove(n));\n            }\n        })).next((() => (\n        // Finally, filter out any documents that don't actually match\n        // the query.\n        s.forEach(((t, n) => {\n            tn(e, n) || (s = s.remove(t));\n        })), s)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */ class Zr {\n    constructor(t, e, n, s) {\n        this.targetId = t, this.fromCache = e, this.Hs = n, this.Js = s;\n    }\n    static Ys(t, e) {\n        let n = Yn(), s = Yn();\n        for (const t of e.docChanges) switch (t.type) {\n          case 0 /* Added */ :\n            n = n.add(t.doc.key);\n            break;\n\n          case 1 /* Removed */ :\n            s = s.add(t.doc.key);\n // do nothing\n                }\n        return new Zr(t, e.fromCache, n, s);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Firestore query engine.\n *\n * Firestore queries can be executed in three modes. The Query Engine determines\n * what mode to use based on what data is persisted. The mode only determines\n * the runtime complexity of the query - the result set is equivalent across all\n * implementations.\n *\n * The Query engine will use indexed-based execution if a user has configured\n * any index that can be used to execute query (via `setIndexConfiguration()`).\n * Otherwise, the engine will try to optimize the query by re-using a previously\n * persisted query result. If that is not possible, the query will be executed\n * via a full collection scan.\n *\n * Index-based execution is the default when available. The query engine\n * supports partial indexed execution and merges the result from the index\n * lookup with documents that have not yet been indexed. The index evaluation\n * matches the backend's format and as such, the SDK can use indexing for all\n * queries that the backend supports.\n *\n * If no index exists, the query engine tries to take advantage of the target\n * document mapping in the TargetCache. These mappings exists for all queries\n * that have been synced with the backend at least once and allow the query\n * engine to only read documents that previously matched a query plus any\n * documents that were edited after the query was last listened to.\n *\n * There are some cases when this optimization is not guaranteed to produce\n * the same results as full collection scans. In these cases, query\n * processing falls back to full scans. These cases are:\n *\n * - Limit queries where a document that matched the query previously no longer\n *   matches the query.\n *\n * - Limit queries where a document edit may cause the document to sort below\n *   another document that is in the local cache.\n *\n * - Queries that have never been CURRENT or free of limbo documents.\n */ class to {\n    constructor() {\n        this.Xs = !1;\n    }\n    /** Sets the document view to query against. */    initialize(t, e) {\n        this.Zs = t, this.indexManager = e, this.Xs = !0;\n    }\n    /** Returns all local documents matching the specified query. */    Qs(t, e, n, s) {\n        return this.ti(t, e).next((i => i || this.ei(t, e, s, n))).next((n => n || this.ni(t, e)));\n    }\n    /**\n     * Performs an indexed query that evaluates the query based on a collection's\n     * persisted index values. Returns `null` if an index is not available.\n     */    ti(t, e) {\n        return yi.resolve(null);\n    }\n    /**\n     * Performs a query based on the target's persisted query mapping. Returns\n     * `null` if the mapping is not available or cannot be used.\n     */    ei(t, e, n, s) {\n        return Ge(e) || s.isEqual(ct.min()) ? this.ni(t, e) : this.Zs.Ks(t, n).next((i => {\n            const r = this.si(e, i);\n            return this.ii(e, r, n, s) ? this.ni(t, e) : (k() <= LogLevel.DEBUG && O(\"QueryEngine\", \"Re-using previous result from %s to execute query: %s\", s.toString(), Ze(e)), \n            this.ri(t, r, e, ae(s, -1)));\n        }));\n        // Queries that have never seen a snapshot without limbo free documents\n        // should also be run as a full collection scan.\n        }\n    /** Applies the query filter and sorting to the provided documents.  */    si(t, e) {\n        // Sort the documents and re-apply the query filter since previously\n        // matching documents do not necessarily still match the query.\n        let n = new we(nn(t));\n        return e.forEach(((e, s) => {\n            tn(t, s) && (n = n.add(s));\n        })), n;\n    }\n    /**\n     * Determines if a limit query needs to be refilled from cache, making it\n     * ineligible for index-free execution.\n     *\n     * @param query The query.\n     * @param sortedPreviousResults - The documents that matched the query when it\n     * was last synchronized, sorted by the query's comparator.\n     * @param remoteKeys - The document keys that matched the query at the last\n     * snapshot.\n     * @param limboFreeSnapshotVersion - The version of the snapshot when the\n     * query was last synchronized.\n     */    ii(t, e, n, s) {\n        if (null === t.limit) \n        // Queries without limits do not need to be refilled.\n        return !1;\n        if (n.size !== e.size) \n        // The query needs to be refilled if a previously matching document no\n        // longer matches.\n        return !0;\n        // Limit queries are not eligible for index-free query execution if there is\n        // a potential that an older document from cache now sorts before a document\n        // that was previously part of the limit. This, however, can only happen if\n        // the document at the edge of the limit goes out of limit.\n        // If a document that is not the limit boundary sorts differently,\n        // the boundary of the limit itself did not change and documents from cache\n        // will continue to be \"rejected\" by this boundary. Therefore, we can ignore\n        // any modifications that don't affect the last document.\n                const i = \"F\" /* First */ === t.limitType ? e.last() : e.first();\n        return !!i && (i.hasPendingWrites || i.version.compareTo(s) > 0);\n    }\n    ni(t, e) {\n        return k() <= LogLevel.DEBUG && O(\"QueryEngine\", \"Using full collection scan to execute query:\", Ze(e)), \n        this.Zs.Qs(t, e, he.min());\n    }\n    /**\n     * Combines the results from an indexed execution with the remaining documents\n     * that have not yet been indexed.\n     */    ri(t, e, n, s) {\n        // Retrieve all results for documents that were updated since the offset.\n        return this.Zs.Qs(t, n, s).next((t => (\n        // Merge with existing results\n        e.forEach((e => {\n            t = t.insert(e.key, e);\n        })), t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Implements `LocalStore` interface.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass eo {\n    constructor(\n    /** Manages our in-memory or durable persistence. */\n    t, e, n, s) {\n        this.persistence = t, this.oi = e, this.M = s, \n        /**\n         * Maps a targetID to data about its target.\n         *\n         * PORTING NOTE: We are using an immutable data structure on Web to make re-runs\n         * of `applyRemoteEvent()` idempotent.\n         */\n        this.ui = new fe(rt), \n        /** Maps a target to its targetID. */\n        // TODO(wuandy): Evaluate if TargetId can be part of Target.\n        this.ai = new Kn((t => Ie(t)), Ee), \n        /**\n         * A per collection group index of the last read time processed by\n         * `getNewDocumentChanges()`.\n         *\n         * PORTING NOTE: This is only used for multi-tab synchronization.\n         */\n        this.ci = new Map, this.hi = t.getRemoteDocumentCache(), this.fs = t.getTargetCache(), \n        this._s = t.getBundleCache(), this.li(n);\n    }\n    li(t) {\n        // TODO(indexing): Add spec tests that test these components change after a\n        // user change\n        this.indexManager = this.persistence.getIndexManager(t), this.Bs = this.persistence.getMutationQueue(t, this.indexManager), \n        this.fi = new Xr(this.hi, this.Bs, this.indexManager), this.hi.setIndexManager(this.indexManager), \n        this.oi.initialize(this.fi, this.indexManager);\n    }\n    collectGarbage(t) {\n        return this.persistence.runTransaction(\"Collect garbage\", \"readwrite-primary\", (e => t.collect(e, this.ui)));\n    }\n}\n\nfunction no(\n/** Manages our in-memory or durable persistence. */\nt, e, n, s) {\n    return new eo(t, e, n, s);\n}\n\n/**\n * Tells the LocalStore that the currently authenticated user has changed.\n *\n * In response the local store switches the mutation queue to the new user and\n * returns any resulting document changes.\n */\n// PORTING NOTE: Android and iOS only return the documents affected by the\n// change.\nasync function so(t, e) {\n    const n = K(t);\n    return await n.persistence.runTransaction(\"Handle user change\", \"readonly\", (t => {\n        // Swap out the mutation queue, grabbing the pending mutation batches\n        // before and after.\n        let s;\n        return n.Bs.getAllMutationBatches(t).next((i => (s = i, n.li(e), n.Bs.getAllMutationBatches(t)))).next((e => {\n            const i = [], r = [];\n            // Union the old/new changed keys.\n            let o = Yn();\n            for (const t of s) {\n                i.push(t.batchId);\n                for (const e of t.mutations) o = o.add(e.key);\n            }\n            for (const t of e) {\n                r.push(t.batchId);\n                for (const e of t.mutations) o = o.add(e.key);\n            }\n            // Return the set of all (potentially) changed documents and the list\n            // of mutation batch IDs that were affected by change.\n                        return n.fi.Ks(t, o).next((t => ({\n                di: t,\n                removedBatchIds: i,\n                addedBatchIds: r\n            })));\n        }));\n    }));\n}\n\n/* Accepts locally generated Mutations and commit them to storage. */\n/**\n * Acknowledges the given batch.\n *\n * On the happy path when a batch is acknowledged, the local store will\n *\n *  + remove the batch from the mutation queue;\n *  + apply the changes to the remote document cache;\n *  + recalculate the latency compensated view implied by those changes (there\n *    may be mutations in the queue that affect the documents but haven't been\n *    acknowledged yet); and\n *  + give the changed documents back the sync engine\n *\n * @returns The resulting (modified) documents.\n */\nfunction io(t, e) {\n    const n = K(t);\n    return n.persistence.runTransaction(\"Acknowledge batch\", \"readwrite-primary\", (t => {\n        const s = e.batch.keys(), i = n.hi.newChangeBuffer({\n            trackRemovals: !0\n        });\n        return function(t, e, n, s) {\n            const i = n.batch, r = i.keys();\n            let o = yi.resolve();\n            return r.forEach((t => {\n                o = o.next((() => s.getEntry(e, t))).next((e => {\n                    const r = n.docVersions.get(t);\n                    U(null !== r), e.version.compareTo(r) < 0 && (i.applyToRemoteDocument(e, n), e.isValidDocument() && (\n                    // We use the commitVersion as the readTime rather than the\n                    // document's updateTime since the updateTime is not advanced\n                    // for updates that do not modify the underlying document.\n                    e.setReadTime(n.commitVersion), s.addEntry(e)));\n                }));\n            })), o.next((() => t.Bs.removeMutationBatch(e, i)));\n        }\n        /** Returns the local view of the documents affected by a mutation batch. */\n        // PORTING NOTE: Multi-Tab only.\n        (n, t, e, i).next((() => i.apply(t))).next((() => n.Bs.performConsistencyCheck(t))).next((() => n.fi.Ks(t, s)));\n    }));\n}\n\n/**\n * Removes mutations from the MutationQueue for the specified batch;\n * LocalDocuments will be recalculated.\n *\n * @returns The resulting modified documents.\n */\n/**\n * Returns the last consistent snapshot processed (used by the RemoteStore to\n * determine whether to buffer incoming snapshots from the backend).\n */\nfunction ro(t) {\n    const e = K(t);\n    return e.persistence.runTransaction(\"Get last remote snapshot version\", \"readonly\", (t => e.fs.getLastRemoteSnapshotVersion(t)));\n}\n\n/**\n * Updates the \"ground-state\" (remote) documents. We assume that the remote\n * event reflects any write batches that have been acknowledged or rejected\n * (i.e. we do not re-apply local mutations to updates from this event).\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */ function oo(t, e) {\n    const n = K(t), s = e.snapshotVersion;\n    let i = n.ui;\n    return n.persistence.runTransaction(\"Apply remote event\", \"readwrite-primary\", (t => {\n        const r = n.hi.newChangeBuffer({\n            trackRemovals: !0\n        });\n        // Reset newTargetDataByTargetMap in case this transaction gets re-run.\n                i = n.ui;\n        const o = [];\n        e.targetChanges.forEach(((r, u) => {\n            const a = i.get(u);\n            if (!a) return;\n            // Only update the remote keys if the target is still active. This\n            // ensures that we can persist the updated target data along with\n            // the updated assignment.\n                        o.push(n.fs.removeMatchingKeys(t, r.removedDocuments, u).next((() => n.fs.addMatchingKeys(t, r.addedDocuments, u))));\n            let c = a.withSequenceNumber(t.currentSequenceNumber);\n            e.targetMismatches.has(u) ? c = c.withResumeToken(pt.EMPTY_BYTE_STRING, ct.min()).withLastLimboFreeSnapshotVersion(ct.min()) : r.resumeToken.approximateByteSize() > 0 && (c = c.withResumeToken(r.resumeToken, s)), \n            i = i.insert(u, c), \n            // Update the target data if there are target changes (or if\n            // sufficient time has passed since the last update).\n            /**\n * Returns true if the newTargetData should be persisted during an update of\n * an active target. TargetData should always be persisted when a target is\n * being released and should not call this function.\n *\n * While the target is active, TargetData updates can be omitted when nothing\n * about the target has changed except metadata like the resume token or\n * snapshot version. Occasionally it's worth the extra write to prevent these\n * values from getting too stale after a crash, but this doesn't have to be\n * too frequent.\n */\n            function(t, e, n) {\n                // Always persist target data if we don't already have a resume token.\n                if (0 === t.resumeToken.approximateByteSize()) return !0;\n                // Don't allow resume token changes to be buffered indefinitely. This\n                // allows us to be reasonably up-to-date after a crash and avoids needing\n                // to loop over all active queries on shutdown. Especially in the browser\n                // we may not get time to do anything interesting while the current tab is\n                // closing.\n                                if (e.snapshotVersion.toMicroseconds() - t.snapshotVersion.toMicroseconds() >= 3e8) return !0;\n                // Otherwise if the only thing that has changed about a target is its resume\n                // token it's not worth persisting. Note that the RemoteStore keeps an\n                // in-memory view of the currently active targets which includes the current\n                // resume token, so stream failure or user changes will still use an\n                // up-to-date resume token regardless of what we do here.\n                                return n.addedDocuments.size + n.modifiedDocuments.size + n.removedDocuments.size > 0;\n            }\n            /**\n * Notifies local store of the changed views to locally pin documents.\n */ (a, c, r) && o.push(n.fs.updateTargetData(t, c));\n        }));\n        let u = Qn();\n        // HACK: The only reason we allow a null snapshot version is so that we\n        // can synthesize remote events when we get permission denied errors while\n        // trying to resolve the state of a locally cached document that is in\n        // limbo.\n        if (e.documentUpdates.forEach((s => {\n            e.resolvedLimboDocuments.has(s) && o.push(n.persistence.referenceDelegate.updateLimboDocument(t, s));\n        })), \n        // Each loop iteration only affects its \"own\" doc, so it's safe to get all the remote\n        // documents in advance in a single call.\n        o.push(uo(t, r, e.documentUpdates).next((t => {\n            u = t;\n        }))), !s.isEqual(ct.min())) {\n            const e = n.fs.getLastRemoteSnapshotVersion(t).next((e => n.fs.setTargetsMetadata(t, t.currentSequenceNumber, s)));\n            o.push(e);\n        }\n        return yi.waitFor(o).next((() => r.apply(t))).next((() => n.fi.Gs(t, u))).next((() => u));\n    })).then((t => (n.ui = i, t)));\n}\n\n/**\n * Populates document change buffer with documents from backend or a bundle.\n * Returns the document changes resulting from applying those documents.\n *\n * @param txn - Transaction to use to read existing documents from storage.\n * @param documentBuffer - Document buffer to collect the resulted changes to be\n *        applied to storage.\n * @param documents - Documents to be applied.\n * @param globalVersion - A `SnapshotVersion` representing the read time if all\n *        documents have the same read time.\n * @param documentVersions - A DocumentKey-to-SnapshotVersion map if documents\n *        have their own read time.\n *\n * Note: this function will use `documentVersions` if it is defined;\n * when it is not defined, resorts to `globalVersion`.\n */ function uo(t, e, n) {\n    let s = Yn();\n    return n.forEach((t => s = s.add(t))), e.getEntries(t, s).next((t => {\n        let s = Qn();\n        return n.forEach(((n, i) => {\n            const r = t.get(n);\n            // Note: The order of the steps below is important, since we want\n            // to ensure that rejected limbo resolutions (which fabricate\n            // NoDocuments with SnapshotVersion.min()) never add documents to\n            // cache.\n                        i.isNoDocument() && i.version.isEqual(ct.min()) ? (\n            // NoDocuments with SnapshotVersion.min() are used in manufactured\n            // events. We remove these documents from cache since we lost\n            // access.\n            e.removeEntry(n, i.readTime), s = s.insert(n, i)) : !r.isValidDocument() || i.version.compareTo(r.version) > 0 || 0 === i.version.compareTo(r.version) && r.hasPendingWrites ? (e.addEntry(i), \n            s = s.insert(n, i)) : O(\"LocalStore\", \"Ignoring outdated watch update for \", n, \". Current version:\", r.version, \" Watch version:\", i.version);\n        })), s;\n    }));\n}\n\n/**\n * Gets the mutation batch after the passed in batchId in the mutation queue\n * or null if empty.\n * @param afterBatchId - If provided, the batch to search after.\n * @returns The next mutation or null if there wasn't one.\n */\nfunction ao(t, e) {\n    const n = K(t);\n    return n.persistence.runTransaction(\"Get next mutation batch\", \"readonly\", (t => (void 0 === e && (e = -1), \n    n.Bs.getNextMutationBatchAfterBatchId(t, e))));\n}\n\n/**\n * Reads the current value of a Document with a given key or null if not\n * found - used for testing.\n */\n/**\n * Assigns the given target an internal ID so that its results can be pinned so\n * they don't get GC'd. A target must be allocated in the local store before\n * the store can be used to manage its view.\n *\n * Allocating an already allocated `Target` will return the existing `TargetData`\n * for that `Target`.\n */\nfunction co(t, e) {\n    const n = K(t);\n    return n.persistence.runTransaction(\"Allocate target\", \"readwrite\", (t => {\n        let s;\n        return n.fs.getTargetData(t, e).next((i => i ? (\n        // This target has been listened to previously, so reuse the\n        // previous targetID.\n        // TODO(mcg): freshen last accessed date?\n        s = i, yi.resolve(s)) : n.fs.allocateTargetId(t).next((i => (s = new Ni(e, i, 0 /* Listen */ , t.currentSequenceNumber), \n        n.fs.addTargetData(t, s).next((() => s)))))));\n    })).then((t => {\n        // If Multi-Tab is enabled, the existing target data may be newer than\n        // the in-memory data\n        const s = n.ui.get(t.targetId);\n        return (null === s || t.snapshotVersion.compareTo(s.snapshotVersion) > 0) && (n.ui = n.ui.insert(t.targetId, t), \n        n.ai.set(e, t.targetId)), t;\n    }));\n}\n\n/**\n * Returns the TargetData as seen by the LocalStore, including updates that may\n * have not yet been persisted to the TargetCache.\n */\n// Visible for testing.\n/**\n * Unpins all the documents associated with the given target. If\n * `keepPersistedTargetData` is set to false and Eager GC enabled, the method\n * directly removes the associated target data from the target cache.\n *\n * Releasing a non-existing `Target` is a no-op.\n */\n// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.\nasync function ho(t, e, n) {\n    const s = K(t), i = s.ui.get(e), r = n ? \"readwrite\" : \"readwrite-primary\";\n    try {\n        n || await s.persistence.runTransaction(\"Release target\", r, (t => s.persistence.referenceDelegate.removeTarget(t, i)));\n    } catch (t) {\n        if (!Ai(t)) throw t;\n        // All `releaseTarget` does is record the final metadata state for the\n        // target, but we've been recording this periodically during target\n        // activity. If we lose this write this could cause a very slight\n        // difference in the order of target deletion during GC, but we\n        // don't define exact LRU semantics so this is acceptable.\n        O(\"LocalStore\", `Failed to update sequence numbers for target ${e}: ${t}`);\n    }\n    s.ui = s.ui.remove(e), s.ai.delete(i.target);\n}\n\n/**\n * Runs the specified query against the local store and returns the results,\n * potentially taking advantage of query data from previous executions (such\n * as the set of remote keys).\n *\n * @param usePreviousResults - Whether results from previous executions can\n * be used to optimize this query execution.\n */ function lo(t, e, n) {\n    const s = K(t);\n    let i = ct.min(), r = Yn();\n    return s.persistence.runTransaction(\"Execute query\", \"readonly\", (t => function(t, e, n) {\n        const s = K(t), i = s.ai.get(n);\n        return void 0 !== i ? yi.resolve(s.ui.get(i)) : s.fs.getTargetData(e, n);\n    }(s, t, He(e)).next((e => {\n        if (e) return i = e.lastLimboFreeSnapshotVersion, s.fs.getMatchingKeysForTargetId(t, e.targetId).next((t => {\n            r = t;\n        }));\n    })).next((() => s.oi.Qs(t, e, n ? i : ct.min(), n ? r : Yn()))).next((t => (wo(s, en(e), t), \n    {\n        documents: t,\n        _i: r\n    })))));\n}\n\n// PORTING NOTE: Multi-Tab only.\nfunction fo(t, e) {\n    const n = K(t), s = K(n.fs), i = n.ui.get(e);\n    return i ? Promise.resolve(i.target) : n.persistence.runTransaction(\"Get target data\", \"readonly\", (t => s.Et(t, e).next((t => t ? t.target : null))));\n}\n\n/**\n * Returns the set of documents that have been updated since the last call.\n * If this is the first call, returns the set of changes since client\n * initialization. Further invocations will return document that have changed\n * since the prior call.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction _o(t, e) {\n    const n = K(t), s = n.ci.get(e) || ct.min();\n    // Get the current maximum read time for the collection. This should always\n    // exist, but to reduce the chance for regressions we default to\n    // SnapshotVersion.Min()\n    // TODO(indexing): Consider removing the default value.\n        return n.persistence.runTransaction(\"Get new document changes\", \"readonly\", (t => n.hi.getAllFromCollectionGroup(t, e, ae(s, -1), \n    /* limit= */ Number.MAX_SAFE_INTEGER))).then((t => (wo(n, e, t), t)));\n}\n\n/** Sets the collection group's maximum read time from the given documents. */\n// PORTING NOTE: Multi-Tab only.\nfunction wo(t, e, n) {\n    let s = ct.min();\n    n.forEach(((t, e) => {\n        e.readTime.compareTo(s) > 0 && (s = e.readTime);\n    })), t.ci.set(e, s);\n}\n\n/**\n * Creates a new target using the given bundle name, which will be used to\n * hold the keys of all documents from the bundle in query-document mappings.\n * This ensures that the loaded documents do not get garbage collected\n * right away.\n */\n/**\n * Applies the documents from a bundle to the \"ground-state\" (remote)\n * documents.\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nasync function mo(t, e, n, s) {\n    const i = K(t);\n    let r = Yn(), o = Qn();\n    for (const t of n) {\n        const n = e.wi(t.metadata.name);\n        t.document && (r = r.add(n));\n        const s = e.mi(t);\n        s.setReadTime(e.gi(t.metadata.readTime)), o = o.insert(n, s);\n    }\n    const u = i.hi.newChangeBuffer({\n        trackRemovals: !0\n    }), a = await co(i, function(t) {\n        // It is OK that the path used for the query is not valid, because this will\n        // not be read and queried.\n        return He(Ke(_t.fromString(`__bundle__/docs/${t}`)));\n    }(s));\n    // Allocates a target to hold all document keys from the bundle, such that\n    // they will not get garbage collected right away.\n        return i.persistence.runTransaction(\"Apply bundle documents\", \"readwrite\", (t => uo(t, u, o).next((e => (u.apply(t), \n    e))).next((e => i.fs.removeMatchingKeysForTargetId(t, a.targetId).next((() => i.fs.addMatchingKeys(t, r, a.targetId))).next((() => i.fi.Gs(t, e))).next((() => e))))));\n}\n\n/**\n * Returns a promise of a boolean to indicate if the given bundle has already\n * been loaded and the create time is newer than the current loading bundle.\n */\n/**\n * Saves the given `NamedQuery` to local persistence.\n */\nasync function go(t, e, n = Yn()) {\n    // Allocate a target for the named query such that it can be resumed\n    // from associated read time if users use it to listen.\n    // NOTE: this also means if no corresponding target exists, the new target\n    // will remain active and will not get collected, unless users happen to\n    // unlisten the query somehow.\n    const s = await co(t, He(Ki(e.bundledQuery))), i = K(t);\n    return i.persistence.runTransaction(\"Save named query\", \"readwrite\", (t => {\n        const r = ws(e.readTime);\n        // Simply save the query itself if it is older than what the SDK already\n        // has.\n                if (s.snapshotVersion.compareTo(r) >= 0) return i._s.saveNamedQuery(t, e);\n        // Update existing target data because the query from the bundle is newer.\n                const o = s.withResumeToken(pt.EMPTY_BYTE_STRING, r);\n        return i.ui = i.ui.insert(o.targetId, o), i.fs.updateTargetData(t, o).next((() => i.fs.removeMatchingKeysForTargetId(t, s.targetId))).next((() => i.fs.addMatchingKeys(t, n, s.targetId))).next((() => i._s.saveNamedQuery(t, e)));\n    }));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class yo {\n    constructor(t) {\n        this.M = t, this.yi = new Map, this.pi = new Map;\n    }\n    getBundleMetadata(t, e) {\n        return yi.resolve(this.yi.get(e));\n    }\n    saveBundleMetadata(t, e) {\n        /** Decodes a BundleMetadata proto into a BundleMetadata object. */\n        var n;\n        return this.yi.set(e.id, {\n            id: (n = e).id,\n            version: n.version,\n            createTime: ws(n.createTime)\n        }), yi.resolve();\n    }\n    getNamedQuery(t, e) {\n        return yi.resolve(this.pi.get(e));\n    }\n    saveNamedQuery(t, e) {\n        return this.pi.set(e.name, function(t) {\n            return {\n                name: t.name,\n                query: Ki(t.bundledQuery),\n                readTime: ws(t.readTime)\n            };\n        }(e)), yi.resolve();\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory implementation of DocumentOverlayCache.\n */ class po {\n    constructor() {\n        // A map sorted by DocumentKey, whose value is a pair of the largest batch id\n        // for the overlay and the overlay itself.\n        this.overlays = new fe(xt.comparator), this.Ii = new Map;\n    }\n    getOverlay(t, e) {\n        return yi.resolve(this.overlays.get(e));\n    }\n    saveOverlays(t, e, n) {\n        return n.forEach(((n, s) => {\n            this.Xt(t, e, s);\n        })), yi.resolve();\n    }\n    removeOverlaysForBatchId(t, e, n) {\n        const s = this.Ii.get(n);\n        return void 0 !== s && (s.forEach((t => this.overlays = this.overlays.remove(t))), \n        this.Ii.delete(n)), yi.resolve();\n    }\n    getOverlaysForCollection(t, e, n) {\n        const s = zn(), i = e.length + 1, r = new xt(e.child(\"\")), o = this.overlays.getIteratorFrom(r);\n        for (;o.hasNext(); ) {\n            const t = o.getNext().value, r = t.getKey();\n            if (!e.isPrefixOf(r.path)) break;\n            // Documents from sub-collections\n                        r.path.length === i && (t.largestBatchId > n && s.set(t.getKey(), t));\n        }\n        return yi.resolve(s);\n    }\n    getOverlaysForCollectionGroup(t, e, n, s) {\n        let i = new fe(((t, e) => t - e));\n        const r = this.overlays.getIterator();\n        for (;r.hasNext(); ) {\n            const t = r.getNext().value;\n            if (t.getKey().getCollectionGroup() === e && t.largestBatchId > n) {\n                let e = i.get(t.largestBatchId);\n                null === e && (e = zn(), i = i.insert(t.largestBatchId, e)), e.set(t.getKey(), t);\n            }\n        }\n        const o = zn(), u = i.getIterator();\n        for (;u.hasNext(); ) {\n            if (u.getNext().value.forEach(((t, e) => o.set(t, e))), o.size() >= s) break;\n        }\n        return yi.resolve(o);\n    }\n    Xt(t, e, n) {\n        if (null === n) return;\n        // Remove the association of the overlay to its batch id.\n                const s = this.overlays.get(n.key);\n        if (null !== s) {\n            const t = this.Ii.get(s.largestBatchId).delete(n.key);\n            this.Ii.set(s.largestBatchId, t);\n        }\n        this.overlays = this.overlays.insert(n.key, new xi(e, n));\n        // Create the association of this overlay to the given largestBatchId.\n        let i = this.Ii.get(e);\n        void 0 === i && (i = Yn(), this.Ii.set(e, i)), this.Ii.set(e, i.add(n.key));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */ class Io {\n    constructor() {\n        // A set of outstanding references to a document sorted by key.\n        this.Ti = new we(To.Ei), \n        // A set of outstanding references to a document sorted by target id.\n        this.Ai = new we(To.Ri);\n    }\n    /** Returns true if the reference set contains no references. */    isEmpty() {\n        return this.Ti.isEmpty();\n    }\n    /** Adds a reference to the given document key for the given ID. */    addReference(t, e) {\n        const n = new To(t, e);\n        this.Ti = this.Ti.add(n), this.Ai = this.Ai.add(n);\n    }\n    /** Add references to the given document keys for the given ID. */    bi(t, e) {\n        t.forEach((t => this.addReference(t, e)));\n    }\n    /**\n     * Removes a reference to the given document key for the given\n     * ID.\n     */    removeReference(t, e) {\n        this.Pi(new To(t, e));\n    }\n    Vi(t, e) {\n        t.forEach((t => this.removeReference(t, e)));\n    }\n    /**\n     * Clears all references with a given ID. Calls removeRef() for each key\n     * removed.\n     */    vi(t) {\n        const e = new xt(new _t([])), n = new To(e, t), s = new To(e, t + 1), i = [];\n        return this.Ai.forEachInRange([ n, s ], (t => {\n            this.Pi(t), i.push(t.key);\n        })), i;\n    }\n    Si() {\n        this.Ti.forEach((t => this.Pi(t)));\n    }\n    Pi(t) {\n        this.Ti = this.Ti.delete(t), this.Ai = this.Ai.delete(t);\n    }\n    Di(t) {\n        const e = new xt(new _t([])), n = new To(e, t), s = new To(e, t + 1);\n        let i = Yn();\n        return this.Ai.forEachInRange([ n, s ], (t => {\n            i = i.add(t.key);\n        })), i;\n    }\n    containsKey(t) {\n        const e = new To(t, 0), n = this.Ti.firstAfterOrEqual(e);\n        return null !== n && t.isEqual(n.key);\n    }\n}\n\nclass To {\n    constructor(t, e) {\n        this.key = t, this.Ci = e;\n    }\n    /** Compare by key then by ID */    static Ei(t, e) {\n        return xt.comparator(t.key, e.key) || rt(t.Ci, e.Ci);\n    }\n    /** Compare by ID then by key */    static Ri(t, e) {\n        return rt(t.Ci, e.Ci) || xt.comparator(t.key, e.key);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Eo {\n    constructor(t, e) {\n        this.indexManager = t, this.referenceDelegate = e, \n        /**\n         * The set of all mutations that have been sent but not yet been applied to\n         * the backend.\n         */\n        this.Bs = [], \n        /** Next value to use when assigning sequential IDs to each mutation batch. */\n        this.xi = 1, \n        /** An ordered mapping between documents and the mutations batch IDs. */\n        this.Ni = new we(To.Ei);\n    }\n    checkEmpty(t) {\n        return yi.resolve(0 === this.Bs.length);\n    }\n    addMutationBatch(t, e, n, s) {\n        const i = this.xi;\n        this.xi++, this.Bs.length > 0 && this.Bs[this.Bs.length - 1];\n        const r = new Di(i, e, n, s);\n        this.Bs.push(r);\n        // Track references by document key and index collection parents.\n        for (const e of s) this.Ni = this.Ni.add(new To(e.key, i)), this.indexManager.addToCollectionParentIndex(t, e.key.path.popLast());\n        return yi.resolve(r);\n    }\n    lookupMutationBatch(t, e) {\n        return yi.resolve(this.ki(e));\n    }\n    getNextMutationBatchAfterBatchId(t, e) {\n        const n = e + 1, s = this.Mi(n), i = s < 0 ? 0 : s;\n        // The requested batchId may still be out of range so normalize it to the\n        // start of the queue.\n                return yi.resolve(this.Bs.length > i ? this.Bs[i] : null);\n    }\n    getHighestUnacknowledgedBatchId() {\n        return yi.resolve(0 === this.Bs.length ? -1 : this.xi - 1);\n    }\n    getAllMutationBatches(t) {\n        return yi.resolve(this.Bs.slice());\n    }\n    getAllMutationBatchesAffectingDocumentKey(t, e) {\n        const n = new To(e, 0), s = new To(e, Number.POSITIVE_INFINITY), i = [];\n        return this.Ni.forEachInRange([ n, s ], (t => {\n            const e = this.ki(t.Ci);\n            i.push(e);\n        })), yi.resolve(i);\n    }\n    getAllMutationBatchesAffectingDocumentKeys(t, e) {\n        let n = new we(rt);\n        return e.forEach((t => {\n            const e = new To(t, 0), s = new To(t, Number.POSITIVE_INFINITY);\n            this.Ni.forEachInRange([ e, s ], (t => {\n                n = n.add(t.Ci);\n            }));\n        })), yi.resolve(this.Oi(n));\n    }\n    getAllMutationBatchesAffectingQuery(t, e) {\n        // Use the query path as a prefix for testing if a document matches the\n        // query.\n        const n = e.path, s = n.length + 1;\n        // Construct a document reference for actually scanning the index. Unlike\n        // the prefix the document key in this reference must have an even number of\n        // segments. The empty segment can be used a suffix of the query path\n        // because it precedes all other segments in an ordered traversal.\n        let i = n;\n        xt.isDocumentKey(i) || (i = i.child(\"\"));\n        const r = new To(new xt(i), 0);\n        // Find unique batchIDs referenced by all documents potentially matching the\n        // query.\n                let o = new we(rt);\n        return this.Ni.forEachWhile((t => {\n            const e = t.key.path;\n            return !!n.isPrefixOf(e) && (\n            // Rows with document keys more than one segment longer than the query\n            // path can't be matches. For example, a query on 'rooms' can't match\n            // the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            e.length === s && (o = o.add(t.Ci)), !0);\n        }), r), yi.resolve(this.Oi(o));\n    }\n    Oi(t) {\n        // Construct an array of matching batches, sorted by batchID to ensure that\n        // multiple mutations affecting the same document key are applied in order.\n        const e = [];\n        return t.forEach((t => {\n            const n = this.ki(t);\n            null !== n && e.push(n);\n        })), e;\n    }\n    removeMutationBatch(t, e) {\n        U(0 === this.Fi(e.batchId, \"removed\")), this.Bs.shift();\n        let n = this.Ni;\n        return yi.forEach(e.mutations, (s => {\n            const i = new To(s.key, e.batchId);\n            return n = n.delete(i), this.referenceDelegate.markPotentiallyOrphaned(t, s.key);\n        })).next((() => {\n            this.Ni = n;\n        }));\n    }\n    _n(t) {\n        // No-op since the memory mutation queue does not maintain a separate cache.\n    }\n    containsKey(t, e) {\n        const n = new To(e, 0), s = this.Ni.firstAfterOrEqual(n);\n        return yi.resolve(e.isEqual(s && s.key));\n    }\n    performConsistencyCheck(t) {\n        return this.Bs.length, yi.resolve();\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue and asserts that\n     * the resulting index is within the bounds of the queue.\n     *\n     * @param batchId - The batchId to search for\n     * @param action - A description of what the caller is doing, phrased in passive\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n     */    Fi(t, e) {\n        return this.Mi(t);\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue. This operation\n     * is O(1).\n     *\n     * @returns The computed index of the batch with the given batchId, based on\n     * the state of the queue. Note this index can be negative if the requested\n     * batchId has already been remvoed from the queue or past the end of the\n     * queue if the batchId is larger than the last added batch.\n     */    Mi(t) {\n        if (0 === this.Bs.length) \n        // As an index this is past the end of the queue\n        return 0;\n        // Examine the front of the queue to figure out the difference between the\n        // batchId and indexes in the array. Note that since the queue is ordered\n        // by batchId, if the first batch has a larger batchId then the requested\n        // batchId doesn't exist in the queue.\n                return t - this.Bs[0].batchId;\n    }\n    /**\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\n     * other functions that uses this code easier to read and more efficent.\n     */    ki(t) {\n        const e = this.Mi(t);\n        if (e < 0 || e >= this.Bs.length) return null;\n        return this.Bs[e];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The memory-only RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newMemoryRemoteDocumentCache()`.\n */\nclass Ao {\n    /**\n     * @param sizer - Used to assess the size of a document. For eager GC, this is\n     * expected to just return 0 to avoid unnecessarily doing the work of\n     * calculating the size.\n     */\n    constructor(t) {\n        this.$i = t, \n        /** Underlying cache of documents and their read times. */\n        this.docs = new fe(xt.comparator), \n        /** Size of all cached documents. */\n        this.size = 0;\n    }\n    setIndexManager(t) {\n        this.indexManager = t;\n    }\n    /**\n     * Adds the supplied entry to the cache and updates the cache size as appropriate.\n     *\n     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */    addEntry(t, e) {\n        const n = e.key, s = this.docs.get(n), i = s ? s.size : 0, r = this.$i(e);\n        return this.docs = this.docs.insert(n, {\n            document: e.mutableCopy(),\n            size: r\n        }), this.size += r - i, this.indexManager.addToCollectionParentIndex(t, n.path.popLast());\n    }\n    /**\n     * Removes the specified entry from the cache and updates the cache size as appropriate.\n     *\n     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */    removeEntry(t) {\n        const e = this.docs.get(t);\n        e && (this.docs = this.docs.remove(t), this.size -= e.size);\n    }\n    getEntry(t, e) {\n        const n = this.docs.get(e);\n        return yi.resolve(n ? n.document.mutableCopy() : ne.newInvalidDocument(e));\n    }\n    getEntries(t, e) {\n        let n = Qn();\n        return e.forEach((t => {\n            const e = this.docs.get(t);\n            n = n.insert(t, e ? e.document.mutableCopy() : ne.newInvalidDocument(t));\n        })), yi.resolve(n);\n    }\n    getAllFromCollection(t, e, n) {\n        let s = Qn();\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n                const i = new xt(e.child(\"\")), r = this.docs.getIteratorFrom(i);\n        for (;r.hasNext(); ) {\n            const {key: t, value: {document: i}} = r.getNext();\n            if (!e.isPrefixOf(t.path)) break;\n            t.path.length > e.length + 1 || (le(ce(i), n) <= 0 || (s = s.insert(i.key, i.mutableCopy())));\n        }\n        return yi.resolve(s);\n    }\n    getAllFromCollectionGroup(t, e, n, s) {\n        // This method should only be called from the IndexBackfiller if persistence\n        // is enabled.\n        L();\n    }\n    Bi(t, e) {\n        return yi.forEach(this.docs, (t => e(t)));\n    }\n    newChangeBuffer(t) {\n        // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps\n        // a separate changelog and does not need special handling for removals.\n        return new Ro(this);\n    }\n    getSize(t) {\n        return yi.resolve(this.size);\n    }\n}\n\n/**\n * Creates a new memory-only RemoteDocumentCache.\n *\n * @param sizer - Used to assess the size of a document. For eager GC, this is\n * expected to just return 0 to avoid unnecessarily doing the work of\n * calculating the size.\n */\n/**\n * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.\n */\nclass Ro extends Fr {\n    constructor(t) {\n        super(), this.Kn = t;\n    }\n    applyChanges(t) {\n        const e = [];\n        return this.changes.forEach(((n, s) => {\n            s.isValidDocument() ? e.push(this.Kn.addEntry(t, s)) : this.Kn.removeEntry(n);\n        })), yi.waitFor(e);\n    }\n    getFromCache(t, e) {\n        return this.Kn.getEntry(t, e);\n    }\n    getAllFromCache(t, e) {\n        return this.Kn.getEntries(t, e);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class bo {\n    constructor(t) {\n        this.persistence = t, \n        /**\n         * Maps a target to the data about that target\n         */\n        this.Li = new Kn((t => Ie(t)), Ee), \n        /** The last received snapshot version. */\n        this.lastRemoteSnapshotVersion = ct.min(), \n        /** The highest numbered target ID encountered. */\n        this.highestTargetId = 0, \n        /** The highest sequence number encountered. */\n        this.Ui = 0, \n        /**\n         * A ordered bidirectional mapping between documents and the remote target\n         * IDs.\n         */\n        this.qi = new Io, this.targetCount = 0, this.Ki = br.gn();\n    }\n    forEachTarget(t, e) {\n        return this.Li.forEach(((t, n) => e(n))), yi.resolve();\n    }\n    getLastRemoteSnapshotVersion(t) {\n        return yi.resolve(this.lastRemoteSnapshotVersion);\n    }\n    getHighestSequenceNumber(t) {\n        return yi.resolve(this.Ui);\n    }\n    allocateTargetId(t) {\n        return this.highestTargetId = this.Ki.next(), yi.resolve(this.highestTargetId);\n    }\n    setTargetsMetadata(t, e, n) {\n        return n && (this.lastRemoteSnapshotVersion = n), e > this.Ui && (this.Ui = e), \n        yi.resolve();\n    }\n    Tn(t) {\n        this.Li.set(t.target, t);\n        const e = t.targetId;\n        e > this.highestTargetId && (this.Ki = new br(e), this.highestTargetId = e), t.sequenceNumber > this.Ui && (this.Ui = t.sequenceNumber);\n    }\n    addTargetData(t, e) {\n        return this.Tn(e), this.targetCount += 1, yi.resolve();\n    }\n    updateTargetData(t, e) {\n        return this.Tn(e), yi.resolve();\n    }\n    removeTargetData(t, e) {\n        return this.Li.delete(e.target), this.qi.vi(e.targetId), this.targetCount -= 1, \n        yi.resolve();\n    }\n    removeTargets(t, e, n) {\n        let s = 0;\n        const i = [];\n        return this.Li.forEach(((r, o) => {\n            o.sequenceNumber <= e && null === n.get(o.targetId) && (this.Li.delete(r), i.push(this.removeMatchingKeysForTargetId(t, o.targetId)), \n            s++);\n        })), yi.waitFor(i).next((() => s));\n    }\n    getTargetCount(t) {\n        return yi.resolve(this.targetCount);\n    }\n    getTargetData(t, e) {\n        const n = this.Li.get(e) || null;\n        return yi.resolve(n);\n    }\n    addMatchingKeys(t, e, n) {\n        return this.qi.bi(e, n), yi.resolve();\n    }\n    removeMatchingKeys(t, e, n) {\n        this.qi.Vi(e, n);\n        const s = this.persistence.referenceDelegate, i = [];\n        return s && e.forEach((e => {\n            i.push(s.markPotentiallyOrphaned(t, e));\n        })), yi.waitFor(i);\n    }\n    removeMatchingKeysForTargetId(t, e) {\n        return this.qi.vi(e), yi.resolve();\n    }\n    getMatchingKeysForTargetId(t, e) {\n        const n = this.qi.Di(e);\n        return yi.resolve(n);\n    }\n    containsKey(t, e) {\n        return yi.resolve(this.qi.containsKey(e));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\nclass Po {\n    /**\n     * The constructor accepts a factory for creating a reference delegate. This\n     * allows both the delegate and this instance to have strong references to\n     * each other without having nullable fields that would then need to be\n     * checked or asserted on every access.\n     */\n    constructor(t, e) {\n        this.Gi = {}, this.overlays = {}, this.es = new nt(0), this.ns = !1, this.ns = !0, \n        this.referenceDelegate = t(this), this.fs = new bo(this);\n        this.indexManager = new ar, this.ds = function(t) {\n            return new Ao(t);\n        }((t => this.referenceDelegate.Qi(t))), this.M = new ki(e), this._s = new yo(this.M);\n    }\n    start() {\n        return Promise.resolve();\n    }\n    shutdown() {\n        // No durable state to ensure is closed on shutdown.\n        return this.ns = !1, Promise.resolve();\n    }\n    get started() {\n        return this.ns;\n    }\n    setDatabaseDeletedListener() {\n        // No op.\n    }\n    setNetworkEnabled() {\n        // No op.\n    }\n    getIndexManager(t) {\n        // We do not currently support indices for memory persistence, so we can\n        // return the same shared instance of the memory index manager.\n        return this.indexManager;\n    }\n    getDocumentOverlayCache(t) {\n        let e = this.overlays[t.toKey()];\n        return e || (e = new po, this.overlays[t.toKey()] = e), e;\n    }\n    getMutationQueue(t, e) {\n        let n = this.Gi[t.toKey()];\n        return n || (n = new Eo(e, this.referenceDelegate), this.Gi[t.toKey()] = n), n;\n    }\n    getTargetCache() {\n        return this.fs;\n    }\n    getRemoteDocumentCache() {\n        return this.ds;\n    }\n    getBundleCache() {\n        return this._s;\n    }\n    runTransaction(t, e, n) {\n        O(\"MemoryPersistence\", \"Starting transaction:\", t);\n        const s = new Vo(this.es.next());\n        return this.referenceDelegate.ji(), n(s).next((t => this.referenceDelegate.Wi(s).next((() => t)))).toPromise().then((t => (s.raiseOnCommittedEvent(), \n        t)));\n    }\n    zi(t, e) {\n        return yi.or(Object.values(this.Gi).map((n => () => n.containsKey(t, e))));\n    }\n}\n\n/**\n * Memory persistence is not actually transactional, but future implementations\n * may have transaction-scoped state.\n */ class Vo extends gi {\n    constructor(t) {\n        super(), this.currentSequenceNumber = t;\n    }\n}\n\nclass vo {\n    constructor(t) {\n        this.persistence = t, \n        /** Tracks all documents that are active in Query views. */\n        this.Hi = new Io, \n        /** The list of documents that are potentially GCed after each transaction. */\n        this.Ji = null;\n    }\n    static Yi(t) {\n        return new vo(t);\n    }\n    get Xi() {\n        if (this.Ji) return this.Ji;\n        throw L();\n    }\n    addReference(t, e, n) {\n        return this.Hi.addReference(n, e), this.Xi.delete(n.toString()), yi.resolve();\n    }\n    removeReference(t, e, n) {\n        return this.Hi.removeReference(n, e), this.Xi.add(n.toString()), yi.resolve();\n    }\n    markPotentiallyOrphaned(t, e) {\n        return this.Xi.add(e.toString()), yi.resolve();\n    }\n    removeTarget(t, e) {\n        this.Hi.vi(e.targetId).forEach((t => this.Xi.add(t.toString())));\n        const n = this.persistence.getTargetCache();\n        return n.getMatchingKeysForTargetId(t, e.targetId).next((t => {\n            t.forEach((t => this.Xi.add(t.toString())));\n        })).next((() => n.removeTargetData(t, e)));\n    }\n    ji() {\n        this.Ji = new Set;\n    }\n    Wi(t) {\n        // Remove newly orphaned documents.\n        const e = this.persistence.getRemoteDocumentCache().newChangeBuffer();\n        return yi.forEach(this.Xi, (n => {\n            const s = xt.fromPath(n);\n            return this.Zi(t, s).next((t => {\n                t || e.removeEntry(s, ct.min());\n            }));\n        })).next((() => (this.Ji = null, e.apply(t))));\n    }\n    updateLimboDocument(t, e) {\n        return this.Zi(t, e).next((t => {\n            t ? this.Xi.delete(e.toString()) : this.Xi.add(e.toString());\n        }));\n    }\n    Qi(t) {\n        // For eager GC, we don't care about the document size, there are no size thresholds.\n        return 0;\n    }\n    Zi(t, e) {\n        return yi.or([ () => yi.resolve(this.Hi.containsKey(e)), () => this.persistence.getTargetCache().containsKey(t, e), () => this.persistence.zi(t, e) ]);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The format of the LocalStorage key that stores the client state is:\n//     firestore_clients_<persistence_prefix>_<instance_key>\n/** Assembles the key for a client state in WebStorage */\nfunction So(t, e) {\n    return `firestore_clients_${t}_${e}`;\n}\n\n// The format of the WebStorage key that stores the mutation state is:\n//     firestore_mutations_<persistence_prefix>_<batch_id>\n//     (for unauthenticated users)\n// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>\n\n// 'user_uid' is last to avoid needing to escape '_' characters that it might\n// contain.\n/** Assembles the key for a mutation batch in WebStorage */\nfunction Do(t, e, n) {\n    let s = `firestore_mutations_${t}_${n}`;\n    return e.isAuthenticated() && (s += `_${e.uid}`), s;\n}\n\n// The format of the WebStorage key that stores a query target's metadata is:\n//     firestore_targets_<persistence_prefix>_<target_id>\n/** Assembles the key for a query state in WebStorage */\nfunction Co(t, e) {\n    return `firestore_targets_${t}_${e}`;\n}\n\n// The WebStorage prefix that stores the primary tab's online state. The\n// format of the key is:\n//     firestore_online_state_<persistence_prefix>\n/**\n * Holds the state of a mutation batch, including its user ID, batch ID and\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\n */\n// Visible for testing\nclass xo {\n    constructor(t, e, n, s) {\n        this.user = t, this.batchId = e, this.state = n, this.error = s;\n    }\n    /**\n     * Parses a MutationMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static tr(t, e, n) {\n        const s = JSON.parse(n);\n        let i, r = \"object\" == typeof s && -1 !== [ \"pending\", \"acknowledged\", \"rejected\" ].indexOf(s.state) && (void 0 === s.error || \"object\" == typeof s.error);\n        return r && s.error && (r = \"string\" == typeof s.error.message && \"string\" == typeof s.error.code, \n        r && (i = new Q(s.error.code, s.error.message))), r ? new xo(t, e, s.state, i) : (F(\"SharedClientState\", `Failed to parse mutation state for ID '${e}': ${n}`), \n        null);\n    }\n    er() {\n        const t = {\n            state: this.state,\n            updateTimeMs: Date.now()\n        };\n        return this.error && (t.error = {\n            code: this.error.code,\n            message: this.error.message\n        }), JSON.stringify(t);\n    }\n}\n\n/**\n * Holds the state of a query target, including its target ID and whether the\n * target is 'not-current', 'current' or 'rejected'.\n */\n// Visible for testing\nclass No {\n    constructor(t, e, n) {\n        this.targetId = t, this.state = e, this.error = n;\n    }\n    /**\n     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static tr(t, e) {\n        const n = JSON.parse(e);\n        let s, i = \"object\" == typeof n && -1 !== [ \"not-current\", \"current\", \"rejected\" ].indexOf(n.state) && (void 0 === n.error || \"object\" == typeof n.error);\n        return i && n.error && (i = \"string\" == typeof n.error.message && \"string\" == typeof n.error.code, \n        i && (s = new Q(n.error.code, n.error.message))), i ? new No(t, n.state, s) : (F(\"SharedClientState\", `Failed to parse target state for ID '${t}': ${e}`), \n        null);\n    }\n    er() {\n        const t = {\n            state: this.state,\n            updateTimeMs: Date.now()\n        };\n        return this.error && (t.error = {\n            code: this.error.code,\n            message: this.error.message\n        }), JSON.stringify(t);\n    }\n}\n\n/**\n * This class represents the immutable ClientState for a client read from\n * WebStorage, containing the list of active query targets.\n */ class ko {\n    constructor(t, e) {\n        this.clientId = t, this.activeTargetIds = e;\n    }\n    /**\n     * Parses a RemoteClientState from the JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static tr(t, e) {\n        const n = JSON.parse(e);\n        let s = \"object\" == typeof n && n.activeTargetIds instanceof Array, i = Zn();\n        for (let t = 0; s && t < n.activeTargetIds.length; ++t) s = Ct(n.activeTargetIds[t]), \n        i = i.add(n.activeTargetIds[t]);\n        return s ? new ko(t, i) : (F(\"SharedClientState\", `Failed to parse client data for instance '${t}': ${e}`), \n        null);\n    }\n}\n\n/**\n * This class represents the online state for all clients participating in\n * multi-tab. The online state is only written to by the primary client, and\n * used in secondary clients to update their query views.\n */ class Mo {\n    constructor(t, e) {\n        this.clientId = t, this.onlineState = e;\n    }\n    /**\n     * Parses a SharedOnlineState from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static tr(t) {\n        const e = JSON.parse(t);\n        return \"object\" == typeof e && -1 !== [ \"Unknown\", \"Online\", \"Offline\" ].indexOf(e.onlineState) && \"string\" == typeof e.clientId ? new Mo(e.clientId, e.onlineState) : (F(\"SharedClientState\", `Failed to parse online state: ${t}`), \n        null);\n    }\n}\n\n/**\n * Metadata state of the local client. Unlike `RemoteClientState`, this class is\n * mutable and keeps track of all pending mutations, which allows us to\n * update the range of pending mutation batch IDs as new mutations are added or\n * removed.\n *\n * The data in `LocalClientState` is not read from WebStorage and instead\n * updated via its instance methods. The updated state can be serialized via\n * `toWebStorageJSON()`.\n */\n// Visible for testing.\nclass Oo {\n    constructor() {\n        this.activeTargetIds = Zn();\n    }\n    nr(t) {\n        this.activeTargetIds = this.activeTargetIds.add(t);\n    }\n    sr(t) {\n        this.activeTargetIds = this.activeTargetIds.delete(t);\n    }\n    /**\n     * Converts this entry into a JSON-encoded format we can use for WebStorage.\n     * Does not encode `clientId` as it is part of the key in WebStorage.\n     */    er() {\n        const t = {\n            activeTargetIds: this.activeTargetIds.toArray(),\n            updateTimeMs: Date.now()\n        };\n        return JSON.stringify(t);\n    }\n}\n\n/**\n * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the\n * backing store for the SharedClientState. It keeps track of all active\n * clients and supports modifications of the local client's data.\n */ class Fo {\n    constructor(t, e, n, s, i) {\n        this.window = t, this.Yn = e, this.persistenceKey = n, this.ir = s, this.syncEngine = null, \n        this.onlineStateHandler = null, this.sequenceNumberHandler = null, this.rr = this.ur.bind(this), \n        this.ar = new fe(rt), this.started = !1, \n        /**\n         * Captures WebStorage events that occur before `start()` is called. These\n         * events are replayed once `WebStorageSharedClientState` is started.\n         */\n        this.cr = [];\n        // Escape the special characters mentioned here:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n        const r = n.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n        this.storage = this.window.localStorage, this.currentUser = i, this.hr = So(this.persistenceKey, this.ir), \n        this.lr = \n        /** Assembles the key for the current sequence number. */\n        function(t) {\n            return `firestore_sequence_number_${t}`;\n        }\n        /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (this.persistenceKey), this.ar = this.ar.insert(this.ir, new Oo), this.dr = new RegExp(`^firestore_clients_${r}_([^_]*)$`), \n        this._r = new RegExp(`^firestore_mutations_${r}_(\\\\d+)(?:_(.*))?$`), this.wr = new RegExp(`^firestore_targets_${r}_(\\\\d+)$`), \n        this.mr = \n        /** Assembles the key for the online state of the primary tab. */\n        function(t) {\n            return `firestore_online_state_${t}`;\n        }\n        // The WebStorage prefix that plays as a event to indicate the remote documents\n        // might have changed due to some secondary tabs loading a bundle.\n        // format of the key is:\n        //     firestore_bundle_loaded_v2_<persistenceKey>\n        // The version ending with \"v2\" stores the list of modified collection groups.\n        (this.persistenceKey), this.gr = function(t) {\n            return `firestore_bundle_loaded_v2_${t}`;\n        }\n        // The WebStorage key prefix for the key that stores the last sequence number allocated. The key\n        // looks like 'firestore_sequence_number_<persistence_prefix>'.\n        (this.persistenceKey), \n        // Rather than adding the storage observer during start(), we add the\n        // storage observer during initialization. This ensures that we collect\n        // events before other components populate their initial state (during their\n        // respective start() calls). Otherwise, we might for example miss a\n        // mutation that is added after LocalStore's start() processed the existing\n        // mutations but before we observe WebStorage events.\n        this.window.addEventListener(\"storage\", this.rr);\n    }\n    /** Returns 'true' if WebStorage is available in the current environment. */    static vt(t) {\n        return !(!t || !t.localStorage);\n    }\n    async start() {\n        // Retrieve the list of existing clients to backfill the data in\n        // SharedClientState.\n        const t = await this.syncEngine.Fs();\n        for (const e of t) {\n            if (e === this.ir) continue;\n            const t = this.getItem(So(this.persistenceKey, e));\n            if (t) {\n                const n = ko.tr(e, t);\n                n && (this.ar = this.ar.insert(n.clientId, n));\n            }\n        }\n        this.yr();\n        // Check if there is an existing online state and call the callback handler\n        // if applicable.\n        const e = this.storage.getItem(this.mr);\n        if (e) {\n            const t = this.pr(e);\n            t && this.Ir(t);\n        }\n        for (const t of this.cr) this.ur(t);\n        this.cr = [], \n        // Register a window unload hook to remove the client metadata entry from\n        // WebStorage even if `shutdown()` was not called.\n        this.window.addEventListener(\"pagehide\", (() => this.shutdown())), this.started = !0;\n    }\n    writeSequenceNumber(t) {\n        this.setItem(this.lr, JSON.stringify(t));\n    }\n    getAllActiveQueryTargets() {\n        return this.Tr(this.ar);\n    }\n    isActiveQueryTarget(t) {\n        let e = !1;\n        return this.ar.forEach(((n, s) => {\n            s.activeTargetIds.has(t) && (e = !0);\n        })), e;\n    }\n    addPendingMutation(t) {\n        this.Er(t, \"pending\");\n    }\n    updateMutationState(t, e, n) {\n        this.Er(t, e, n), \n        // Once a final mutation result is observed by other clients, they no longer\n        // access the mutation's metadata entry. Since WebStorage replays events\n        // in order, it is safe to delete the entry right after updating it.\n        this.Ar(t);\n    }\n    addLocalQueryTarget(t) {\n        let e = \"not-current\";\n        // Lookup an existing query state if the target ID was already registered\n        // by another tab\n                if (this.isActiveQueryTarget(t)) {\n            const n = this.storage.getItem(Co(this.persistenceKey, t));\n            if (n) {\n                const s = No.tr(t, n);\n                s && (e = s.state);\n            }\n        }\n        return this.Rr.nr(t), this.yr(), e;\n    }\n    removeLocalQueryTarget(t) {\n        this.Rr.sr(t), this.yr();\n    }\n    isLocalQueryTarget(t) {\n        return this.Rr.activeTargetIds.has(t);\n    }\n    clearQueryState(t) {\n        this.removeItem(Co(this.persistenceKey, t));\n    }\n    updateQueryState(t, e, n) {\n        this.br(t, e, n);\n    }\n    handleUserChange(t, e, n) {\n        e.forEach((t => {\n            this.Ar(t);\n        })), this.currentUser = t, n.forEach((t => {\n            this.addPendingMutation(t);\n        }));\n    }\n    setOnlineState(t) {\n        this.Pr(t);\n    }\n    notifyBundleLoaded(t) {\n        this.Vr(t);\n    }\n    shutdown() {\n        this.started && (this.window.removeEventListener(\"storage\", this.rr), this.removeItem(this.hr), \n        this.started = !1);\n    }\n    getItem(t) {\n        const e = this.storage.getItem(t);\n        return O(\"SharedClientState\", \"READ\", t, e), e;\n    }\n    setItem(t, e) {\n        O(\"SharedClientState\", \"SET\", t, e), this.storage.setItem(t, e);\n    }\n    removeItem(t) {\n        O(\"SharedClientState\", \"REMOVE\", t), this.storage.removeItem(t);\n    }\n    ur(t) {\n        // Note: The function is typed to take Event to be interface-compatible with\n        // `Window.addEventListener`.\n        const e = t;\n        if (e.storageArea === this.storage) {\n            if (O(\"SharedClientState\", \"EVENT\", e.key, e.newValue), e.key === this.hr) return void F(\"Received WebStorage notification for local change. Another client might have garbage-collected our state\");\n            this.Yn.enqueueRetryable((async () => {\n                if (this.started) {\n                    if (null !== e.key) if (this.dr.test(e.key)) {\n                        if (null == e.newValue) {\n                            const t = this.vr(e.key);\n                            return this.Sr(t, null);\n                        }\n                        {\n                            const t = this.Dr(e.key, e.newValue);\n                            if (t) return this.Sr(t.clientId, t);\n                        }\n                    } else if (this._r.test(e.key)) {\n                        if (null !== e.newValue) {\n                            const t = this.Cr(e.key, e.newValue);\n                            if (t) return this.Nr(t);\n                        }\n                    } else if (this.wr.test(e.key)) {\n                        if (null !== e.newValue) {\n                            const t = this.kr(e.key, e.newValue);\n                            if (t) return this.Mr(t);\n                        }\n                    } else if (e.key === this.mr) {\n                        if (null !== e.newValue) {\n                            const t = this.pr(e.newValue);\n                            if (t) return this.Ir(t);\n                        }\n                    } else if (e.key === this.lr) {\n                        const t = function(t) {\n                            let e = nt.A;\n                            if (null != t) try {\n                                const n = JSON.parse(t);\n                                U(\"number\" == typeof n), e = n;\n                            } catch (t) {\n                                F(\"SharedClientState\", \"Failed to read sequence number from WebStorage\", t);\n                            }\n                            return e;\n                        }\n                        /**\n * `MemorySharedClientState` is a simple implementation of SharedClientState for\n * clients using memory persistence. The state in this class remains fully\n * isolated and no synchronization is performed.\n */ (e.newValue);\n                        t !== nt.A && this.sequenceNumberHandler(t);\n                    } else if (e.key === this.gr) {\n                        const t = this.Or(e.newValue);\n                        await Promise.all(t.map((t => this.syncEngine.Fr(t))));\n                    }\n                } else this.cr.push(e);\n            }));\n        }\n    }\n    get Rr() {\n        return this.ar.get(this.ir);\n    }\n    yr() {\n        this.setItem(this.hr, this.Rr.er());\n    }\n    Er(t, e, n) {\n        const s = new xo(this.currentUser, t, e, n), i = Do(this.persistenceKey, this.currentUser, t);\n        this.setItem(i, s.er());\n    }\n    Ar(t) {\n        const e = Do(this.persistenceKey, this.currentUser, t);\n        this.removeItem(e);\n    }\n    Pr(t) {\n        const e = {\n            clientId: this.ir,\n            onlineState: t\n        };\n        this.storage.setItem(this.mr, JSON.stringify(e));\n    }\n    br(t, e, n) {\n        const s = Co(this.persistenceKey, t), i = new No(t, e, n);\n        this.setItem(s, i.er());\n    }\n    Vr(t) {\n        const e = JSON.stringify(Array.from(t));\n        this.setItem(this.gr, e);\n    }\n    /**\n     * Parses a client state key in WebStorage. Returns null if the key does not\n     * match the expected key format.\n     */    vr(t) {\n        const e = this.dr.exec(t);\n        return e ? e[1] : null;\n    }\n    /**\n     * Parses a client state in WebStorage. Returns 'null' if the value could not\n     * be parsed.\n     */    Dr(t, e) {\n        const n = this.vr(t);\n        return ko.tr(n, e);\n    }\n    /**\n     * Parses a mutation batch state in WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    Cr(t, e) {\n        const n = this._r.exec(t), s = Number(n[1]), i = void 0 !== n[2] ? n[2] : null;\n        return xo.tr(new C(i), s, e);\n    }\n    /**\n     * Parses a query target state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    kr(t, e) {\n        const n = this.wr.exec(t), s = Number(n[1]);\n        return No.tr(s, e);\n    }\n    /**\n     * Parses an online state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    pr(t) {\n        return Mo.tr(t);\n    }\n    Or(t) {\n        return JSON.parse(t);\n    }\n    async Nr(t) {\n        if (t.user.uid === this.currentUser.uid) return this.syncEngine.$r(t.batchId, t.state, t.error);\n        O(\"SharedClientState\", `Ignoring mutation for non-active user ${t.user.uid}`);\n    }\n    Mr(t) {\n        return this.syncEngine.Br(t.targetId, t.state, t.error);\n    }\n    Sr(t, e) {\n        const n = e ? this.ar.insert(t, e) : this.ar.remove(t), s = this.Tr(this.ar), i = this.Tr(n), r = [], o = [];\n        return i.forEach((t => {\n            s.has(t) || r.push(t);\n        })), s.forEach((t => {\n            i.has(t) || o.push(t);\n        })), this.syncEngine.Lr(r, o).then((() => {\n            this.ar = n;\n        }));\n    }\n    Ir(t) {\n        // We check whether the client that wrote this online state is still active\n        // by comparing its client ID to the list of clients kept active in\n        // IndexedDb. If a client does not update their IndexedDb client state\n        // within 5 seconds, it is considered inactive and we don't emit an online\n        // state event.\n        this.ar.get(t.clientId) && this.onlineStateHandler(t.onlineState);\n    }\n    Tr(t) {\n        let e = Zn();\n        return t.forEach(((t, n) => {\n            e = e.unionWith(n.activeTargetIds);\n        })), e;\n    }\n}\n\nclass $o {\n    constructor() {\n        this.Ur = new Oo, this.qr = {}, this.onlineStateHandler = null, this.sequenceNumberHandler = null;\n    }\n    addPendingMutation(t) {\n        // No op.\n    }\n    updateMutationState(t, e, n) {\n        // No op.\n    }\n    addLocalQueryTarget(t) {\n        return this.Ur.nr(t), this.qr[t] || \"not-current\";\n    }\n    updateQueryState(t, e, n) {\n        this.qr[t] = e;\n    }\n    removeLocalQueryTarget(t) {\n        this.Ur.sr(t);\n    }\n    isLocalQueryTarget(t) {\n        return this.Ur.activeTargetIds.has(t);\n    }\n    clearQueryState(t) {\n        delete this.qr[t];\n    }\n    getAllActiveQueryTargets() {\n        return this.Ur.activeTargetIds;\n    }\n    isActiveQueryTarget(t) {\n        return this.Ur.activeTargetIds.has(t);\n    }\n    start() {\n        return this.Ur = new Oo, Promise.resolve();\n    }\n    handleUserChange(t, e, n) {\n        // No op.\n    }\n    setOnlineState(t) {\n        // No op.\n    }\n    shutdown() {}\n    writeSequenceNumber(t) {}\n    notifyBundleLoaded(t) {\n        // No op.\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Bo {\n    Kr(t) {\n        // No-op.\n    }\n    shutdown() {\n        // No-op.\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `window` are guarded by BrowserConnectivityMonitor.isAvailable()\n/* eslint-disable no-restricted-globals */\n/**\n * Browser implementation of ConnectivityMonitor.\n */\nclass Lo {\n    constructor() {\n        this.Gr = () => this.Qr(), this.jr = () => this.Wr(), this.zr = [], this.Hr();\n    }\n    Kr(t) {\n        this.zr.push(t);\n    }\n    shutdown() {\n        window.removeEventListener(\"online\", this.Gr), window.removeEventListener(\"offline\", this.jr);\n    }\n    Hr() {\n        window.addEventListener(\"online\", this.Gr), window.addEventListener(\"offline\", this.jr);\n    }\n    Qr() {\n        O(\"ConnectivityMonitor\", \"Network connectivity changed: AVAILABLE\");\n        for (const t of this.zr) t(0 /* AVAILABLE */);\n    }\n    Wr() {\n        O(\"ConnectivityMonitor\", \"Network connectivity changed: UNAVAILABLE\");\n        for (const t of this.zr) t(1 /* UNAVAILABLE */);\n    }\n    // TODO(chenbrian): Consider passing in window either into this component or\n    // here for testing via FakeWindow.\n    /** Checks that all used attributes of window are available. */\n    static vt() {\n        return \"undefined\" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Uo = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nclass qo {\n    constructor(t) {\n        this.Jr = t.Jr, this.Yr = t.Yr;\n    }\n    Xr(t) {\n        this.Zr = t;\n    }\n    eo(t) {\n        this.no = t;\n    }\n    onMessage(t) {\n        this.so = t;\n    }\n    close() {\n        this.Yr();\n    }\n    send(t) {\n        this.Jr(t);\n    }\n    io() {\n        this.Zr();\n    }\n    ro(t) {\n        this.no(t);\n    }\n    oo(t) {\n        this.so(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Ko extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.uo = e + \"://\" + t.host, this.ao = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    co(t, e, n, s, i) {\n        const r = this.ho(t, e);\n        O(\"RestConnection\", \"Sending: \", r, n);\n        const o = {};\n        return this.lo(o, s, i), this.fo(t, r, o, n).then((t => (O(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw $(\"RestConnection\", `${t} failed with error: `, e, \"url: \", r, \"request:\", n), \n            e;\n        }));\n    }\n    _o(t, e, n, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.co(t, e, n, s, i);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    lo(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + x, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    ho(t, e) {\n        const n = Uo[t];\n        return `${this.uo}/v1/${e}:${n}`;\n    }\n} {\n    constructor(t) {\n        super(t), this.forceLongPolling = t.forceLongPolling, this.autoDetectLongPolling = t.autoDetectLongPolling, \n        this.useFetchStreams = t.useFetchStreams;\n    }\n    fo(t, e, n, s) {\n        return new Promise(((i, r) => {\n            const o = new XhrIo;\n            o.listenOnce(EventType.COMPLETE, (() => {\n                try {\n                    switch (o.getLastErrorCode()) {\n                      case ErrorCode.NO_ERROR:\n                        const e = o.getResponseJson();\n                        O(\"Connection\", \"XHR received:\", JSON.stringify(e)), i(e);\n                        break;\n\n                      case ErrorCode.TIMEOUT:\n                        O(\"Connection\", 'RPC \"' + t + '\" timed out'), r(new Q(G.DEADLINE_EXCEEDED, \"Request time out\"));\n                        break;\n\n                      case ErrorCode.HTTP_ERROR:\n                        const n = o.getStatus();\n                        if (O(\"Connection\", 'RPC \"' + t + '\" failed with status:', n, \"response text:\", o.getResponseText()), \n                        n > 0) {\n                            const t = o.getResponseJson().error;\n                            if (t && t.status && t.message) {\n                                const e = function(t) {\n                                    const e = t.toLowerCase().replace(/_/g, \"-\");\n                                    return Object.values(G).indexOf(e) >= 0 ? e : G.UNKNOWN;\n                                }(t.status);\n                                r(new Q(e, t.message));\n                            } else r(new Q(G.UNKNOWN, \"Server responded with status \" + o.getStatus()));\n                        } else \n                        // If we received an HTTP_ERROR but there's no status code,\n                        // it's most probably a connection issue\n                        r(new Q(G.UNAVAILABLE, \"Connection failed.\"));\n                        break;\n\n                      default:\n                        L();\n                    }\n                } finally {\n                    O(\"Connection\", 'RPC \"' + t + '\" completed.');\n                }\n            }));\n            const u = JSON.stringify(s);\n            o.send(e, \"POST\", u, n, 15);\n        }));\n    }\n    wo(t, e, n) {\n        const s = [ this.uo, \"/\", \"google.firestore.v1.Firestore\", \"/\", t, \"/channel\" ], i = createWebChannelTransport(), r = getStatEventTarget(), o = {\n            // Required for backend stickiness, routing behavior is based on this\n            // parameter.\n            httpSessionIdParam: \"gsessionid\",\n            initMessageHeaders: {},\n            messageUrlParams: {\n                // This param is used to improve routing and project isolation by the\n                // backend and must be included in every request.\n                database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`\n            },\n            sendRawJson: !0,\n            supportsCrossDomainXhr: !0,\n            internalChannelParams: {\n                // Override the default timeout (randomized between 10-20 seconds) since\n                // a large write batch on a slow internet connection may take a long\n                // time to send to the backend. Rather than have WebChannel impose a\n                // tight timeout which could lead to infinite timeouts and retries, we\n                // set it very large (5-10 minutes) and rely on the browser's builtin\n                // timeouts to kick in if the request isn't working.\n                forwardChannelRequestTimeoutMs: 6e5\n            },\n            forceLongPolling: this.forceLongPolling,\n            detectBufferingProxy: this.autoDetectLongPolling\n        };\n        this.useFetchStreams && (o.xmlHttpFactory = new FetchXmlHttpFactory({})), this.lo(o.initMessageHeaders, e, n), \n        // Sending the custom headers we just added to request.initMessageHeaders\n        // (Authorization, etc.) will trigger the browser to make a CORS preflight\n        // request because the XHR will no longer meet the criteria for a \"simple\"\n        // CORS request:\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\n        // Therefore to avoid the CORS preflight request (an extra network\n        // roundtrip), we use the httpHeadersOverwriteParam option to specify that\n        // the headers should instead be encoded into a special \"$httpHeaders\" query\n        // parameter, which is recognized by the webchannel backend. This is\n        // formally defined here:\n        // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32\n        // TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request\n        // doesn't have an Origin header. So we have to exclude a few browser environments that are\n        // known to (sometimes) not include an Origin. See\n        // https://github.com/firebase/firebase-js-sdk/issues/1491.\n        isMobileCordova() || isReactNative() || isElectron() || isIE() || isUWP() || isBrowserExtension() || (o.httpHeadersOverwriteParam = \"$httpHeaders\");\n        const u = s.join(\"\");\n        O(\"Connection\", \"Creating WebChannel: \" + u, o);\n        const a = i.createWebChannel(u, o);\n        // WebChannel supports sending the first message with the handshake - saving\n        // a network round trip. However, it will have to call send in the same\n        // JS event loop as open. In order to enforce this, we delay actually\n        // opening the WebChannel until send is called. Whether we have called\n        // open is tracked with this variable.\n                let c = !1, h = !1;\n        // A flag to determine whether the stream was closed (by us or through an\n        // error/close event) to avoid delivering multiple close events or sending\n        // on a closed stream\n                const l = new qo({\n            Jr: t => {\n                h ? O(\"Connection\", \"Not sending because WebChannel is closed:\", t) : (c || (O(\"Connection\", \"Opening WebChannel transport.\"), \n                a.open(), c = !0), O(\"Connection\", \"WebChannel sending:\", t), a.send(t));\n            },\n            Yr: () => a.close()\n        }), y = (t, e, n) => {\n            // TODO(dimond): closure typing seems broken because WebChannel does\n            // not implement goog.events.Listenable\n            t.listen(e, (t => {\n                try {\n                    n(t);\n                } catch (t) {\n                    setTimeout((() => {\n                        throw t;\n                    }), 0);\n                }\n            }));\n        };\n        // Closure events are guarded and exceptions are swallowed, so catch any\n        // exception and rethrow using a setTimeout so they become visible again.\n        // Note that eventually this function could go away if we are confident\n        // enough the code is exception free.\n                return y(a, WebChannel.EventType.OPEN, (() => {\n            h || O(\"Connection\", \"WebChannel transport opened.\");\n        })), y(a, WebChannel.EventType.CLOSE, (() => {\n            h || (h = !0, O(\"Connection\", \"WebChannel transport closed\"), l.ro());\n        })), y(a, WebChannel.EventType.ERROR, (t => {\n            h || (h = !0, $(\"Connection\", \"WebChannel transport errored:\", t), l.ro(new Q(G.UNAVAILABLE, \"The operation could not be completed\")));\n        })), y(a, WebChannel.EventType.MESSAGE, (t => {\n            var e;\n            if (!h) {\n                const n = t.data[0];\n                U(!!n);\n                // TODO(b/35143891): There is a bug in One Platform that caused errors\n                // (and only errors) to be wrapped in an extra array. To be forward\n                // compatible with the bug we need to check either condition. The latter\n                // can be removed once the fix has been rolled out.\n                // Use any because msgData.error is not typed.\n                const s = n, i = s.error || (null === (e = s[0]) || void 0 === e ? void 0 : e.error);\n                if (i) {\n                    O(\"Connection\", \"WebChannel received error:\", i);\n                    // error.status will be a string like 'OK' or 'NOT_FOUND'.\n                    const t = i.status;\n                    let e = \n                    /**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\n                    function(t) {\n                        // lookup by string\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        const e = Bn[t];\n                        if (void 0 !== e) return qn(e);\n                    }(t), n = i.message;\n                    void 0 === e && (e = G.INTERNAL, n = \"Unknown error status: \" + t + \" with message \" + i.message), \n                    // Mark closed so no further events are propagated\n                    h = !0, l.ro(new Q(e, n)), a.close();\n                } else O(\"Connection\", \"WebChannel received:\", n), l.oo(n);\n            }\n        })), y(r, Event.STAT_EVENT, (t => {\n            t.stat === Stat.PROXY ? O(\"Connection\", \"Detected buffering proxy\") : t.stat === Stat.NOPROXY && O(\"Connection\", \"Detected no buffering proxy\");\n        })), setTimeout((() => {\n            // Technically we could/should wait for the WebChannel opened event,\n            // but because we want to send the first message with the WebChannel\n            // handshake we pretend the channel opened here (asynchronously), and\n            // then delay the actual open until the first message is sent.\n            l.io();\n        }), 0), l;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the WebChannelConnection for the browser. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'window' implementation or null if not available. */\nfunction Go() {\n    // `window` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof window ? window : null;\n}\n\n/** The Platform's 'document' implementation or null if not available. */ function Qo() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function jo(t) {\n    return new ls(t, /* useProto3Json= */ !0);\n}\n\n/**\n * An instance of the Platform's 'TextEncoder' implementation.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass Wo {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , s = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , i = 6e4) {\n        this.Yn = t, this.timerId = e, this.mo = n, this.yo = s, this.po = i, this.Io = 0, \n        this.To = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.Eo = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.Io = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Ao() {\n        this.Io = this.po;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    Ro(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.Io + this.bo()), n = Math.max(0, Date.now() - this.Eo), s = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                s > 0 && O(\"ExponentialBackoff\", `Backing off for ${s} ms (base delay: ${this.Io} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.To = this.Yn.enqueueAfterDelay(this.timerId, s, (() => (this.Eo = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.Io *= this.yo, this.Io < this.mo && (this.Io = this.mo), this.Io > this.po && (this.Io = this.po);\n    }\n    Po() {\n        null !== this.To && (this.To.skipDelay(), this.To = null);\n    }\n    cancel() {\n        null !== this.To && (this.To.cancel(), this.To = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    bo() {\n        return (Math.random() - .5) * this.Io;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *   - Closing idle streams after 60 seconds of inactivity\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be start()ed before messages can\n * be sent and received. The PersistentStream will call the onOpen() function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a start() fail, PersistentStream will call the registered onClose()\n * listener with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\nclass zo {\n    constructor(t, e, n, s, i, r, o, u) {\n        this.Yn = t, this.Vo = n, this.vo = s, this.So = i, this.authCredentialsProvider = r, \n        this.appCheckCredentialsProvider = o, this.listener = u, this.state = 0 /* Initial */ , \n        /**\n         * A close count that's incremented every time the stream is closed; used by\n         * getCloseGuardedDispatcher() to invalidate callbacks that happen after\n         * close.\n         */\n        this.Do = 0, this.Co = null, this.xo = null, this.stream = null, this.No = new Wo(t, e);\n    }\n    /**\n     * Returns true if start() has been called and no error has occurred. True\n     * indicates the stream is open or in the process of opening (which\n     * encompasses respecting backoff, getting auth tokens, and starting the\n     * actual RPC). Use isOpen() to determine if the stream is open and ready for\n     * outbound requests.\n     */    ko() {\n        return 1 /* Starting */ === this.state || 5 /* Backoff */ === this.state || this.Mo();\n    }\n    /**\n     * Returns true if the underlying RPC is open (the onOpen() listener has been\n     * called) and the stream is ready for outbound requests.\n     */    Mo() {\n        return 2 /* Open */ === this.state || 3 /* Healthy */ === this.state;\n    }\n    /**\n     * Starts the RPC. Only allowed if isStarted() returns false. The stream is\n     * not immediately ready for use: onOpen() will be invoked when the RPC is\n     * ready for outbound requests, at which point isOpen() will return true.\n     *\n     * When start returns, isStarted() will return true.\n     */    start() {\n        4 /* Error */ !== this.state ? this.auth() : this.Oo();\n    }\n    /**\n     * Stops the RPC. This call is idempotent and allowed regardless of the\n     * current isStarted() state.\n     *\n     * When stop returns, isStarted() and isOpen() will both return false.\n     */    async stop() {\n        this.ko() && await this.close(0 /* Initial */);\n    }\n    /**\n     * After an error the stream will usually back off on the next attempt to\n     * start it. If the error warrants an immediate restart of the stream, the\n     * sender can use this to indicate that the receiver should not back off.\n     *\n     * Each error will call the onClose() listener. That function can decide to\n     * inhibit backoff if required.\n     */    Fo() {\n        this.state = 0 /* Initial */ , this.No.reset();\n    }\n    /**\n     * Marks this stream as idle. If no further actions are performed on the\n     * stream for one minute, the stream will automatically close itself and\n     * notify the stream's onClose() handler with Status.OK. The stream will then\n     * be in a !isStarted() state, requiring the caller to start the stream again\n     * before further use.\n     *\n     * Only streams that are in state 'Open' can be marked idle, as all other\n     * states imply pending network operations.\n     */    $o() {\n        // Starts the idle time if we are in state 'Open' and are not yet already\n        // running a timer (in which case the previous idle timeout still applies).\n        this.Mo() && null === this.Co && (this.Co = this.Yn.enqueueAfterDelay(this.Vo, 6e4, (() => this.Bo())));\n    }\n    /** Sends a message to the underlying stream. */    Lo(t) {\n        this.Uo(), this.stream.send(t);\n    }\n    /** Called by the idle timer when the stream should close due to inactivity. */    async Bo() {\n        if (this.Mo()) \n        // When timing out an idle stream there's no reason to force the stream into backoff when\n        // it restarts so set the stream state to Initial instead of Error.\n        return this.close(0 /* Initial */);\n    }\n    /** Marks the stream as active again. */    Uo() {\n        this.Co && (this.Co.cancel(), this.Co = null);\n    }\n    /** Cancels the health check delayed operation. */    qo() {\n        this.xo && (this.xo.cancel(), this.xo = null);\n    }\n    /**\n     * Closes the stream and cleans up as necessary:\n     *\n     * * closes the underlying GRPC stream;\n     * * calls the onClose handler with the given 'error';\n     * * sets internal stream state to 'finalState';\n     * * adjusts the backoff timer based on the error\n     *\n     * A new stream can be opened by calling start().\n     *\n     * @param finalState - the intended state of the stream after closing.\n     * @param error - the error the connection was closed with.\n     */    async close(t, e) {\n        // Cancel any outstanding timers (they're guaranteed not to execute).\n        this.Uo(), this.qo(), this.No.cancel(), \n        // Invalidates any stream-related callbacks (e.g. from auth or the\n        // underlying stream), guaranteeing they won't execute.\n        this.Do++, 4 /* Error */ !== t ? \n        // If this is an intentional close ensure we don't delay our next connection attempt.\n        this.No.reset() : e && e.code === G.RESOURCE_EXHAUSTED ? (\n        // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n        F(e.toString()), F(\"Using maximum backoff delay to prevent overloading the backend.\"), \n        this.No.Ao()) : e && e.code === G.UNAUTHENTICATED && 3 /* Healthy */ !== this.state && (\n        // \"unauthenticated\" error means the token was rejected. This should rarely\n        // happen since both Auth and AppCheck ensure a sufficient TTL when we\n        // request a token. If a user manually resets their system clock this can\n        // fail, however. In this case, we should get a Code.UNAUTHENTICATED error\n        // before we received the first message and we need to invalidate the token\n        // to ensure that we fetch a new token.\n        this.authCredentialsProvider.invalidateToken(), this.appCheckCredentialsProvider.invalidateToken()), \n        // Clean up the underlying stream because we are no longer interested in events.\n        null !== this.stream && (this.Ko(), this.stream.close(), this.stream = null), \n        // This state must be assigned before calling onClose() to allow the callback to\n        // inhibit backoff or otherwise manipulate the state in its non-started state.\n        this.state = t, \n        // Notify the listener that the stream closed.\n        await this.listener.eo(e);\n    }\n    /**\n     * Can be overridden to perform additional cleanup before the stream is closed.\n     * Calling super.tearDown() is not required.\n     */    Ko() {}\n    auth() {\n        this.state = 1 /* Starting */;\n        const t = this.Go(this.Do), e = this.Do;\n        // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n                Promise.all([ this.authCredentialsProvider.getToken(), this.appCheckCredentialsProvider.getToken() ]).then((([t, n]) => {\n            // Stream can be stopped while waiting for authentication.\n            // TODO(mikelehen): We really should just use dispatchIfNotClosed\n            // and let this dispatch onto the queue, but that opened a spec test can\n            // of worms that I don't want to deal with in this PR.\n            this.Do === e && \n            // Normally we'd have to schedule the callback on the AsyncQueue.\n            // However, the following calls are safe to be called outside the\n            // AsyncQueue since they don't chain asynchronous calls\n            this.Qo(t, n);\n        }), (e => {\n            t((() => {\n                const t = new Q(G.UNKNOWN, \"Fetching auth token failed: \" + e.message);\n                return this.jo(t);\n            }));\n        }));\n    }\n    Qo(t, e) {\n        const n = this.Go(this.Do);\n        this.stream = this.Wo(t, e), this.stream.Xr((() => {\n            n((() => (this.state = 2 /* Open */ , this.xo = this.Yn.enqueueAfterDelay(this.vo, 1e4, (() => (this.Mo() && (this.state = 3 /* Healthy */), \n            Promise.resolve()))), this.listener.Xr())));\n        })), this.stream.eo((t => {\n            n((() => this.jo(t)));\n        })), this.stream.onMessage((t => {\n            n((() => this.onMessage(t)));\n        }));\n    }\n    Oo() {\n        this.state = 5 /* Backoff */ , this.No.Ro((async () => {\n            this.state = 0 /* Initial */ , this.start();\n        }));\n    }\n    // Visible for tests\n    jo(t) {\n        // In theory the stream could close cleanly, however, in our current model\n        // we never expect this to happen because if we stop a stream ourselves,\n        // this callback will never be called. To prevent cases where we retry\n        // without a backoff accidentally, we set the stream to error in all cases.\n        return O(\"PersistentStream\", `close with error: ${t}`), this.stream = null, this.close(4 /* Error */ , t);\n    }\n    /**\n     * Returns a \"dispatcher\" function that dispatches operations onto the\n     * AsyncQueue but only runs them if closeCount remains unchanged. This allows\n     * us to turn auth / stream callbacks into no-ops if the stream is closed /\n     * re-opened, etc.\n     */    Go(t) {\n        return e => {\n            this.Yn.enqueueAndForget((() => this.Do === t ? e() : (O(\"PersistentStream\", \"stream callback skipped by getCloseGuardedDispatcher.\"), \n            Promise.resolve())));\n        };\n    }\n}\n\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the onOpen() listener, any number of\n * listen() and unlisten() calls can be made to control what changes will be\n * sent from the server for ListenResponses.\n */ class Ho extends zo {\n    constructor(t, e, n, s, i, r) {\n        super(t, \"listen_stream_connection_backoff\" /* ListenStreamConnectionBackoff */ , \"listen_stream_idle\" /* ListenStreamIdle */ , \"health_check_timeout\" /* HealthCheckTimeout */ , e, n, s, r), \n        this.M = i;\n    }\n    Wo(t, e) {\n        return this.So.wo(\"Listen\", t, e);\n    }\n    onMessage(t) {\n        // A successful response means the stream is healthy\n        this.No.reset();\n        const e = Vs(this.M, t), n = function(t) {\n            // We have only reached a consistent snapshot for the entire stream if there\n            // is a read_time set and it applies to all targets (i.e. the list of\n            // targets is empty). The backend is guaranteed to send such responses.\n            if (!(\"targetChange\" in t)) return ct.min();\n            const e = t.targetChange;\n            return e.targetIds && e.targetIds.length ? ct.min() : e.readTime ? ws(e.readTime) : ct.min();\n        }(t);\n        return this.listener.zo(e, n);\n    }\n    /**\n     * Registers interest in the results of the given target. If the target\n     * includes a resumeToken it will be included in the request. Results that\n     * affect the target will be streamed back as WatchChange messages that\n     * reference the targetId.\n     */    Ho(t) {\n        const e = {};\n        e.database = Es(this.M), e.addTarget = function(t, e) {\n            let n;\n            const s = e.target;\n            return n = Ae(s) ? {\n                documents: Cs(t, s)\n            } : {\n                query: xs(t, s)\n            }, n.targetId = e.targetId, e.resumeToken.approximateByteSize() > 0 ? n.resumeToken = ds(t, e.resumeToken) : e.snapshotVersion.compareTo(ct.min()) > 0 && (\n            // TODO(wuandy): Consider removing above check because it is most likely true.\n            // Right now, many tests depend on this behaviour though (leaving min() out\n            // of serialization).\n            n.readTime = fs(t, e.snapshotVersion.toTimestamp())), n;\n        }(this.M, t);\n        const n = ks(this.M, t);\n        n && (e.labels = n), this.Lo(e);\n    }\n    /**\n     * Unregisters interest in the results of the target associated with the\n     * given targetId.\n     */    Jo(t) {\n        const e = {};\n        e.database = Es(this.M), e.removeTarget = t, this.Lo(e);\n    }\n}\n\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */ class Jo extends zo {\n    constructor(t, e, n, s, i, r) {\n        super(t, \"write_stream_connection_backoff\" /* WriteStreamConnectionBackoff */ , \"write_stream_idle\" /* WriteStreamIdle */ , \"health_check_timeout\" /* HealthCheckTimeout */ , e, n, s, r), \n        this.M = i, this.Yo = !1;\n    }\n    /**\n     * Tracks whether or not a handshake has been successfully exchanged and\n     * the stream is ready to accept mutations.\n     */    get Xo() {\n        return this.Yo;\n    }\n    // Override of PersistentStream.start\n    start() {\n        this.Yo = !1, this.lastStreamToken = void 0, super.start();\n    }\n    Ko() {\n        this.Yo && this.Zo([]);\n    }\n    Wo(t, e) {\n        return this.So.wo(\"Write\", t, e);\n    }\n    onMessage(t) {\n        if (\n        // Always capture the last stream token.\n        U(!!t.streamToken), this.lastStreamToken = t.streamToken, this.Yo) {\n            // A successful first write response means the stream is healthy,\n            // Note, that we could consider a successful handshake healthy, however,\n            // the write itself might be causing an error we want to back off from.\n            this.No.reset();\n            const e = Ds(t.writeResults, t.commitTime), n = ws(t.commitTime);\n            return this.listener.tu(n, e);\n        }\n        // The first response is always the handshake response\n        return U(!t.writeResults || 0 === t.writeResults.length), this.Yo = !0, this.listener.eu();\n    }\n    /**\n     * Sends an initial streamToken to the server, performing the handshake\n     * required to make the StreamingWrite RPC work. Subsequent\n     * calls should wait until onHandshakeComplete was called.\n     */    nu() {\n        // TODO(dimond): Support stream resumption. We intentionally do not set the\n        // stream token on the handshake, ignoring any stream token we might have.\n        const t = {};\n        t.database = Es(this.M), this.Lo(t);\n    }\n    /** Sends a group of mutations to the Firestore backend to apply. */    Zo(t) {\n        const e = {\n            streamToken: this.lastStreamToken,\n            writes: t.map((t => vs(this.M, t)))\n        };\n        this.Lo(e);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass Yo extends class {} {\n    constructor(t, e, n, s) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.So = n, this.M = s, \n        this.su = !1;\n    }\n    iu() {\n        if (this.su) throw new Q(G.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    co(t, e, n) {\n        return this.iu(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.So.co(t, e, n, s, i))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === G.UNAUTHENTICATED && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new Q(G.UNKNOWN, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    _o(t, e, n) {\n        return this.iu(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.So._o(t, e, n, s, i))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === G.UNAUTHENTICATED && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new Q(G.UNKNOWN, t.toString());\n        }));\n    }\n    terminate() {\n        this.su = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n/**\n * A component used by the RemoteStore to track the OnlineState (that is,\n * whether or not the client as a whole should be considered to be online or\n * offline), implementing the appropriate heuristics.\n *\n * In particular, when the client is trying to connect to the backend, we\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\n * a connection to succeed. If we have too many failures or the timeout elapses,\n * then we set the OnlineState to Offline, and the client will behave as if\n * it is offline (get()s will return cached data, etc.).\n */\nclass Xo {\n    constructor(t, e) {\n        this.asyncQueue = t, this.onlineStateHandler = e, \n        /** The current OnlineState. */\n        this.state = \"Unknown\" /* Unknown */ , \n        /**\n         * A count of consecutive failures to open the stream. If it reaches the\n         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\n         * Offline.\n         */\n        this.ru = 0, \n        /**\n         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\n         * transition from OnlineState.Unknown to OnlineState.Offline without waiting\n         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\n         */\n        this.ou = null, \n        /**\n         * Whether the client should log a warning message if it fails to connect to\n         * the backend (initially true, cleared after a successful stream, or if we've\n         * logged the message already).\n         */\n        this.uu = !0;\n    }\n    /**\n     * Called by RemoteStore when a watch stream is started (including on each\n     * backoff attempt).\n     *\n     * If this is the first attempt, it sets the OnlineState to Unknown and starts\n     * the onlineStateTimer.\n     */    au() {\n        0 === this.ru && (this.cu(\"Unknown\" /* Unknown */), this.ou = this.asyncQueue.enqueueAfterDelay(\"online_state_timeout\" /* OnlineStateTimeout */ , 1e4, (() => (this.ou = null, \n        this.hu(\"Backend didn't respond within 10 seconds.\"), this.cu(\"Offline\" /* Offline */), \n        Promise.resolve()))));\n    }\n    /**\n     * Updates our OnlineState as appropriate after the watch stream reports a\n     * failure. The first failure moves us to the 'Unknown' state. We then may\n     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\n     * actually transition to the 'Offline' state.\n     */    lu(t) {\n        \"Online\" /* Online */ === this.state ? this.cu(\"Unknown\" /* Unknown */) : (this.ru++, \n        this.ru >= 1 && (this.fu(), this.hu(`Connection failed 1 times. Most recent error: ${t.toString()}`), \n        this.cu(\"Offline\" /* Offline */)));\n    }\n    /**\n     * Explicitly sets the OnlineState to the specified state.\n     *\n     * Note that this resets our timers / failure counters, etc. used by our\n     * Offline heuristics, so must not be used in place of\n     * handleWatchStreamStart() and handleWatchStreamFailure().\n     */    set(t) {\n        this.fu(), this.ru = 0, \"Online\" /* Online */ === t && (\n        // We've connected to watch at least once. Don't warn the developer\n        // about being offline going forward.\n        this.uu = !1), this.cu(t);\n    }\n    cu(t) {\n        t !== this.state && (this.state = t, this.onlineStateHandler(t));\n    }\n    hu(t) {\n        const e = `Could not reach Cloud Firestore backend. ${t}\\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.`;\n        this.uu ? (F(e), this.uu = !1) : O(\"OnlineStateTracker\", e);\n    }\n    fu() {\n        null !== this.ou && (this.ou.cancel(), this.ou = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Zo {\n    constructor(\n    /**\n     * The local store, used to fill the write pipeline with outbound mutations.\n     */\n    t, \n    /** The client-side proxy for interacting with the backend. */\n    e, n, s, i) {\n        this.localStore = t, this.datastore = e, this.asyncQueue = n, this.remoteSyncer = {}, \n        /**\n         * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\n         * LocalStore via fillWritePipeline() and have or will send to the write\n         * stream.\n         *\n         * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\n         * restart the write stream. When the stream is established the writes in the\n         * pipeline will be sent in order.\n         *\n         * Writes remain in writePipeline until they are acknowledged by the backend\n         * and thus will automatically be re-sent if the stream is interrupted /\n         * restarted before they're acknowledged.\n         *\n         * Write responses from the backend are linked to their originating request\n         * purely based on order, and so we can just shift() writes from the front of\n         * the writePipeline as we receive responses.\n         */\n        this.du = [], \n        /**\n         * A mapping of watched targets that the client cares about tracking and the\n         * user has explicitly called a 'listen' for this target.\n         *\n         * These targets may or may not have been sent to or acknowledged by the\n         * server. On re-establishing the listen stream, these targets should be sent\n         * to the server. The targets removed with unlistens are removed eagerly\n         * without waiting for confirmation from the listen stream.\n         */\n        this._u = new Map, \n        /**\n         * A set of reasons for why the RemoteStore may be offline. If empty, the\n         * RemoteStore may start its network connections.\n         */\n        this.wu = new Set, \n        /**\n         * Event handlers that get called when the network is disabled or enabled.\n         *\n         * PORTING NOTE: These functions are used on the Web client to create the\n         * underlying streams (to support tree-shakeable streams). On Android and iOS,\n         * the streams are created during construction of RemoteStore.\n         */\n        this.mu = [], this.gu = i, this.gu.Kr((t => {\n            n.enqueueAndForget((async () => {\n                // Porting Note: Unlike iOS, `restartNetwork()` is called even when the\n                // network becomes unreachable as we don't have any other way to tear\n                // down our streams.\n                au(this) && (O(\"RemoteStore\", \"Restarting streams for network reachability change.\"), \n                await async function(t) {\n                    const e = K(t);\n                    e.wu.add(4 /* ConnectivityChange */), await eu(e), e.yu.set(\"Unknown\" /* Unknown */), \n                    e.wu.delete(4 /* ConnectivityChange */), await tu(e);\n                }(this));\n            }));\n        })), this.yu = new Xo(n, s);\n    }\n}\n\nasync function tu(t) {\n    if (au(t)) for (const e of t.mu) await e(/* enabled= */ !0);\n}\n\n/**\n * Temporarily disables the network. The network can be re-enabled using\n * enableNetwork().\n */ async function eu(t) {\n    for (const e of t.mu) await e(/* enabled= */ !1);\n}\n\n/**\n * Starts new listen for the given target. Uses resume token if provided. It\n * is a no-op if the target of given `TargetData` is already being listened to.\n */\nfunction nu(t, e) {\n    const n = K(t);\n    n._u.has(e.targetId) || (\n    // Mark this as something the client is currently listening for.\n    n._u.set(e.targetId, e), uu(n) ? \n    // The listen will be sent in onWatchStreamOpen\n    ou(n) : Pu(n).Mo() && iu(n, e));\n}\n\n/**\n * Removes the listen from server. It is a no-op if the given target id is\n * not being listened to.\n */ function su(t, e) {\n    const n = K(t), s = Pu(n);\n    n._u.delete(e), s.Mo() && ru(n, e), 0 === n._u.size && (s.Mo() ? s.$o() : au(n) && \n    // Revert to OnlineState.Unknown if the watch stream is not open and we\n    // have no listeners, since without any listens to send we cannot\n    // confirm if the stream is healthy and upgrade to OnlineState.Online.\n    n.yu.set(\"Unknown\" /* Unknown */));\n}\n\n/**\n * We need to increment the the expected number of pending responses we're due\n * from watch so we wait for the ack to process any messages from this target.\n */ function iu(t, e) {\n    t.pu.Z(e.targetId), Pu(t).Ho(e);\n}\n\n/**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the removal on the server before we process any\n * messages from this target.\n */ function ru(t, e) {\n    t.pu.Z(e), Pu(t).Jo(e);\n}\n\nfunction ou(t) {\n    t.pu = new os({\n        getRemoteKeysForTarget: e => t.remoteSyncer.getRemoteKeysForTarget(e),\n        Et: e => t._u.get(e) || null\n    }), Pu(t).start(), t.yu.au();\n}\n\n/**\n * Returns whether the watch stream should be started because it's necessary\n * and has not yet been started.\n */ function uu(t) {\n    return au(t) && !Pu(t).ko() && t._u.size > 0;\n}\n\nfunction au(t) {\n    return 0 === K(t).wu.size;\n}\n\nfunction cu(t) {\n    t.pu = void 0;\n}\n\nasync function hu(t) {\n    t._u.forEach(((e, n) => {\n        iu(t, e);\n    }));\n}\n\nasync function lu(t, e) {\n    cu(t), \n    // If we still need the watch stream, retry the connection.\n    uu(t) ? (t.yu.lu(e), ou(t)) : \n    // No need to restart watch stream because there are no active targets.\n    // The online state is set to unknown because there is no active attempt\n    // at establishing a connection\n    t.yu.set(\"Unknown\" /* Unknown */);\n}\n\nasync function fu(t, e, n) {\n    if (\n    // Mark the client as online since we got a message from the server\n    t.yu.set(\"Online\" /* Online */), e instanceof is && 2 /* Removed */ === e.state && e.cause) \n    // There was an error on a target, don't wait for a consistent snapshot\n    // to raise events\n    try {\n        await \n        /** Handles an error on a target */\n        async function(t, e) {\n            const n = e.cause;\n            for (const s of e.targetIds) \n            // A watched target might have been removed already.\n            t._u.has(s) && (await t.remoteSyncer.rejectListen(s, n), t._u.delete(s), t.pu.removeTarget(s));\n        }\n        /**\n * Attempts to fill our write pipeline with writes from the LocalStore.\n *\n * Called internally to bootstrap or refill the write pipeline and by\n * SyncEngine whenever there are new mutations to process.\n *\n * Starts the write stream if necessary.\n */ (t, e);\n    } catch (n) {\n        O(\"RemoteStore\", \"Failed to remove targets %s: %s \", e.targetIds.join(\",\"), n), \n        await du(t, n);\n    } else if (e instanceof ns ? t.pu.ut(e) : e instanceof ss ? t.pu._t(e) : t.pu.ht(e), \n    !n.isEqual(ct.min())) try {\n        const e = await ro(t.localStore);\n        n.compareTo(e) >= 0 && \n        // We have received a target change with a global snapshot if the snapshot\n        // version is not equal to SnapshotVersion.min().\n        await \n        /**\n * Takes a batch of changes from the Datastore, repackages them as a\n * RemoteEvent, and passes that on to the listener, which is typically the\n * SyncEngine.\n */\n        function(t, e) {\n            const n = t.pu.yt(e);\n            // Update in-memory resume tokens. LocalStore will update the\n            // persistent view of these when applying the completed RemoteEvent.\n                        return n.targetChanges.forEach(((n, s) => {\n                if (n.resumeToken.approximateByteSize() > 0) {\n                    const i = t._u.get(s);\n                    // A watched target might have been removed already.\n                                        i && t._u.set(s, i.withResumeToken(n.resumeToken, e));\n                }\n            })), \n            // Re-establish listens for the targets that have been invalidated by\n            // existence filter mismatches.\n            n.targetMismatches.forEach((e => {\n                const n = t._u.get(e);\n                if (!n) \n                // A watched target might have been removed already.\n                return;\n                // Clear the resume token for the target, since we're in a known mismatch\n                // state.\n                                t._u.set(e, n.withResumeToken(pt.EMPTY_BYTE_STRING, n.snapshotVersion)), \n                // Cause a hard reset by unwatching and rewatching immediately, but\n                // deliberately don't send a resume token so that we get a full update.\n                ru(t, e);\n                // Mark the target we send as being on behalf of an existence filter\n                // mismatch, but don't actually retain that in listenTargets. This ensures\n                // that we flag the first re-listen this way without impacting future\n                // listens of this target (that might happen e.g. on reconnect).\n                const s = new Ni(n.target, e, 1 /* ExistenceFilterMismatch */ , n.sequenceNumber);\n                iu(t, s);\n            })), t.remoteSyncer.applyRemoteEvent(n);\n        }(t, n);\n    } catch (e) {\n        O(\"RemoteStore\", \"Failed to raise snapshot:\", e), await du(t, e);\n    }\n}\n\n/**\n * Recovery logic for IndexedDB errors that takes the network offline until\n * `op` succeeds. Retries are scheduled with backoff using\n * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is\n * validated via a generic operation.\n *\n * The returned Promise is resolved once the network is disabled and before\n * any retry attempt.\n */ async function du(t, e, n) {\n    if (!Ai(e)) throw e;\n    t.wu.add(1 /* IndexedDbFailed */), \n    // Disable network and raise offline snapshots\n    await eu(t), t.yu.set(\"Offline\" /* Offline */), n || (\n    // Use a simple read operation to determine if IndexedDB recovered.\n    // Ideally, we would expose a health check directly on SimpleDb, but\n    // RemoteStore only has access to persistence through LocalStore.\n    n = () => ro(t.localStore)), \n    // Probe IndexedDB periodically and re-enable network\n    t.asyncQueue.enqueueRetryable((async () => {\n        O(\"RemoteStore\", \"Retrying IndexedDB access\"), await n(), t.wu.delete(1 /* IndexedDbFailed */), \n        await tu(t);\n    }));\n}\n\n/**\n * Executes `op`. If `op` fails, takes the network offline until `op`\n * succeeds. Returns after the first attempt.\n */ function _u(t, e) {\n    return e().catch((n => du(t, n, e)));\n}\n\nasync function wu(t) {\n    const e = K(t), n = Vu(e);\n    let s = e.du.length > 0 ? e.du[e.du.length - 1].batchId : -1;\n    for (;mu(e); ) try {\n        const t = await ao(e.localStore, s);\n        if (null === t) {\n            0 === e.du.length && n.$o();\n            break;\n        }\n        s = t.batchId, gu(e, t);\n    } catch (t) {\n        await du(e, t);\n    }\n    yu(e) && pu(e);\n}\n\n/**\n * Returns true if we can add to the write pipeline (i.e. the network is\n * enabled and the write pipeline is not full).\n */ function mu(t) {\n    return au(t) && t.du.length < 10;\n}\n\n/**\n * Queues additional writes to be sent to the write stream, sending them\n * immediately if the write stream is established.\n */ function gu(t, e) {\n    t.du.push(e);\n    const n = Vu(t);\n    n.Mo() && n.Xo && n.Zo(e.mutations);\n}\n\nfunction yu(t) {\n    return au(t) && !Vu(t).ko() && t.du.length > 0;\n}\n\nfunction pu(t) {\n    Vu(t).start();\n}\n\nasync function Iu(t) {\n    Vu(t).nu();\n}\n\nasync function Tu(t) {\n    const e = Vu(t);\n    // Send the write pipeline now that the stream is established.\n        for (const n of t.du) e.Zo(n.mutations);\n}\n\nasync function Eu(t, e, n) {\n    const s = t.du.shift(), i = Ci.from(s, e, n);\n    await _u(t, (() => t.remoteSyncer.applySuccessfulWrite(i))), \n    // It's possible that with the completion of this mutation another\n    // slot has freed up.\n    await wu(t);\n}\n\nasync function Au(t, e) {\n    // If the write stream closed after the write handshake completes, a write\n    // operation failed and we fail the pending operation.\n    e && Vu(t).Xo && \n    // This error affects the actual write.\n    await async function(t, e) {\n        // Only handle permanent errors here. If it's transient, just let the retry\n        // logic kick in.\n        if (n = e.code, Un(n) && n !== G.ABORTED) {\n            // This was a permanent error, the request itself was the problem\n            // so it's not going to succeed if we resend it.\n            const n = t.du.shift();\n            // In this case it's also unlikely that the server itself is melting\n            // down -- this was just a bad request so inhibit backoff on the next\n            // restart.\n                        Vu(t).Fo(), await _u(t, (() => t.remoteSyncer.rejectFailedWrite(n.batchId, e))), \n            // It's possible that with the completion of this mutation\n            // another slot has freed up.\n            await wu(t);\n        }\n        var n;\n    }(t, e), \n    // The write stream might have been started by refilling the write\n    // pipeline for failed writes\n    yu(t) && pu(t);\n}\n\nasync function Ru(t, e) {\n    const n = K(t);\n    n.asyncQueue.verifyOperationInProgress(), O(\"RemoteStore\", \"RemoteStore received new credentials\");\n    const s = au(n);\n    // Tear down and re-create our network streams. This will ensure we get a\n    // fresh auth token for the new user and re-fill the write pipeline with\n    // new mutations from the LocalStore (since mutations are per-user).\n        n.wu.add(3 /* CredentialChange */), await eu(n), s && \n    // Don't set the network status to Unknown if we are offline.\n    n.yu.set(\"Unknown\" /* Unknown */), await n.remoteSyncer.handleCredentialChange(e), \n    n.wu.delete(3 /* CredentialChange */), await tu(n);\n}\n\n/**\n * Toggles the network state when the client gains or loses its primary lease.\n */ async function bu(t, e) {\n    const n = K(t);\n    e ? (n.wu.delete(2 /* IsSecondary */), await tu(n)) : e || (n.wu.add(2 /* IsSecondary */), \n    await eu(n), n.yu.set(\"Unknown\" /* Unknown */));\n}\n\n/**\n * If not yet initialized, registers the WatchStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */ function Pu(t) {\n    return t.Iu || (\n    // Create stream (but note that it is not started yet).\n    t.Iu = function(t, e, n) {\n        const s = K(t);\n        return s.iu(), new Ho(e, s.So, s.authCredentials, s.appCheckCredentials, s.M, n);\n    }\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t.datastore, t.asyncQueue, {\n        Xr: hu.bind(null, t),\n        eo: lu.bind(null, t),\n        zo: fu.bind(null, t)\n    }), t.mu.push((async e => {\n        e ? (t.Iu.Fo(), uu(t) ? ou(t) : t.yu.set(\"Unknown\" /* Unknown */)) : (await t.Iu.stop(), \n        cu(t));\n    }))), t.Iu;\n}\n\n/**\n * If not yet initialized, registers the WriteStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */ function Vu(t) {\n    return t.Tu || (\n    // Create stream (but note that it is not started yet).\n    t.Tu = function(t, e, n) {\n        const s = K(t);\n        return s.iu(), new Jo(e, s.So, s.authCredentials, s.appCheckCredentials, s.M, n);\n    }(t.datastore, t.asyncQueue, {\n        Xr: Iu.bind(null, t),\n        eo: Au.bind(null, t),\n        eu: Tu.bind(null, t),\n        tu: Eu.bind(null, t)\n    }), t.mu.push((async e => {\n        e ? (t.Tu.Fo(), \n        // This will start the write stream if necessary.\n        await wu(t)) : (await t.Tu.stop(), t.du.length > 0 && (O(\"RemoteStore\", `Stopping write stream with ${t.du.length} pending writes`), \n        t.du = []));\n    }))), t.Tu;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nclass vu {\n    constructor(t, e, n, s, i) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = s, this.removalCallback = i, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, s, i) {\n        const r = Date.now() + n, o = new vu(t, e, r, s, i);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new Q(G.CANCELLED, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */ function Su(t, e) {\n    if (F(\"AsyncQueue\", `${e}: ${t}`), Ai(t)) return new Q(G.UNAVAILABLE, `${e}: ${t}`);\n    throw t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */ class Du {\n    /** The default ordering is by key if the comparator is omitted */\n    constructor(t) {\n        // We are adding document key comparator to the end as it's the only\n        // guaranteed unique property of a document.\n        this.comparator = t ? (e, n) => t(e, n) || xt.comparator(e.key, n.key) : (t, e) => xt.comparator(t.key, e.key), \n        this.keyedMap = Wn(), this.sortedSet = new fe(this.comparator);\n    }\n    /**\n     * Returns an empty copy of the existing DocumentSet, using the same\n     * comparator.\n     */    static emptySet(t) {\n        return new Du(t.comparator);\n    }\n    has(t) {\n        return null != this.keyedMap.get(t);\n    }\n    get(t) {\n        return this.keyedMap.get(t);\n    }\n    first() {\n        return this.sortedSet.minKey();\n    }\n    last() {\n        return this.sortedSet.maxKey();\n    }\n    isEmpty() {\n        return this.sortedSet.isEmpty();\n    }\n    /**\n     * Returns the index of the provided key in the document set, or -1 if the\n     * document key is not present in the set;\n     */    indexOf(t) {\n        const e = this.keyedMap.get(t);\n        return e ? this.sortedSet.indexOf(e) : -1;\n    }\n    get size() {\n        return this.sortedSet.size;\n    }\n    /** Iterates documents in order defined by \"comparator\" */    forEach(t) {\n        this.sortedSet.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Inserts or updates a document with the same key */    add(t) {\n        // First remove the element if we have it.\n        const e = this.delete(t.key);\n        return e.copy(e.keyedMap.insert(t.key, t), e.sortedSet.insert(t, null));\n    }\n    /** Deletes a document with a given key */    delete(t) {\n        const e = this.get(t);\n        return e ? this.copy(this.keyedMap.remove(t), this.sortedSet.remove(e)) : this;\n    }\n    isEqual(t) {\n        if (!(t instanceof Du)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.sortedSet.getIterator(), n = t.sortedSet.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, s = n.getNext().key;\n            if (!t.isEqual(s)) return !1;\n        }\n        return !0;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e.toString());\n        })), 0 === t.length ? \"DocumentSet ()\" : \"DocumentSet (\\n  \" + t.join(\"  \\n\") + \"\\n)\";\n    }\n    copy(t, e) {\n        const n = new Du;\n        return n.comparator = this.comparator, n.keyedMap = t, n.sortedSet = e, n;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */ class Cu {\n    constructor() {\n        this.Eu = new fe(xt.comparator);\n    }\n    track(t) {\n        const e = t.doc.key, n = this.Eu.get(e);\n        n ? \n        // Merge the new change with the existing change.\n        0 /* Added */ !== t.type && 3 /* Metadata */ === n.type ? this.Eu = this.Eu.insert(e, t) : 3 /* Metadata */ === t.type && 1 /* Removed */ !== n.type ? this.Eu = this.Eu.insert(e, {\n            type: n.type,\n            doc: t.doc\n        }) : 2 /* Modified */ === t.type && 2 /* Modified */ === n.type ? this.Eu = this.Eu.insert(e, {\n            type: 2 /* Modified */ ,\n            doc: t.doc\n        }) : 2 /* Modified */ === t.type && 0 /* Added */ === n.type ? this.Eu = this.Eu.insert(e, {\n            type: 0 /* Added */ ,\n            doc: t.doc\n        }) : 1 /* Removed */ === t.type && 0 /* Added */ === n.type ? this.Eu = this.Eu.remove(e) : 1 /* Removed */ === t.type && 2 /* Modified */ === n.type ? this.Eu = this.Eu.insert(e, {\n            type: 1 /* Removed */ ,\n            doc: n.doc\n        }) : 0 /* Added */ === t.type && 1 /* Removed */ === n.type ? this.Eu = this.Eu.insert(e, {\n            type: 2 /* Modified */ ,\n            doc: t.doc\n        }) : \n        // This includes these cases, which don't make sense:\n        // Added->Added\n        // Removed->Removed\n        // Modified->Added\n        // Removed->Modified\n        // Metadata->Added\n        // Removed->Metadata\n        L() : this.Eu = this.Eu.insert(e, t);\n    }\n    Au() {\n        const t = [];\n        return this.Eu.inorderTraversal(((e, n) => {\n            t.push(n);\n        })), t;\n    }\n}\n\nclass xu {\n    constructor(t, e, n, s, i, r, o, u) {\n        this.query = t, this.docs = e, this.oldDocs = n, this.docChanges = s, this.mutatedKeys = i, \n        this.fromCache = r, this.syncStateChanged = o, this.excludesMetadataChanges = u;\n    }\n    /** Returns a view snapshot as if all documents in the snapshot were added. */    static fromInitialDocuments(t, e, n, s) {\n        const i = [];\n        return e.forEach((t => {\n            i.push({\n                type: 0 /* Added */ ,\n                doc: t\n            });\n        })), new xu(t, e, Du.emptySet(e), i, n, s, \n        /* syncStateChanged= */ !0, \n        /* excludesMetadataChanges= */ !1);\n    }\n    get hasPendingWrites() {\n        return !this.mutatedKeys.isEmpty();\n    }\n    isEqual(t) {\n        if (!(this.fromCache === t.fromCache && this.syncStateChanged === t.syncStateChanged && this.mutatedKeys.isEqual(t.mutatedKeys) && Ye(this.query, t.query) && this.docs.isEqual(t.docs) && this.oldDocs.isEqual(t.oldDocs))) return !1;\n        const e = this.docChanges, n = t.docChanges;\n        if (e.length !== n.length) return !1;\n        for (let t = 0; t < e.length; t++) if (e[t].type !== n[t].type || !e[t].doc.isEqual(n[t].doc)) return !1;\n        return !0;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */ class Nu {\n    constructor() {\n        this.Ru = void 0, this.listeners = [];\n    }\n}\n\nclass ku {\n    constructor() {\n        this.queries = new Kn((t => Xe(t)), Ye), this.onlineState = \"Unknown\" /* Unknown */ , \n        this.bu = new Set;\n    }\n}\n\nasync function Mu(t, e) {\n    const n = K(t), s = e.query;\n    let i = !1, r = n.queries.get(s);\n    if (r || (i = !0, r = new Nu), i) try {\n        r.Ru = await n.onListen(s);\n    } catch (t) {\n        const n = Su(t, `Initialization of query '${Ze(e.query)}' failed`);\n        return void e.onError(n);\n    }\n    if (n.queries.set(s, r), r.listeners.push(e), \n    // Run global snapshot listeners if a consistent snapshot has been emitted.\n    e.Pu(n.onlineState), r.Ru) {\n        e.Vu(r.Ru) && Bu(n);\n    }\n}\n\nasync function Ou(t, e) {\n    const n = K(t), s = e.query;\n    let i = !1;\n    const r = n.queries.get(s);\n    if (r) {\n        const t = r.listeners.indexOf(e);\n        t >= 0 && (r.listeners.splice(t, 1), i = 0 === r.listeners.length);\n    }\n    if (i) return n.queries.delete(s), n.onUnlisten(s);\n}\n\nfunction Fu(t, e) {\n    const n = K(t);\n    let s = !1;\n    for (const t of e) {\n        const e = t.query, i = n.queries.get(e);\n        if (i) {\n            for (const e of i.listeners) e.Vu(t) && (s = !0);\n            i.Ru = t;\n        }\n    }\n    s && Bu(n);\n}\n\nfunction $u(t, e, n) {\n    const s = K(t), i = s.queries.get(e);\n    if (i) for (const t of i.listeners) t.onError(n);\n    // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n    // after an error.\n        s.queries.delete(e);\n}\n\n// Call all global snapshot listeners that have been set.\nfunction Bu(t) {\n    t.bu.forEach((t => {\n        t.next();\n    }));\n}\n\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */ class Lu {\n    constructor(t, e, n) {\n        this.query = t, this.vu = e, \n        /**\n         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n         * observer. This flag is set to true once we've actually raised an event.\n         */\n        this.Su = !1, this.Du = null, this.onlineState = \"Unknown\" /* Unknown */ , this.options = n || {};\n    }\n    /**\n     * Applies the new ViewSnapshot to this listener, raising a user-facing event\n     * if applicable (depending on what changed, whether the user has opted into\n     * metadata-only changes, etc.). Returns true if a user-facing event was\n     * indeed raised.\n     */    Vu(t) {\n        if (!this.options.includeMetadataChanges) {\n            // Remove the metadata only changes.\n            const e = [];\n            for (const n of t.docChanges) 3 /* Metadata */ !== n.type && e.push(n);\n            t = new xu(t.query, t.docs, t.oldDocs, e, t.mutatedKeys, t.fromCache, t.syncStateChanged, \n            /* excludesMetadataChanges= */ !0);\n        }\n        let e = !1;\n        return this.Su ? this.Cu(t) && (this.vu.next(t), e = !0) : this.xu(t, this.onlineState) && (this.Nu(t), \n        e = !0), this.Du = t, e;\n    }\n    onError(t) {\n        this.vu.error(t);\n    }\n    /** Returns whether a snapshot was raised. */    Pu(t) {\n        this.onlineState = t;\n        let e = !1;\n        return this.Du && !this.Su && this.xu(this.Du, t) && (this.Nu(this.Du), e = !0), \n        e;\n    }\n    xu(t, e) {\n        // Always raise the first event when we're synced\n        if (!t.fromCache) return !0;\n        // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n        // or Online if we wait long enough).\n                const n = \"Offline\" /* Offline */ !== e;\n        // Don't raise the event if we're online, aren't synced yet (checked\n        // above) and are waiting for a sync.\n                return (!this.options.ku || !n) && (!t.docs.isEmpty() || \"Offline\" /* Offline */ === e);\n        // Raise data from cache if we have any documents or we are offline\n        }\n    Cu(t) {\n        // We don't need to handle includeDocumentMetadataChanges here because\n        // the Metadata only changes have already been stripped out if needed.\n        // At this point the only changes we will see are the ones we should\n        // propagate.\n        if (t.docChanges.length > 0) return !0;\n        const e = this.Du && this.Du.hasPendingWrites !== t.hasPendingWrites;\n        return !(!t.syncStateChanged && !e) && !0 === this.options.includeMetadataChanges;\n        // Generally we should have hit one of the cases above, but it's possible\n        // to get here if there were only metadata docChanges and they got\n        // stripped out.\n        }\n    Nu(t) {\n        t = xu.fromInitialDocuments(t.query, t.docs, t.mutatedKeys, t.fromCache), this.Su = !0, \n        this.vu.next(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A complete element in the bundle stream, together with the byte length it\n * occupies in the stream.\n */ class Uu {\n    constructor(t, \n    // How many bytes this element takes to store in the bundle.\n    e) {\n        this.payload = t, this.byteLength = e;\n    }\n    Mu() {\n        return \"metadata\" in this.payload;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Helper to convert objects from bundles to model objects in the SDK.\n */ class qu {\n    constructor(t) {\n        this.M = t;\n    }\n    wi(t) {\n        return ps(this.M, t);\n    }\n    /**\n     * Converts a BundleDocument to a MutableDocument.\n     */    mi(t) {\n        return t.metadata.exists ? bs(this.M, t.document, !1) : ne.newNoDocument(this.wi(t.metadata.name), this.gi(t.metadata.readTime));\n    }\n    gi(t) {\n        return ws(t);\n    }\n}\n\n/**\n * A class to process the elements from a bundle, load them into local\n * storage and provide progress update while loading.\n */ class Ku {\n    constructor(t, e, n) {\n        this.Ou = t, this.localStore = e, this.M = n, \n        /** Batched queries to be saved into storage */\n        this.queries = [], \n        /** Batched documents to be saved into storage */\n        this.documents = [], \n        /** The collection groups affected by this bundle. */\n        this.collectionGroups = new Set, this.progress = Gu(t);\n    }\n    /**\n     * Adds an element from the bundle to the loader.\n     *\n     * Returns a new progress if adding the element leads to a new progress,\n     * otherwise returns null.\n     */    Fu(t) {\n        this.progress.bytesLoaded += t.byteLength;\n        let e = this.progress.documentsLoaded;\n        if (t.payload.namedQuery) this.queries.push(t.payload.namedQuery); else if (t.payload.documentMetadata) {\n            this.documents.push({\n                metadata: t.payload.documentMetadata\n            }), t.payload.documentMetadata.exists || ++e;\n            const n = _t.fromString(t.payload.documentMetadata.name);\n            this.collectionGroups.add(n.get(n.length - 2));\n        } else t.payload.document && (this.documents[this.documents.length - 1].document = t.payload.document, \n        ++e);\n        return e !== this.progress.documentsLoaded ? (this.progress.documentsLoaded = e, \n        Object.assign({}, this.progress)) : null;\n    }\n    $u(t) {\n        const e = new Map, n = new qu(this.M);\n        for (const s of t) if (s.metadata.queries) {\n            const t = n.wi(s.metadata.name);\n            for (const n of s.metadata.queries) {\n                const s = (e.get(n) || Yn()).add(t);\n                e.set(n, s);\n            }\n        }\n        return e;\n    }\n    /**\n     * Update the progress to 'Success' and return the updated progress.\n     */    async complete() {\n        const t = await mo(this.localStore, new qu(this.M), this.documents, this.Ou.id), e = this.$u(this.documents);\n        for (const t of this.queries) await go(this.localStore, t, e.get(t.name));\n        return this.progress.taskState = \"Success\", {\n            progress: this.progress,\n            Bu: this.collectionGroups,\n            Lu: t\n        };\n    }\n}\n\n/**\n * Returns a `LoadBundleTaskProgress` representing the initial progress of\n * loading a bundle.\n */ function Gu(t) {\n    return {\n        taskState: \"Running\",\n        documentsLoaded: 0,\n        bytesLoaded: 0,\n        totalDocuments: t.totalDocuments,\n        totalBytes: t.totalBytes\n    };\n}\n\n/**\n * Returns a `LoadBundleTaskProgress` representing the progress that the loading\n * has succeeded.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Qu {\n    constructor(t) {\n        this.key = t;\n    }\n}\n\nclass ju {\n    constructor(t) {\n        this.key = t;\n    }\n}\n\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */ class Wu {\n    constructor(t, \n    /** Documents included in the remote target */\n    e) {\n        this.query = t, this.Uu = e, this.qu = null, \n        /**\n         * A flag whether the view is current with the backend. A view is considered\n         * current after it has seen the current flag from the backend and did not\n         * lose consistency within the watch stream (e.g. because of an existence\n         * filter mismatch).\n         */\n        this.current = !1, \n        /** Documents in the view but not in the remote target */\n        this.Ku = Yn(), \n        /** Document Keys that have local changes */\n        this.mutatedKeys = Yn(), this.Gu = nn(t), this.Qu = new Du(this.Gu);\n    }\n    /**\n     * The set of remote documents that the server has told us belongs to the target associated with\n     * this view.\n     */    get ju() {\n        return this.Uu;\n    }\n    /**\n     * Iterates over a set of doc changes, applies the query limit, and computes\n     * what the new results should be, what the changes were, and whether we may\n     * need to go back to the local cache for more results. Does not make any\n     * changes to the view.\n     * @param docChanges - The doc changes to apply to this view.\n     * @param previousChanges - If this is being called with a refill, then start\n     *        with this set of docs and changes instead of the current view.\n     * @returns a new set of docs, changes, and refill flag.\n     */    Wu(t, e) {\n        const n = e ? e.zu : new Cu, s = e ? e.Qu : this.Qu;\n        let i = e ? e.mutatedKeys : this.mutatedKeys, r = s, o = !1;\n        // Track the last doc in a (full) limit. This is necessary, because some\n        // update (a delete, or an update moving a doc past the old limit) might\n        // mean there is some other document in the local cache that either should\n        // come (1) between the old last limit doc and the new last document, in the\n        // case of updates, or (2) after the new last document, in the case of\n        // deletes. So we keep this doc at the old limit to compare the updates to.\n        // Note that this should never get used in a refill (when previousChanges is\n        // set), because there will only be adds -- no deletes or updates.\n        const u = \"F\" /* First */ === this.query.limitType && s.size === this.query.limit ? s.last() : null, a = \"L\" /* Last */ === this.query.limitType && s.size === this.query.limit ? s.first() : null;\n        // Drop documents out to meet limit/limitToLast requirement.\n        if (t.inorderTraversal(((t, e) => {\n            const c = s.get(t), h = tn(this.query, e) ? e : null, l = !!c && this.mutatedKeys.has(c.key), f = !!h && (h.hasLocalMutations || \n            // We only consider committed mutations for documents that were\n            // mutated during the lifetime of the view.\n            this.mutatedKeys.has(h.key) && h.hasCommittedMutations);\n            let d = !1;\n            // Calculate change\n                        if (c && h) {\n                c.data.isEqual(h.data) ? l !== f && (n.track({\n                    type: 3 /* Metadata */ ,\n                    doc: h\n                }), d = !0) : this.Hu(c, h) || (n.track({\n                    type: 2 /* Modified */ ,\n                    doc: h\n                }), d = !0, (u && this.Gu(h, u) > 0 || a && this.Gu(h, a) < 0) && (\n                // This doc moved from inside the limit to outside the limit.\n                // That means there may be some other doc in the local cache\n                // that should be included instead.\n                o = !0));\n            } else !c && h ? (n.track({\n                type: 0 /* Added */ ,\n                doc: h\n            }), d = !0) : c && !h && (n.track({\n                type: 1 /* Removed */ ,\n                doc: c\n            }), d = !0, (u || a) && (\n            // A doc was removed from a full limit query. We'll need to\n            // requery from the local cache to see if we know about some other\n            // doc that should be in the results.\n            o = !0));\n            d && (h ? (r = r.add(h), i = f ? i.add(t) : i.delete(t)) : (r = r.delete(t), i = i.delete(t)));\n        })), null !== this.query.limit) for (;r.size > this.query.limit; ) {\n            const t = \"F\" /* First */ === this.query.limitType ? r.last() : r.first();\n            r = r.delete(t.key), i = i.delete(t.key), n.track({\n                type: 1 /* Removed */ ,\n                doc: t\n            });\n        }\n        return {\n            Qu: r,\n            zu: n,\n            ii: o,\n            mutatedKeys: i\n        };\n    }\n    Hu(t, e) {\n        // We suppress the initial change event for documents that were modified as\n        // part of a write acknowledgment (e.g. when the value of a server transform\n        // is applied) as Watch will send us the same document again.\n        // By suppressing the event, we only raise two user visible events (one with\n        // `hasPendingWrites` and the final state of the document) instead of three\n        // (one with `hasPendingWrites`, the modified document with\n        // `hasPendingWrites` and the final state of the document).\n        return t.hasLocalMutations && e.hasCommittedMutations && !e.hasLocalMutations;\n    }\n    /**\n     * Updates the view with the given ViewDocumentChanges and optionally updates\n     * limbo docs and sync state from the provided target change.\n     * @param docChanges - The set of changes to make to the view's docs.\n     * @param updateLimboDocuments - Whether to update limbo documents based on\n     *        this change.\n     * @param targetChange - A target change to apply for computing limbo docs and\n     *        sync state.\n     * @returns A new ViewChange with the given docs, changes, and sync state.\n     */\n    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n    applyChanges(t, e, n) {\n        const s = this.Qu;\n        this.Qu = t.Qu, this.mutatedKeys = t.mutatedKeys;\n        // Sort changes based on type and query comparator\n        const i = t.zu.Au();\n        i.sort(((t, e) => function(t, e) {\n            const n = t => {\n                switch (t) {\n                  case 0 /* Added */ :\n                    return 1;\n\n                  case 2 /* Modified */ :\n                  case 3 /* Metadata */ :\n                    // A metadata change is converted to a modified change at the public\n                    // api layer.  Since we sort by document key and then change type,\n                    // metadata and modified changes must be sorted equivalently.\n                    return 2;\n\n                  case 1 /* Removed */ :\n                    return 0;\n\n                  default:\n                    return L();\n                }\n            };\n            return n(t) - n(e);\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t.type, e.type) || this.Gu(t.doc, e.doc))), this.Ju(n);\n        const r = e ? this.Yu() : [], o = 0 === this.Ku.size && this.current ? 1 /* Synced */ : 0 /* Local */ , u = o !== this.qu;\n        if (this.qu = o, 0 !== i.length || u) {\n            return {\n                snapshot: new xu(this.query, t.Qu, s, i, t.mutatedKeys, 0 /* Local */ === o, u, \n                /* excludesMetadataChanges= */ !1),\n                Xu: r\n            };\n        }\n        // no changes\n        return {\n            Xu: r\n        };\n    }\n    /**\n     * Applies an OnlineState change to the view, potentially generating a\n     * ViewChange if the view's syncState changes as a result.\n     */    Pu(t) {\n        return this.current && \"Offline\" /* Offline */ === t ? (\n        // If we're offline, set `current` to false and then call applyChanges()\n        // to refresh our syncState and generate a ViewChange as appropriate. We\n        // are guaranteed to get a new TargetChange that sets `current` back to\n        // true once the client is back online.\n        this.current = !1, this.applyChanges({\n            Qu: this.Qu,\n            zu: new Cu,\n            mutatedKeys: this.mutatedKeys,\n            ii: !1\n        }, \n        /* updateLimboDocuments= */ !1)) : {\n            Xu: []\n        };\n    }\n    /**\n     * Returns whether the doc for the given key should be in limbo.\n     */    Zu(t) {\n        // If the remote end says it's part of this query, it's not in limbo.\n        return !this.Uu.has(t) && (\n        // The local store doesn't think it's a result, so it shouldn't be in limbo.\n        !!this.Qu.has(t) && !this.Qu.get(t).hasLocalMutations);\n    }\n    /**\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\n     * Returns the list of changes to which docs are in limbo.\n     */    Ju(t) {\n        t && (t.addedDocuments.forEach((t => this.Uu = this.Uu.add(t))), t.modifiedDocuments.forEach((t => {})), \n        t.removedDocuments.forEach((t => this.Uu = this.Uu.delete(t))), this.current = t.current);\n    }\n    Yu() {\n        // We can only determine limbo documents when we're in-sync with the server.\n        if (!this.current) return [];\n        // TODO(klimt): Do this incrementally so that it's not quadratic when\n        // updating many documents.\n                const t = this.Ku;\n        this.Ku = Yn(), this.Qu.forEach((t => {\n            this.Zu(t.key) && (this.Ku = this.Ku.add(t.key));\n        }));\n        // Diff the new limbo docs with the old limbo docs.\n        const e = [];\n        return t.forEach((t => {\n            this.Ku.has(t) || e.push(new ju(t));\n        })), this.Ku.forEach((n => {\n            t.has(n) || e.push(new Qu(n));\n        })), e;\n    }\n    /**\n     * Update the in-memory state of the current view with the state read from\n     * persistence.\n     *\n     * We update the query view whenever a client's primary status changes:\n     * - When a client transitions from primary to secondary, it can miss\n     *   LocalStorage updates and its query views may temporarily not be\n     *   synchronized with the state on disk.\n     * - For secondary to primary transitions, the client needs to update the list\n     *   of `syncedDocuments` since secondary clients update their query views\n     *   based purely on synthesized RemoteEvents.\n     *\n     * @param queryResult.documents - The documents that match the query according\n     * to the LocalStore.\n     * @param queryResult.remoteKeys - The keys of the documents that match the\n     * query according to the backend.\n     *\n     * @returns The ViewChange that resulted from this synchronization.\n     */\n    // PORTING NOTE: Multi-tab only.\n    ta(t) {\n        this.Uu = t._i, this.Ku = Yn();\n        const e = this.Wu(t.documents);\n        return this.applyChanges(e, /*updateLimboDocuments=*/ !0);\n    }\n    /**\n     * Returns a view snapshot as if this query was just listened to. Contains\n     * a document add for every existing document and the `fromCache` and\n     * `hasPendingWrites` status of the already established view.\n     */\n    // PORTING NOTE: Multi-tab only.\n    ea() {\n        return xu.fromInitialDocuments(this.query, this.Qu, this.mutatedKeys, 0 /* Local */ === this.qu);\n    }\n}\n\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\nclass zu {\n    constructor(\n    /**\n     * The query itself.\n     */\n    t, \n    /**\n     * The target number created by the client that is used in the watch\n     * stream to identify this query.\n     */\n    e, \n    /**\n     * The view is responsible for computing the final merged truth of what\n     * docs are in the query. It gets notified of local and remote changes,\n     * and applies the query filters and limits to determine the most correct\n     * possible results.\n     */\n    n) {\n        this.query = t, this.targetId = e, this.view = n;\n    }\n}\n\n/** Tracks a limbo resolution. */ class Hu {\n    constructor(t) {\n        this.key = t, \n        /**\n         * Set to true once we've received a document. This is used in\n         * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\n         * decide whether it needs to manufacture a delete event for the target once\n         * the target is CURRENT.\n         */\n        this.na = !1;\n    }\n}\n\n/**\n * An implementation of `SyncEngine` coordinating with other parts of SDK.\n *\n * The parts of SyncEngine that act as a callback to RemoteStore need to be\n * registered individually. This is done in `syncEngineWrite()` and\n * `syncEngineListen()` (as well as `applyPrimaryState()`) as these methods\n * serve as entry points to RemoteStore's functionality.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */ class Ju {\n    constructor(t, e, n, \n    // PORTING NOTE: Manages state synchronization in multi-tab environments.\n    s, i, r) {\n        this.localStore = t, this.remoteStore = e, this.eventManager = n, this.sharedClientState = s, \n        this.currentUser = i, this.maxConcurrentLimboResolutions = r, this.sa = {}, this.ia = new Kn((t => Xe(t)), Ye), \n        this.ra = new Map, \n        /**\n         * The keys of documents that are in limbo for which we haven't yet started a\n         * limbo resolution query. The strings in this set are the result of calling\n         * `key.path.canonicalString()` where `key` is a `DocumentKey` object.\n         *\n         * The `Set` type was chosen because it provides efficient lookup and removal\n         * of arbitrary elements and it also maintains insertion order, providing the\n         * desired queue-like FIFO semantics.\n         */\n        this.oa = new Set, \n        /**\n         * Keeps track of the target ID for each document that is in limbo with an\n         * active target.\n         */\n        this.ua = new fe(xt.comparator), \n        /**\n         * Keeps track of the information about an active limbo resolution for each\n         * active target ID that was started for the purpose of limbo resolution.\n         */\n        this.aa = new Map, this.ca = new Io, \n        /** Stores user completion handlers, indexed by User and BatchId. */\n        this.ha = {}, \n        /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n        this.la = new Map, this.fa = br.yn(), this.onlineState = \"Unknown\" /* Unknown */ , \n        // The primary state is set to `true` or `false` immediately after Firestore\n        // startup. In the interim, a client should only be considered primary if\n        // `isPrimary` is true.\n        this.da = void 0;\n    }\n    get isPrimaryClient() {\n        return !0 === this.da;\n    }\n}\n\n/**\n * Initiates the new listen, resolves promise when listen enqueued to the\n * server. All the subsequent view snapshots or errors are sent to the\n * subscribed handlers. Returns the initial snapshot.\n */\nasync function Yu(t, e) {\n    const n = Pa(t);\n    let s, i;\n    const r = n.ia.get(e);\n    if (r) \n    // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n    // already exists when EventManager calls us for the first time. This\n    // happens when the primary tab is already listening to this query on\n    // behalf of another tab and the user of the primary also starts listening\n    // to the query. EventManager will not have an assigned target ID in this\n    // case and calls `listen` to obtain this ID.\n    s = r.targetId, n.sharedClientState.addLocalQueryTarget(s), i = r.view.ea(); else {\n        const t = await co(n.localStore, He(e));\n        n.isPrimaryClient && nu(n.remoteStore, t);\n        const r = n.sharedClientState.addLocalQueryTarget(t.targetId);\n        s = t.targetId, i = await Xu(n, e, s, \"current\" === r);\n    }\n    return i;\n}\n\n/**\n * Registers a view for a previously unknown query and computes its initial\n * snapshot.\n */ async function Xu(t, e, n, s) {\n    // PORTING NOTE: On Web only, we inject the code that registers new Limbo\n    // targets based on view changes. This allows us to only depend on Limbo\n    // changes when user code includes queries.\n    t._a = (e, n, s) => async function(t, e, n, s) {\n        let i = e.view.Wu(n);\n        i.ii && (\n        // The query has a limit and some docs were removed, so we need\n        // to re-run the query against the local store to make sure we\n        // didn't lose any good docs that had been past the limit.\n        i = await lo(t.localStore, e.query, \n        /* usePreviousResults= */ !1).then((({documents: t}) => e.view.Wu(t, i))));\n        const r = s && s.targetChanges.get(e.targetId), o = e.view.applyChanges(i, \n        /* updateLimboDocuments= */ t.isPrimaryClient, r);\n        return la(t, e.targetId, o.Xu), o.snapshot;\n    }(t, e, n, s);\n    const i = await lo(t.localStore, e, \n    /* usePreviousResults= */ !0), r = new Wu(e, i._i), o = r.Wu(i.documents), u = es.createSynthesizedTargetChangeForCurrentChange(n, s && \"Offline\" /* Offline */ !== t.onlineState), a = r.applyChanges(o, \n    /* updateLimboDocuments= */ t.isPrimaryClient, u);\n    la(t, n, a.Xu);\n    const c = new zu(e, n, r);\n    return t.ia.set(e, c), t.ra.has(n) ? t.ra.get(n).push(e) : t.ra.set(n, [ e ]), a.snapshot;\n}\n\n/** Stops listening to the query. */ async function Zu(t, e) {\n    const n = K(t), s = n.ia.get(e), i = n.ra.get(s.targetId);\n    if (i.length > 1) return n.ra.set(s.targetId, i.filter((t => !Ye(t, e)))), void n.ia.delete(e);\n    // No other queries are mapped to the target, clean up the query and the target.\n        if (n.isPrimaryClient) {\n        // We need to remove the local query target first to allow us to verify\n        // whether any other client is still interested in this target.\n        n.sharedClientState.removeLocalQueryTarget(s.targetId);\n        n.sharedClientState.isActiveQueryTarget(s.targetId) || await ho(n.localStore, s.targetId, \n        /*keepPersistedTargetData=*/ !1).then((() => {\n            n.sharedClientState.clearQueryState(s.targetId), su(n.remoteStore, s.targetId), \n            ca(n, s.targetId);\n        })).catch(Dr);\n    } else ca(n, s.targetId), await ho(n.localStore, s.targetId, \n    /*keepPersistedTargetData=*/ !0);\n}\n\n/**\n * Initiates the write of local mutation batch which involves adding the\n * writes to the mutation queue, notifying the remote store about new\n * mutations and raising events for any changes this write caused.\n *\n * The promise returned by this call is resolved when the above steps\n * have completed, *not* when the write was acked by the backend. The\n * userCallback is resolved once the write was acked/rejected by the\n * backend (or failed locally for any other reason).\n */ async function ta(t, e, n) {\n    const s = Va(t);\n    try {\n        const t = await function(t, e) {\n            const n = K(t), s = at.now(), i = e.reduce(((t, e) => t.add(e.key)), Yn());\n            let r;\n            return n.persistence.runTransaction(\"Locally write mutations\", \"readwrite\", (t => n.fi.Ks(t, i).next((i => {\n                r = i;\n                // For non-idempotent mutations (such as `FieldValue.increment()`),\n                // we record the base state in a separate patch mutation. This is\n                // later used to guarantee consistent values and prevents flicker\n                // even if the backend sends us an update that already includes our\n                // transform.\n                const o = [];\n                for (const t of e) {\n                    const e = vn(t, r.get(t.key));\n                    null != e && \n                    // NOTE: The base state should only be applied if there's some\n                    // existing document to override, so use a Precondition of\n                    // exists=true\n                    o.push(new xn(t.key, e, ee(e.value.mapValue), An.exists(!0)));\n                }\n                return n.Bs.addMutationBatch(t, s, o, e);\n            })))).then((t => (t.applyToLocalDocumentSet(r), {\n                batchId: t.batchId,\n                changes: r\n            })));\n        }(s.localStore, e);\n        s.sharedClientState.addPendingMutation(t.batchId), function(t, e, n) {\n            let s = t.ha[t.currentUser.toKey()];\n            s || (s = new fe(rt));\n            s = s.insert(e, n), t.ha[t.currentUser.toKey()] = s;\n        }\n        /**\n * Resolves or rejects the user callback for the given batch and then discards\n * it.\n */ (s, t.batchId, n), await _a(s, t.changes), await wu(s.remoteStore);\n    } catch (t) {\n        // If we can't persist the mutation, we reject the user callback and\n        // don't send the mutation. The user can then retry the write.\n        const e = Su(t, \"Failed to persist write\");\n        n.reject(e);\n    }\n}\n\n/**\n * Applies one remote event to the sync engine, notifying any views of the\n * changes, and releasing any pending mutation batches that would become\n * visible because of the snapshot version the remote event contains.\n */ async function ea(t, e) {\n    const n = K(t);\n    try {\n        const t = await oo(n.localStore, e);\n        // Update `receivedDocument` as appropriate for any limbo targets.\n                e.targetChanges.forEach(((t, e) => {\n            const s = n.aa.get(e);\n            s && (\n            // Since this is a limbo resolution lookup, it's for a single document\n            // and it could be added, modified, or removed, but not a combination.\n            U(t.addedDocuments.size + t.modifiedDocuments.size + t.removedDocuments.size <= 1), \n            t.addedDocuments.size > 0 ? s.na = !0 : t.modifiedDocuments.size > 0 ? U(s.na) : t.removedDocuments.size > 0 && (U(s.na), \n            s.na = !1));\n        })), await _a(n, t, e);\n    } catch (t) {\n        await Dr(t);\n    }\n}\n\n/**\n * Applies an OnlineState change to the sync engine and notifies any views of\n * the change.\n */ function na(t, e, n) {\n    const s = K(t);\n    // If we are the secondary client, we explicitly ignore the remote store's\n    // online state (the local client may go offline, even though the primary\n    // tab remains online) and only apply the primary tab's online state from\n    // SharedClientState.\n        if (s.isPrimaryClient && 0 /* RemoteStore */ === n || !s.isPrimaryClient && 1 /* SharedClientState */ === n) {\n        const t = [];\n        s.ia.forEach(((n, s) => {\n            const i = s.view.Pu(e);\n            i.snapshot && t.push(i.snapshot);\n        })), function(t, e) {\n            const n = K(t);\n            n.onlineState = e;\n            let s = !1;\n            n.queries.forEach(((t, n) => {\n                for (const t of n.listeners) \n                // Run global snapshot listeners if a consistent snapshot has been emitted.\n                t.Pu(e) && (s = !0);\n            })), s && Bu(n);\n        }(s.eventManager, e), t.length && s.sa.zo(t), s.onlineState = e, s.isPrimaryClient && s.sharedClientState.setOnlineState(e);\n    }\n}\n\n/**\n * Rejects the listen for the given targetID. This can be triggered by the\n * backend for any active target.\n *\n * @param syncEngine - The sync engine implementation.\n * @param targetId - The targetID corresponds to one previously initiated by the\n * user as part of TargetData passed to listen() on RemoteStore.\n * @param err - A description of the condition that has forced the rejection.\n * Nearly always this will be an indication that the user is no longer\n * authorized to see the data matching the target.\n */ async function sa(t, e, n) {\n    const s = K(t);\n    // PORTING NOTE: Multi-tab only.\n        s.sharedClientState.updateQueryState(e, \"rejected\", n);\n    const i = s.aa.get(e), r = i && i.key;\n    if (r) {\n        // TODO(klimt): We really only should do the following on permission\n        // denied errors, but we don't have the cause code here.\n        // It's a limbo doc. Create a synthetic event saying it was deleted.\n        // This is kind of a hack. Ideally, we would have a method in the local\n        // store to purge a document. However, it would be tricky to keep all of\n        // the local store's invariants with another method.\n        let t = new fe(xt.comparator);\n        // TODO(b/217189216): This limbo document should ideally have a read time,\n        // so that it is picked up by any read-time based scans. The backend,\n        // however, does not send a read time for target removals.\n                t = t.insert(r, ne.newNoDocument(r, ct.min()));\n        const n = Yn().add(r), i = new ts(ct.min(), \n        /* targetChanges= */ new Map, \n        /* targetMismatches= */ new we(rt), t, n);\n        await ea(s, i), \n        // Since this query failed, we won't want to manually unlisten to it.\n        // We only remove it from bookkeeping after we successfully applied the\n        // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to\n        // this query when the RemoteStore restarts the Watch stream, which should\n        // re-trigger the target failure.\n        s.ua = s.ua.remove(r), s.aa.delete(e), da(s);\n    } else await ho(s.localStore, e, \n    /* keepPersistedTargetData */ !1).then((() => ca(s, e, n))).catch(Dr);\n}\n\nasync function ia(t, e) {\n    const n = K(t), s = e.batch.batchId;\n    try {\n        const t = await io(n.localStore, e);\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught\n        // up), so we raise user callbacks first so that they consistently happen\n        // before listen events.\n                aa(n, s, /*error=*/ null), ua(n, s), n.sharedClientState.updateMutationState(s, \"acknowledged\"), \n        await _a(n, t);\n    } catch (t) {\n        await Dr(t);\n    }\n}\n\nasync function ra(t, e, n) {\n    const s = K(t);\n    try {\n        const t = await function(t, e) {\n            const n = K(t);\n            return n.persistence.runTransaction(\"Reject batch\", \"readwrite-primary\", (t => {\n                let s;\n                return n.Bs.lookupMutationBatch(t, e).next((e => (U(null !== e), s = e.keys(), n.Bs.removeMutationBatch(t, e)))).next((() => n.Bs.performConsistencyCheck(t))).next((() => n.fi.Ks(t, s)));\n            }));\n        }\n        /**\n * Returns the largest (latest) batch id in mutation queue that is pending\n * server response.\n *\n * Returns `BATCHID_UNKNOWN` if the queue is empty.\n */ (s.localStore, e);\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught up),\n        // so we raise user callbacks first so that they consistently happen before\n        // listen events.\n                aa(s, e, n), ua(s, e), s.sharedClientState.updateMutationState(e, \"rejected\", n), \n        await _a(s, t);\n    } catch (n) {\n        await Dr(n);\n    }\n}\n\n/**\n * Registers a user callback that resolves when all pending mutations at the moment of calling\n * are acknowledged .\n */ async function oa(t, e) {\n    const n = K(t);\n    au(n.remoteStore) || O(\"SyncEngine\", \"The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled.\");\n    try {\n        const t = await function(t) {\n            const e = K(t);\n            return e.persistence.runTransaction(\"Get highest unacknowledged batch id\", \"readonly\", (t => e.Bs.getHighestUnacknowledgedBatchId(t)));\n        }(n.localStore);\n        if (-1 === t) \n        // Trigger the callback right away if there is no pending writes at the moment.\n        return void e.resolve();\n        const s = n.la.get(t) || [];\n        s.push(e), n.la.set(t, s);\n    } catch (t) {\n        const n = Su(t, \"Initialization of waitForPendingWrites() operation failed\");\n        e.reject(n);\n    }\n}\n\n/**\n * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\n * if there are any.\n */ function ua(t, e) {\n    (t.la.get(e) || []).forEach((t => {\n        t.resolve();\n    })), t.la.delete(e);\n}\n\n/** Reject all outstanding callbacks waiting for pending writes to complete. */ function aa(t, e, n) {\n    const s = K(t);\n    let i = s.ha[s.currentUser.toKey()];\n    // NOTE: Mutations restored from persistence won't have callbacks, so it's\n    // okay for there to be no callback for this ID.\n        if (i) {\n        const t = i.get(e);\n        t && (n ? t.reject(n) : t.resolve(), i = i.remove(e)), s.ha[s.currentUser.toKey()] = i;\n    }\n}\n\nfunction ca(t, e, n = null) {\n    t.sharedClientState.removeLocalQueryTarget(e);\n    for (const s of t.ra.get(e)) t.ia.delete(s), n && t.sa.wa(s, n);\n    if (t.ra.delete(e), t.isPrimaryClient) {\n        t.ca.vi(e).forEach((e => {\n            t.ca.containsKey(e) || \n            // We removed the last reference for this key\n            ha(t, e);\n        }));\n    }\n}\n\nfunction ha(t, e) {\n    t.oa.delete(e.path.canonicalString());\n    // It's possible that the target already got removed because the query failed. In that case,\n    // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n    const n = t.ua.get(e);\n    null !== n && (su(t.remoteStore, n), t.ua = t.ua.remove(e), t.aa.delete(n), da(t));\n}\n\nfunction la(t, e, n) {\n    for (const s of n) if (s instanceof Qu) t.ca.addReference(s.key, e), fa(t, s); else if (s instanceof ju) {\n        O(\"SyncEngine\", \"Document no longer in limbo: \" + s.key), t.ca.removeReference(s.key, e);\n        t.ca.containsKey(s.key) || \n        // We removed the last reference for this key\n        ha(t, s.key);\n    } else L();\n}\n\nfunction fa(t, e) {\n    const n = e.key, s = n.path.canonicalString();\n    t.ua.get(n) || t.oa.has(s) || (O(\"SyncEngine\", \"New document in limbo: \" + n), t.oa.add(s), \n    da(t));\n}\n\n/**\n * Starts listens for documents in limbo that are enqueued for resolution,\n * subject to a maximum number of concurrent resolutions.\n *\n * Without bounding the number of concurrent resolutions, the server can fail\n * with \"resource exhausted\" errors which can lead to pathological client\n * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.\n */ function da(t) {\n    for (;t.oa.size > 0 && t.ua.size < t.maxConcurrentLimboResolutions; ) {\n        const e = t.oa.values().next().value;\n        t.oa.delete(e);\n        const n = new xt(_t.fromString(e)), s = t.fa.next();\n        t.aa.set(s, new Hu(n)), t.ua = t.ua.insert(n, s), nu(t.remoteStore, new Ni(He(Ke(n.path)), s, 2 /* LimboResolution */ , nt.A));\n    }\n}\n\nasync function _a(t, e, n) {\n    const s = K(t), i = [], r = [], o = [];\n    s.ia.isEmpty() || (s.ia.forEach(((t, u) => {\n        o.push(s._a(u, e, n).then((t => {\n            if (t) {\n                s.isPrimaryClient && s.sharedClientState.updateQueryState(u.targetId, t.fromCache ? \"not-current\" : \"current\"), \n                i.push(t);\n                const e = Zr.Ys(u.targetId, t);\n                r.push(e);\n            }\n        })));\n    })), await Promise.all(o), s.sa.zo(i), await async function(t, e) {\n        const n = K(t);\n        try {\n            await n.persistence.runTransaction(\"notifyLocalViewChanges\", \"readwrite\", (t => yi.forEach(e, (e => yi.forEach(e.Hs, (s => n.persistence.referenceDelegate.addReference(t, e.targetId, s))).next((() => yi.forEach(e.Js, (s => n.persistence.referenceDelegate.removeReference(t, e.targetId, s)))))))));\n        } catch (t) {\n            if (!Ai(t)) throw t;\n            // If `notifyLocalViewChanges` fails, we did not advance the sequence\n            // number for the documents that were included in this transaction.\n            // This might trigger them to be deleted earlier than they otherwise\n            // would have, but it should not invalidate the integrity of the data.\n            O(\"LocalStore\", \"Failed to update sequence numbers: \" + t);\n        }\n        for (const t of e) {\n            const e = t.targetId;\n            if (!t.fromCache) {\n                const t = n.ui.get(e), s = t.snapshotVersion, i = t.withLastLimboFreeSnapshotVersion(s);\n                // Advance the last limbo free snapshot version\n                                n.ui = n.ui.insert(e, i);\n            }\n        }\n    }(s.localStore, r));\n}\n\nasync function wa(t, e) {\n    const n = K(t);\n    if (!n.currentUser.isEqual(e)) {\n        O(\"SyncEngine\", \"User change. New user:\", e.toKey());\n        const t = await so(n.localStore, e);\n        n.currentUser = e, \n        // Fails tasks waiting for pending writes requested by previous user.\n        function(t, e) {\n            t.la.forEach((t => {\n                t.forEach((t => {\n                    t.reject(new Q(G.CANCELLED, e));\n                }));\n            })), t.la.clear();\n        }(n, \"'waitForPendingWrites' promise is rejected due to a user change.\"), \n        // TODO(b/114226417): Consider calling this only in the primary tab.\n        n.sharedClientState.handleUserChange(e, t.removedBatchIds, t.addedBatchIds), await _a(n, t.di);\n    }\n}\n\nfunction ma(t, e) {\n    const n = K(t), s = n.aa.get(e);\n    if (s && s.na) return Yn().add(s.key);\n    {\n        let t = Yn();\n        const s = n.ra.get(e);\n        if (!s) return t;\n        for (const e of s) {\n            const s = n.ia.get(e);\n            t = t.unionWith(s.view.ju);\n        }\n        return t;\n    }\n}\n\n/**\n * Reconcile the list of synced documents in an existing view with those\n * from persistence.\n */ async function ga(t, e) {\n    const n = K(t), s = await lo(n.localStore, e.query, \n    /* usePreviousResults= */ !0), i = e.view.ta(s);\n    return n.isPrimaryClient && la(n, e.targetId, i.Xu), i;\n}\n\n/**\n * Retrieves newly changed documents from remote document cache and raises\n * snapshots if needed.\n */\n// PORTING NOTE: Multi-Tab only.\nasync function ya(t, e) {\n    const n = K(t);\n    return _o(n.localStore, e).then((t => _a(n, t)));\n}\n\n/** Applies a mutation state to an existing batch.  */\n// PORTING NOTE: Multi-Tab only.\nasync function pa(t, e, n, s) {\n    const i = K(t), r = await function(t, e) {\n        const n = K(t), s = K(n.Bs);\n        return n.persistence.runTransaction(\"Lookup mutation documents\", \"readonly\", (t => s.fn(t, e).next((e => e ? n.fi.Ks(t, e) : yi.resolve(null)))));\n    }\n    // PORTING NOTE: Multi-Tab only.\n    (i.localStore, e);\n    null !== r ? (\"pending\" === n ? \n    // If we are the primary client, we need to send this write to the\n    // backend. Secondary clients will ignore these writes since their remote\n    // connection is disabled.\n    await wu(i.remoteStore) : \"acknowledged\" === n || \"rejected\" === n ? (\n    // NOTE: Both these methods are no-ops for batches that originated from\n    // other clients.\n    aa(i, e, s || null), ua(i, e), function(t, e) {\n        K(K(t).Bs)._n(e);\n    }\n    // PORTING NOTE: Multi-Tab only.\n    (i.localStore, e)) : L(), await _a(i, r)) : \n    // A throttled tab may not have seen the mutation before it was completed\n    // and removed from the mutation queue, in which case we won't have cached\n    // the affected documents. In this case we can safely ignore the update\n    // since that means we didn't apply the mutation locally at all (if we\n    // had, we would have cached the affected documents), and so we will just\n    // see any resulting document changes via normal remote document updates\n    // as applicable.\n    O(\"SyncEngine\", \"Cannot apply mutation batch with id: \" + e);\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nasync function Ia(t, e) {\n    const n = K(t);\n    if (Pa(n), Va(n), !0 === e && !0 !== n.da) {\n        // Secondary tabs only maintain Views for their local listeners and the\n        // Views internal state may not be 100% populated (in particular\n        // secondary tabs don't track syncedDocuments, the set of documents the\n        // server considers to be in the target). So when a secondary becomes\n        // primary, we need to need to make sure that all views for all targets\n        // match the state on disk.\n        const t = n.sharedClientState.getAllActiveQueryTargets(), e = await Ta(n, t.toArray());\n        n.da = !0, await bu(n.remoteStore, !0);\n        for (const t of e) nu(n.remoteStore, t);\n    } else if (!1 === e && !1 !== n.da) {\n        const t = [];\n        let e = Promise.resolve();\n        n.ra.forEach(((s, i) => {\n            n.sharedClientState.isLocalQueryTarget(i) ? t.push(i) : e = e.then((() => (ca(n, i), \n            ho(n.localStore, i, \n            /*keepPersistedTargetData=*/ !0)))), su(n.remoteStore, i);\n        })), await e, await Ta(n, t), \n        // PORTING NOTE: Multi-Tab only.\n        function(t) {\n            const e = K(t);\n            e.aa.forEach(((t, n) => {\n                su(e.remoteStore, n);\n            })), e.ca.Si(), e.aa = new Map, e.ua = new fe(xt.comparator);\n        }\n        /**\n * Reconcile the query views of the provided query targets with the state from\n * persistence. Raises snapshots for any changes that affect the local\n * client and returns the updated state of all target's query data.\n *\n * @param syncEngine - The sync engine implementation\n * @param targets - the list of targets with views that need to be recomputed\n * @param transitionToPrimary - `true` iff the tab transitions from a secondary\n * tab to a primary tab\n */\n        // PORTING NOTE: Multi-Tab only.\n        (n), n.da = !1, await bu(n.remoteStore, !1);\n    }\n}\n\nasync function Ta(t, e, n) {\n    const s = K(t), i = [], r = [];\n    for (const t of e) {\n        let e;\n        const n = s.ra.get(t);\n        if (n && 0 !== n.length) {\n            // For queries that have a local View, we fetch their current state\n            // from LocalStore (as the resume token and the snapshot version\n            // might have changed) and reconcile their views with the persisted\n            // state (the list of syncedDocuments may have gotten out of sync).\n            e = await co(s.localStore, He(n[0]));\n            for (const t of n) {\n                const e = s.ia.get(t), n = await ga(s, e);\n                n.snapshot && r.push(n.snapshot);\n            }\n        } else {\n            // For queries that never executed on this client, we need to\n            // allocate the target in LocalStore and initialize a new View.\n            const n = await fo(s.localStore, t);\n            e = await co(s.localStore, n), await Xu(s, Ea(n), t, \n            /*current=*/ !1);\n        }\n        i.push(e);\n    }\n    return s.sa.zo(r), i;\n}\n\n/**\n * Creates a `Query` object from the specified `Target`. There is no way to\n * obtain the original `Query`, so we synthesize a `Query` from the `Target`\n * object.\n *\n * The synthesized result might be different from the original `Query`, but\n * since the synthesized `Query` should return the same results as the\n * original one (only the presentation of results might differ), the potential\n * difference will not cause issues.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction Ea(t) {\n    return qe(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, \"F\" /* First */ , t.startAt, t.endAt);\n}\n\n/** Returns the IDs of the clients that are currently active. */\n// PORTING NOTE: Multi-Tab only.\nfunction Aa(t) {\n    const e = K(t);\n    return K(K(e.localStore).persistence).Fs();\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nasync function Ra(t, e, n, s) {\n    const i = K(t);\n    if (i.da) \n    // If we receive a target state notification via WebStorage, we are\n    // either already secondary or another tab has taken the primary lease.\n    return void O(\"SyncEngine\", \"Ignoring unexpected query state notification.\");\n    const r = i.ra.get(e);\n    if (r && r.length > 0) switch (n) {\n      case \"current\":\n      case \"not-current\":\n        {\n            const t = await _o(i.localStore, en(r[0])), s = ts.createSynthesizedRemoteEventForCurrentChange(e, \"current\" === n);\n            await _a(i, t, s);\n            break;\n        }\n\n      case \"rejected\":\n        await ho(i.localStore, e, \n        /* keepPersistedTargetData */ !0), ca(i, e, s);\n        break;\n\n      default:\n        L();\n    }\n}\n\n/** Adds or removes Watch targets for queries from different tabs. */ async function ba(t, e, n) {\n    const s = Pa(t);\n    if (s.da) {\n        for (const t of e) {\n            if (s.ra.has(t)) {\n                // A target might have been added in a previous attempt\n                O(\"SyncEngine\", \"Adding an already active target \" + t);\n                continue;\n            }\n            const e = await fo(s.localStore, t), n = await co(s.localStore, e);\n            await Xu(s, Ea(e), n.targetId, \n            /*current=*/ !1), nu(s.remoteStore, n);\n        }\n        for (const t of n) \n        // Check that the target is still active since the target might have been\n        // removed if it has been rejected by the backend.\n        s.ra.has(t) && \n        // Release queries that are still active.\n        await ho(s.localStore, t, \n        /* keepPersistedTargetData */ !1).then((() => {\n            su(s.remoteStore, t), ca(s, t);\n        })).catch(Dr);\n    }\n}\n\nfunction Pa(t) {\n    const e = K(t);\n    return e.remoteStore.remoteSyncer.applyRemoteEvent = ea.bind(null, e), e.remoteStore.remoteSyncer.getRemoteKeysForTarget = ma.bind(null, e), \n    e.remoteStore.remoteSyncer.rejectListen = sa.bind(null, e), e.sa.zo = Fu.bind(null, e.eventManager), \n    e.sa.wa = $u.bind(null, e.eventManager), e;\n}\n\nfunction Va(t) {\n    const e = K(t);\n    return e.remoteStore.remoteSyncer.applySuccessfulWrite = ia.bind(null, e), e.remoteStore.remoteSyncer.rejectFailedWrite = ra.bind(null, e), \n    e;\n}\n\n/**\n * Loads a Firestore bundle into the SDK. The returned promise resolves when\n * the bundle finished loading.\n *\n * @param syncEngine - SyncEngine to use.\n * @param bundleReader - Bundle to load into the SDK.\n * @param task - LoadBundleTask used to update the loading progress to public API.\n */ function va(t, e, n) {\n    const s = K(t);\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        (\n    /** Loads a bundle and returns the list of affected collection groups. */\n    async function(t, e, n) {\n        try {\n            const s = await e.getMetadata();\n            if (await function(t, e) {\n                const n = K(t), s = ws(e.createTime);\n                return n.persistence.runTransaction(\"hasNewerBundle\", \"readonly\", (t => n._s.getBundleMetadata(t, e.id))).then((t => !!t && t.createTime.compareTo(s) >= 0));\n            }\n            /**\n * Saves the given `BundleMetadata` to local persistence.\n */ (t.localStore, s)) return await e.close(), n._completeWith(function(t) {\n                return {\n                    taskState: \"Success\",\n                    documentsLoaded: t.totalDocuments,\n                    bytesLoaded: t.totalBytes,\n                    totalDocuments: t.totalDocuments,\n                    totalBytes: t.totalBytes\n                };\n            }(s)), Promise.resolve(new Set);\n            n._updateProgress(Gu(s));\n            const i = new Ku(s, t.localStore, e.M);\n            let r = await e.ma();\n            for (;r; ) {\n                const t = await i.Fu(r);\n                t && n._updateProgress(t), r = await e.ma();\n            }\n            const o = await i.complete();\n            return await _a(t, o.Lu, \n            /* remoteEvent */ void 0), \n            // Save metadata, so loading the same bundle will skip.\n            await function(t, e) {\n                const n = K(t);\n                return n.persistence.runTransaction(\"Save bundle\", \"readwrite\", (t => n._s.saveBundleMetadata(t, e)));\n            }\n            /**\n * Returns a promise of a `NamedQuery` associated with given query name. Promise\n * resolves to undefined if no persisted data can be found.\n */ (t.localStore, s), n._completeWith(o.progress), Promise.resolve(o.Bu);\n        } catch (t) {\n            return $(\"SyncEngine\", `Loading bundle failed with ${t}`), n._failWith(t), Promise.resolve(new Set);\n        }\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Provides all components needed for Firestore with in-memory persistence.\n * Uses EagerGC garbage collection.\n */)(s, e, n).then((t => {\n        s.sharedClientState.notifyBundleLoaded(t);\n    }));\n}\n\nclass Sa {\n    constructor() {\n        this.synchronizeTabs = !1;\n    }\n    async initialize(t) {\n        this.M = jo(t.databaseInfo.databaseId), this.sharedClientState = this.ga(t), this.persistence = this.ya(t), \n        await this.persistence.start(), this.gcScheduler = this.pa(t), this.localStore = this.Ia(t);\n    }\n    pa(t) {\n        return null;\n    }\n    Ia(t) {\n        return no(this.persistence, new to, t.initialUser, this.M);\n    }\n    ya(t) {\n        return new Po(vo.Yi, this.M);\n    }\n    ga(t) {\n        return new $o;\n    }\n    async terminate() {\n        this.gcScheduler && this.gcScheduler.stop(), await this.sharedClientState.shutdown(), \n        await this.persistence.shutdown();\n    }\n}\n\n/**\n * Provides all components needed for Firestore with IndexedDB persistence.\n */ class Da extends Sa {\n    constructor(t, e, n) {\n        super(), this.Ta = t, this.cacheSizeBytes = e, this.forceOwnership = n, this.synchronizeTabs = !1;\n    }\n    async initialize(t) {\n        await super.initialize(t), await this.Ta.initialize(this, t), \n        // Enqueue writes from a previous session\n        await Va(this.Ta.syncEngine), await wu(this.Ta.remoteStore), \n        // NOTE: This will immediately call the listener, so we make sure to\n        // set it after localStore / remoteStore are started.\n        await this.persistence.Ts((() => (this.gcScheduler && !this.gcScheduler.started && this.gcScheduler.start(this.localStore), \n        Promise.resolve())));\n    }\n    Ia(t) {\n        return no(this.persistence, new to, t.initialUser, this.M);\n    }\n    pa(t) {\n        const e = this.persistence.referenceDelegate.garbageCollector;\n        return new Nr(e, t.asyncQueue);\n    }\n    ya(t) {\n        const e = Yr(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey), n = void 0 !== this.cacheSizeBytes ? gr.withCacheSize(this.cacheSizeBytes) : gr.DEFAULT;\n        return new zr(this.synchronizeTabs, e, t.clientId, n, t.asyncQueue, Go(), Qo(), this.M, this.sharedClientState, !!this.forceOwnership);\n    }\n    ga(t) {\n        return new $o;\n    }\n}\n\n/**\n * Provides all components needed for Firestore with multi-tab IndexedDB\n * persistence.\n *\n * In the legacy client, this provider is used to provide both multi-tab and\n * non-multi-tab persistence since we cannot tell at build time whether\n * `synchronizeTabs` will be enabled.\n */ class Ca extends Da {\n    constructor(t, e) {\n        super(t, e, /* forceOwnership= */ !1), this.Ta = t, this.cacheSizeBytes = e, this.synchronizeTabs = !0;\n    }\n    async initialize(t) {\n        await super.initialize(t);\n        const e = this.Ta.syncEngine;\n        this.sharedClientState instanceof Fo && (this.sharedClientState.syncEngine = {\n            $r: pa.bind(null, e),\n            Br: Ra.bind(null, e),\n            Lr: ba.bind(null, e),\n            Fs: Aa.bind(null, e),\n            Fr: ya.bind(null, e)\n        }, await this.sharedClientState.start()), \n        // NOTE: This will immediately call the listener, so we make sure to\n        // set it after localStore / remoteStore are started.\n        await this.persistence.Ts((async t => {\n            await Ia(this.Ta.syncEngine, t), this.gcScheduler && (t && !this.gcScheduler.started ? this.gcScheduler.start(this.localStore) : t || this.gcScheduler.stop());\n        }));\n    }\n    ga(t) {\n        const e = Go();\n        if (!Fo.vt(e)) throw new Q(G.UNIMPLEMENTED, \"IndexedDB persistence is only available on platforms that support LocalStorage.\");\n        const n = Yr(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey);\n        return new Fo(e, t.asyncQueue, n, t.clientId, t.initialUser);\n    }\n}\n\n/**\n * Initializes and wires the components that are needed to interface with the\n * network.\n */ class xa {\n    async initialize(t, e) {\n        this.localStore || (this.localStore = t.localStore, this.sharedClientState = t.sharedClientState, \n        this.datastore = this.createDatastore(e), this.remoteStore = this.createRemoteStore(e), \n        this.eventManager = this.createEventManager(e), this.syncEngine = this.createSyncEngine(e, \n        /* startAsPrimary=*/ !t.synchronizeTabs), this.sharedClientState.onlineStateHandler = t => na(this.syncEngine, t, 1 /* SharedClientState */), \n        this.remoteStore.remoteSyncer.handleCredentialChange = wa.bind(null, this.syncEngine), \n        await bu(this.remoteStore, this.syncEngine.isPrimaryClient));\n    }\n    createEventManager(t) {\n        return new ku;\n    }\n    createDatastore(t) {\n        const e = jo(t.databaseInfo.databaseId), n = (s = t.databaseInfo, new Ko(s));\n        var s;\n        /** Return the Platform-specific connectivity monitor. */        return function(t, e, n, s) {\n            return new Yo(t, e, n, s);\n        }(t.authCredentials, t.appCheckCredentials, n, e);\n    }\n    createRemoteStore(t) {\n        return e = this.localStore, n = this.datastore, s = t.asyncQueue, i = t => na(this.syncEngine, t, 0 /* RemoteStore */), \n        r = Lo.vt() ? new Lo : new Bo, new Zo(e, n, s, i, r);\n        var e, n, s, i, r;\n        /** Re-enables the network. Idempotent. */    }\n    createSyncEngine(t, e) {\n        return function(t, e, n, \n        // PORTING NOTE: Manages state synchronization in multi-tab environments.\n        s, i, r, o) {\n            const u = new Ju(t, e, n, s, i, r);\n            return o && (u.da = !0), u;\n        }(this.localStore, this.remoteStore, this.eventManager, this.sharedClientState, t.initialUser, t.maxConcurrentLimboResolutions, e);\n    }\n    terminate() {\n        return async function(t) {\n            const e = K(t);\n            O(\"RemoteStore\", \"RemoteStore shutting down.\"), e.wu.add(5 /* Shutdown */), await eu(e), \n            e.gu.shutdown(), \n            // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n            // triggering spurious listener events with cached data, etc.\n            e.yu.set(\"Unknown\" /* Unknown */);\n        }(this.remoteStore);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * How many bytes to read each time when `ReadableStreamReader.read()` is\n * called. Only applicable for byte streams that we control (e.g. those backed\n * by an UInt8Array).\n */\n/**\n * Builds a `ByteStreamReader` from a UInt8Array.\n * @param source - The data source to use.\n * @param bytesPerRead - How many bytes each `read()` from the returned reader\n *        will read.\n */\nfunction Na(t, e = 10240) {\n    let n = 0;\n    // The TypeScript definition for ReadableStreamReader changed. We use\n    // `any` here to allow this code to compile with different versions.\n    // See https://github.com/microsoft/TypeScript/issues/42970\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        async read() {\n            if (n < t.byteLength) {\n                const s = {\n                    value: t.slice(n, n + e),\n                    done: !1\n                };\n                return n += e, s;\n            }\n            return {\n                done: !0\n            };\n        },\n        async cancel() {},\n        releaseLock() {},\n        closed: Promise.reject(\"unimplemented\")\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * On web, a `ReadableStream` is wrapped around by a `ByteStreamReader`.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\nclass ka {\n    constructor(t) {\n        this.observer = t, \n        /**\n         * When set to true, will not raise future events. Necessary to deal with\n         * async detachment of listener.\n         */\n        this.muted = !1;\n    }\n    next(t) {\n        this.observer.next && this.Ea(this.observer.next, t);\n    }\n    error(t) {\n        this.observer.error ? this.Ea(this.observer.error, t) : console.error(\"Uncaught Error in snapshot listener:\", t);\n    }\n    Aa() {\n        this.muted = !0;\n    }\n    Ea(t, e) {\n        this.muted || setTimeout((() => {\n            this.muted || t(e);\n        }), 0);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A class representing a bundle.\n *\n * Takes a bundle stream or buffer, and presents abstractions to read bundled\n * elements out of the underlying content.\n */ class Ma {\n    constructor(\n    /** The reader to read from underlying binary bundle data source. */\n    t, e) {\n        this.Ra = t, this.M = e, \n        /** Cached bundle metadata. */\n        this.metadata = new j, \n        /**\n         * Internal buffer to hold bundle content, accumulating incomplete element\n         * content.\n         */\n        this.buffer = new Uint8Array, this.ba = new TextDecoder(\"utf-8\"), \n        // Read the metadata (which is the first element).\n        this.Pa().then((t => {\n            t && t.Mu() ? this.metadata.resolve(t.payload.metadata) : this.metadata.reject(new Error(`The first element of the bundle is not a metadata, it is\\n             ${JSON.stringify(null == t ? void 0 : t.payload)}`));\n        }), (t => this.metadata.reject(t)));\n    }\n    close() {\n        return this.Ra.cancel();\n    }\n    async getMetadata() {\n        return this.metadata.promise;\n    }\n    async ma() {\n        // Makes sure metadata is read before proceeding.\n        return await this.getMetadata(), this.Pa();\n    }\n    /**\n     * Reads from the head of internal buffer, and pulling more data from\n     * underlying stream if a complete element cannot be found, until an\n     * element(including the prefixed length and the JSON string) is found.\n     *\n     * Once a complete element is read, it is dropped from internal buffer.\n     *\n     * Returns either the bundled element, or null if we have reached the end of\n     * the stream.\n     */    async Pa() {\n        const t = await this.Va();\n        if (null === t) return null;\n        const e = this.ba.decode(t), n = Number(e);\n        isNaN(n) && this.va(`length string (${e}) is not valid number`);\n        const s = await this.Sa(n);\n        return new Uu(JSON.parse(s), t.length + n);\n    }\n    /** First index of '{' from the underlying buffer. */    Da() {\n        return this.buffer.findIndex((t => t === \"{\".charCodeAt(0)));\n    }\n    /**\n     * Reads from the beginning of the internal buffer, until the first '{', and\n     * return the content.\n     *\n     * If reached end of the stream, returns a null.\n     */    async Va() {\n        for (;this.Da() < 0; ) {\n            if (await this.Ca()) break;\n        }\n        // Broke out of the loop because underlying stream is closed, and there\n        // happens to be no more data to process.\n                if (0 === this.buffer.length) return null;\n        const t = this.Da();\n        // Broke out of the loop because underlying stream is closed, but still\n        // cannot find an open bracket.\n                t < 0 && this.va(\"Reached the end of bundle when a length string is expected.\");\n        const e = this.buffer.slice(0, t);\n        // Update the internal buffer to drop the read length.\n                return this.buffer = this.buffer.slice(t), e;\n    }\n    /**\n     * Reads from a specified position from the internal buffer, for a specified\n     * number of bytes, pulling more data from the underlying stream if needed.\n     *\n     * Returns a string decoded from the read bytes.\n     */    async Sa(t) {\n        for (;this.buffer.length < t; ) {\n            await this.Ca() && this.va(\"Reached the end of bundle when more is expected.\");\n        }\n        const e = this.ba.decode(this.buffer.slice(0, t));\n        // Update the internal buffer to drop the read json string.\n                return this.buffer = this.buffer.slice(t), e;\n    }\n    va(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        throw this.Ra.cancel(), new Error(`Invalid bundle format: ${t}`);\n    }\n    /**\n     * Pulls more data from underlying stream to internal buffer.\n     * Returns a boolean indicating whether the stream is finished.\n     */    async Ca() {\n        const t = await this.Ra.read();\n        if (!t.done) {\n            const e = new Uint8Array(this.buffer.length + t.value.length);\n            e.set(this.buffer), e.set(t.value, this.buffer.length), this.buffer = e;\n        }\n        return t.done;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nclass Oa {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new Q(G.INVALID_ARGUMENT, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await async function(t, e) {\n            const n = K(t), s = Es(n.M) + \"/documents\", i = {\n                documents: e.map((t => ys(n.M, t)))\n            }, r = await n._o(\"BatchGetDocuments\", s, i), o = new Map;\n            r.forEach((t => {\n                const e = Ps(n.M, t);\n                o.set(e.key.toString(), e);\n            }));\n            const u = [];\n            return e.forEach((t => {\n                const e = o.get(t.toString());\n                U(!!e), u.push(e);\n            })), u;\n        }(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new On(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = xt.fromPath(e);\n            this.mutations.push(new Fn(n, this.precondition(n)));\n        })), await async function(t, e) {\n            const n = K(t), s = Es(n.M) + \"/documents\", i = {\n                writes: e.map((t => vs(n.M, t)))\n            };\n            await n.co(\"Commit\", s, i);\n        }(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw L();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            e = ct.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new Q(G.ABORTED, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? An.updateTime(e) : An.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(ct.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new Q(G.INVALID_ARGUMENT, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return An.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return An.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */ class Fa {\n    constructor(t, e, n, s, i) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = s, \n        this.deferred = i, this.xa = n.maxAttempts, this.No = new Wo(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.xa -= 1, this.Na();\n    }\n    Na() {\n        this.No.Ro((async () => {\n            const t = new Oa(this.datastore), e = this.ka(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Ma(t);\n                }))));\n            })).catch((t => {\n                this.Ma(t);\n            }));\n        }));\n    }\n    ka(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !St(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Ma(t) {\n        this.xa > 0 && this.Oa(t) ? (this.xa -= 1, this.asyncQueue.enqueueAndForget((() => (this.Na(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Oa(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !Un(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the\n * pieces of the client SDK architecture. It is responsible for creating the\n * async queue that is shared by all of the other components in the system.\n */\nclass $a {\n    constructor(t, e, \n    /**\n     * Asynchronous queue responsible for all of our internal processing. When\n     * we get incoming work from the user (via public API) or the network\n     * (incoming GRPC messages), we should always schedule onto this queue.\n     * This ensures all of our work is properly serialized (e.g. we don't\n     * start processing a new operation while the previous one is waiting for\n     * an async I/O to complete).\n     */\n    n, s) {\n        this.authCredentials = t, this.appCheckCredentials = e, this.asyncQueue = n, this.databaseInfo = s, \n        this.user = C.UNAUTHENTICATED, this.clientId = it.R(), this.authCredentialListener = () => Promise.resolve(), \n        this.appCheckCredentialListener = () => Promise.resolve(), this.authCredentials.start(n, (async t => {\n            O(\"FirestoreClient\", \"Received user=\", t.uid), await this.authCredentialListener(t), \n            this.user = t;\n        })), this.appCheckCredentials.start(n, (t => (O(\"FirestoreClient\", \"Received new app check token=\", t), \n        this.appCheckCredentialListener(t, this.user))));\n    }\n    async getConfiguration() {\n        return {\n            asyncQueue: this.asyncQueue,\n            databaseInfo: this.databaseInfo,\n            clientId: this.clientId,\n            authCredentials: this.authCredentials,\n            appCheckCredentials: this.appCheckCredentials,\n            initialUser: this.user,\n            maxConcurrentLimboResolutions: 100\n        };\n    }\n    setCredentialChangeListener(t) {\n        this.authCredentialListener = t;\n    }\n    setAppCheckTokenChangeListener(t) {\n        this.appCheckCredentialListener = t;\n    }\n    /**\n     * Checks that the client has not been terminated. Ensures that other methods on\n     * this class cannot be called after the client is terminated.\n     */    verifyNotTerminated() {\n        if (this.asyncQueue.isShuttingDown) throw new Q(G.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }\n    terminate() {\n        this.asyncQueue.enterRestrictedMode();\n        const t = new j;\n        return this.asyncQueue.enqueueAndForgetEvenWhileRestricted((async () => {\n            try {\n                this.onlineComponents && await this.onlineComponents.terminate(), this.offlineComponents && await this.offlineComponents.terminate(), \n                // The credentials provider must be terminated after shutting down the\n                // RemoteStore as it will prevent the RemoteStore from retrieving auth\n                // tokens.\n                this.authCredentials.shutdown(), this.appCheckCredentials.shutdown(), t.resolve();\n            } catch (e) {\n                const n = Su(e, \"Failed to shutdown persistence\");\n                t.reject(n);\n            }\n        })), t.promise;\n    }\n}\n\nasync function Ba(t, e) {\n    t.asyncQueue.verifyOperationInProgress(), O(\"FirestoreClient\", \"Initializing OfflineComponentProvider\");\n    const n = await t.getConfiguration();\n    await e.initialize(n);\n    let s = n.initialUser;\n    t.setCredentialChangeListener((async t => {\n        s.isEqual(t) || (await so(e.localStore, t), s = t);\n    })), \n    // When a user calls clearPersistence() in one client, all other clients\n    // need to be terminated to allow the delete to succeed.\n    e.persistence.setDatabaseDeletedListener((() => t.terminate())), t.offlineComponents = e;\n}\n\nasync function La(t, e) {\n    t.asyncQueue.verifyOperationInProgress();\n    const n = await Ua(t);\n    O(\"FirestoreClient\", \"Initializing OnlineComponentProvider\");\n    const s = await t.getConfiguration();\n    await e.initialize(n, s), \n    // The CredentialChangeListener of the online component provider takes\n    // precedence over the offline component provider.\n    t.setCredentialChangeListener((t => Ru(e.remoteStore, t))), t.setAppCheckTokenChangeListener(((t, n) => Ru(e.remoteStore, n))), \n    t.onlineComponents = e;\n}\n\nasync function Ua(t) {\n    return t.offlineComponents || (O(\"FirestoreClient\", \"Using default OfflineComponentProvider\"), \n    await Ba(t, new Sa)), t.offlineComponents;\n}\n\nasync function qa(t) {\n    return t.onlineComponents || (O(\"FirestoreClient\", \"Using default OnlineComponentProvider\"), \n    await La(t, new xa)), t.onlineComponents;\n}\n\nfunction Ka(t) {\n    return Ua(t).then((t => t.persistence));\n}\n\nfunction Ga(t) {\n    return Ua(t).then((t => t.localStore));\n}\n\nfunction Qa(t) {\n    return qa(t).then((t => t.remoteStore));\n}\n\nfunction ja(t) {\n    return qa(t).then((t => t.syncEngine));\n}\n\nasync function Wa(t) {\n    const e = await qa(t), n = e.eventManager;\n    return n.onListen = Yu.bind(null, e.syncEngine), n.onUnlisten = Zu.bind(null, e.syncEngine), \n    n;\n}\n\n/** Enables the network connection and re-enqueues all pending operations. */ function za(t) {\n    return t.asyncQueue.enqueue((async () => {\n        const e = await Ka(t), n = await Qa(t);\n        return e.setNetworkEnabled(!0), function(t) {\n            const e = K(t);\n            return e.wu.delete(0 /* UserDisabled */), tu(e);\n        }(n);\n    }));\n}\n\n/** Disables the network connection. Pending operations will not complete. */ function Ha(t) {\n    return t.asyncQueue.enqueue((async () => {\n        const e = await Ka(t), n = await Qa(t);\n        return e.setNetworkEnabled(!1), async function(t) {\n            const e = K(t);\n            e.wu.add(0 /* UserDisabled */), await eu(e), \n            // Set the OnlineState to Offline so get()s return from cache, etc.\n            e.yu.set(\"Offline\" /* Offline */);\n        }(n);\n    }));\n}\n\n/**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */ function Ja(t, e) {\n    const n = new j;\n    return t.asyncQueue.enqueueAndForget((async () => async function(t, e, n) {\n        try {\n            const s = await function(t, e) {\n                const n = K(t);\n                return n.persistence.runTransaction(\"read document\", \"readonly\", (t => n.fi.Ls(t, e)));\n            }(t, e);\n            s.isFoundDocument() ? n.resolve(s) : s.isNoDocument() ? n.resolve(null) : n.reject(new Q(G.UNAVAILABLE, \"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)\"));\n        } catch (t) {\n            const s = Su(t, `Failed to get document '${e} from cache`);\n            n.reject(s);\n        }\n    }\n    /**\n * Retrieves a latency-compensated document from the backend via a\n * SnapshotListener.\n */ (await Ga(t), e, n))), n.promise;\n}\n\nfunction Ya(t, e, n = {}) {\n    const s = new j;\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e, n, s, i) {\n        const r = new ka({\n            next: r => {\n                // Remove query first before passing event to user to avoid\n                // user actions affecting the now stale query.\n                e.enqueueAndForget((() => Ou(t, o)));\n                const u = r.docs.has(n);\n                !u && r.fromCache ? \n                // TODO(dimond): If we're online and the document doesn't\n                // exist then we resolve with a doc.exists set to false. If\n                // we're offline however, we reject the Promise in this\n                // case. Two options: 1) Cache the negative response from\n                // the server so we can deliver that even when you're\n                // offline 2) Actually reject the Promise in the online case\n                // if the document doesn't exist.\n                i.reject(new Q(G.UNAVAILABLE, \"Failed to get document because the client is offline.\")) : u && r.fromCache && s && \"server\" === s.source ? i.reject(new Q(G.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to \"server\" to retrieve the cached document.)')) : i.resolve(r);\n            },\n            error: t => i.reject(t)\n        }), o = new Lu(Ke(n.path), r, {\n            includeMetadataChanges: !0,\n            ku: !0\n        });\n        return Mu(t, o);\n    }(await Wa(t), t.asyncQueue, e, n, s))), s.promise;\n}\n\nfunction Xa(t, e) {\n    const n = new j;\n    return t.asyncQueue.enqueueAndForget((async () => async function(t, e, n) {\n        try {\n            const s = await lo(t, e, \n            /* usePreviousResults= */ !0), i = new Wu(e, s._i), r = i.Wu(s.documents), o = i.applyChanges(r, \n            /* updateLimboDocuments= */ !1);\n            n.resolve(o.snapshot);\n        } catch (t) {\n            const s = Su(t, `Failed to execute query '${e} against cache`);\n            n.reject(s);\n        }\n    }\n    /**\n * Retrieves a latency-compensated query snapshot from the backend via a\n * SnapshotListener.\n */ (await Ga(t), e, n))), n.promise;\n}\n\nfunction Za(t, e, n = {}) {\n    const s = new j;\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e, n, s, i) {\n        const r = new ka({\n            next: n => {\n                // Remove query first before passing event to user to avoid\n                // user actions affecting the now stale query.\n                e.enqueueAndForget((() => Ou(t, o))), n.fromCache && \"server\" === s.source ? i.reject(new Q(G.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to \"server\" to retrieve the cached documents.)')) : i.resolve(n);\n            },\n            error: t => i.reject(t)\n        }), o = new Lu(n, r, {\n            includeMetadataChanges: !0,\n            ku: !0\n        });\n        return Mu(t, o);\n    }(await Wa(t), t.asyncQueue, e, n, s))), s.promise;\n}\n\nfunction tc(t, e) {\n    const n = new ka(e);\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e) {\n        K(t).bu.add(e), \n        // Immediately fire an initial event, indicating all existing listeners\n        // are in-sync.\n        e.next();\n    }(await Wa(t), n))), () => {\n        n.Aa(), t.asyncQueue.enqueueAndForget((async () => function(t, e) {\n            K(t).bu.delete(e);\n        }(await Wa(t), n)));\n    };\n}\n\n/**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */ function ec(t, e, n) {\n    const s = new j;\n    return t.asyncQueue.enqueueAndForget((async () => {\n        const i = await function(t) {\n            return qa(t).then((t => t.datastore));\n        }(t);\n        new Fa(t.asyncQueue, i, n, e, s).run();\n    })), s.promise;\n}\n\nfunction nc(t, e, n, s) {\n    const i = function(t, e) {\n        let n;\n        n = \"string\" == typeof t ? (new TextEncoder).encode(t) : t;\n        return function(t, e) {\n            return new Ma(t, e);\n        }(function(t, e) {\n            if (t instanceof Uint8Array) return Na(t, e);\n            if (t instanceof ArrayBuffer) return Na(new Uint8Array(t), e);\n            if (t instanceof ReadableStream) return t.getReader();\n            throw new Error(\"Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream\");\n        }(n), e);\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (n, jo(e));\n    t.asyncQueue.enqueueAndForget((async () => {\n        va(await ja(t), i, s);\n    }));\n}\n\nfunction sc(t, e) {\n    return t.asyncQueue.enqueue((async () => function(t, e) {\n        const n = K(t);\n        return n.persistence.runTransaction(\"Get named query\", \"readonly\", (t => n._s.getNamedQuery(t, e)));\n    }(await Ga(t), e)));\n}\n\nconst ic = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction rc(t, e, n) {\n    if (!n) throw new Q(G.INVALID_ARGUMENT, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */ function oc(t, e, n, s) {\n    if (!0 === e && !0 === s) throw new Q(G.INVALID_ARGUMENT, `${t} and ${n} cannot be used together.`);\n}\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */ function uc(t) {\n    if (!xt.isDocumentKey(t)) throw new Q(G.INVALID_ARGUMENT, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ac(t) {\n    if (xt.isDocumentKey(t)) throw new Q(G.INVALID_ARGUMENT, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction cc(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : L();\n}\n\nfunction hc(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new Q(G.INVALID_ARGUMENT, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = cc(t);\n            throw new Q(G.INVALID_ARGUMENT, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction lc(t, e) {\n    if (e <= 0) throw new Q(G.INVALID_ARGUMENT, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// settings() defaults:\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass fc {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new Q(G.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new Q(G.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, oc(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class dc {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._authCredentials = e, this._appCheckCredentials = n, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new fc({}), \n        this._settingsFrozen = !1, t instanceof vt ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new Q(G.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n            return new vt(t.options.projectId);\n        }\n        /**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new Q(G.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new Q(G.FAILED_PRECONDITION, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new fc(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new z;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                // Make sure this really is a Gapi client.\n                                return U(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), \n                new X(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new Q(G.INVALID_ARGUMENT, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        /**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n        return function(t) {\n            const e = ic.get(t);\n            e && (O(\"ComponentProvider\", \"Removing Datastore\"), ic.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction _c(t, e, n, s = {}) {\n    var i;\n    const r = (t = hc(t, dc))._getSettings();\n    if (\"firestore.googleapis.com\" !== r.host && r.host !== e && $(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, r), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), s.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof s.mockUserToken) e = s.mockUserToken, n = C.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = createMockUserToken(s.mockUserToken, null === (i = t._app) || void 0 === i ? void 0 : i.options.projectId);\n            const r = s.mockUserToken.sub || s.mockUserToken.user_id;\n            if (!r) throw new Q(G.INVALID_ARGUMENT, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new C(r);\n        }\n        t._authCredentials = new H(new W(e, n));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class wc {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new gc(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new wc(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class mc {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new mc(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class gc extends mc {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, Ke(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new wc(this.firestore, \n        /* converter= */ null, new xt(t));\n    }\n    withConverter(t) {\n        return new gc(this.firestore, t, this._path);\n    }\n}\n\nfunction yc(t, e, ...n) {\n    if (t = getModularInstance(t), rc(\"collection\", \"path\", e), t instanceof dc) {\n        const s = _t.fromString(e, ...n);\n        return ac(s), new gc(t, /* converter= */ null, s);\n    }\n    {\n        if (!(t instanceof wc || t instanceof gc)) throw new Q(G.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const s = t._path.child(_t.fromString(e, ...n));\n        return ac(s), new gc(t.firestore, \n        /* converter= */ null, s);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function pc(t, e) {\n    if (t = hc(t, dc), rc(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new Q(G.INVALID_ARGUMENT, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new mc(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new Ue(_t.emptyPath(), t);\n    }(e));\n}\n\nfunction Ic(t, e, ...n) {\n    if (t = getModularInstance(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = it.R()), rc(\"doc\", \"path\", e), t instanceof dc) {\n        const s = _t.fromString(e, ...n);\n        return uc(s), new wc(t, \n        /* converter= */ null, new xt(s));\n    }\n    {\n        if (!(t instanceof wc || t instanceof gc)) throw new Q(G.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const s = t._path.child(_t.fromString(e, ...n));\n        return uc(s), new wc(t.firestore, t instanceof gc ? t.converter : null, new xt(s));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Tc(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), (t instanceof wc || t instanceof gc) && (e instanceof wc || e instanceof gc) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Ec(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof mc && e instanceof mc && (t.firestore === e.firestore && Ye(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Ac {\n    constructor() {\n        // The last promise in the queue.\n        this.Fa = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.$a = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.Ba = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.La = [], \n        // visible for testing\n        this.Ua = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.qa = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Ka = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ga = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.No = new Wo(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Qa = () => {\n            const t = Qo();\n            t && O(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.No.Po();\n        };\n        const t = Qo();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Qa);\n    }\n    get isShuttingDown() {\n        return this.Ba;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.ja(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Wa(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.Ba) {\n            this.Ba = !0, this.Ka = t || !1;\n            const e = Qo();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Qa);\n        }\n    }\n    enqueue(t) {\n        if (this.ja(), this.Ba) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.Wa((() => this.Ba && this.Ka ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.$a.push(t), this.za())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async za() {\n        if (0 !== this.$a.length) {\n            try {\n                await this.$a[0](), this.$a.shift(), this.No.reset();\n            } catch (t) {\n                if (!Ai(t)) throw t;\n // Failure will be handled by AsyncQueue\n                                O(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.$a.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.No.Ro((() => this.za()));\n        }\n    }\n    Wa(t) {\n        const e = this.Fa.then((() => (this.qa = !0, t().catch((t => {\n            this.Ua = t, this.qa = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw F(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.qa = !1, t))))));\n        return this.Fa = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.ja(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ga.indexOf(t) > -1 && (e = 0);\n        const s = vu.createAndSchedule(this, t, e, n, (t => this.Ha(t)));\n        return this.La.push(s), s;\n    }\n    ja() {\n        this.Ua && L();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ja() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Fa, await t;\n        } while (t !== this.Fa);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Ya(t) {\n        for (const e of this.La) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Xa(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ja().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.La.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.La) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.Ja();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Za(t) {\n        this.Ga.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    Ha(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.La.indexOf(t);\n        this.La.splice(e, 1);\n    }\n}\n\nfunction Rc(t) {\n    /**\n * Returns true if obj is an object and contains at least one of the specified\n * methods.\n */\n    return function(t, e) {\n        if (\"object\" != typeof t || null === t) return !1;\n        const n = t;\n        for (const t of e) if (t in n && \"function\" == typeof n[t]) return !0;\n        return !1;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents the task of loading a Firestore bundle. It provides progress of bundle\n * loading, as well as task completion and error events.\n *\n * The API is compatible with `Promise<LoadBundleTaskProgress>`.\n */ (t, [ \"next\", \"error\", \"complete\" ]);\n}\n\nclass bc {\n    constructor() {\n        this._progressObserver = {}, this._taskCompletionResolver = new j, this._lastProgress = {\n            taskState: \"Running\",\n            totalBytes: 0,\n            totalDocuments: 0,\n            bytesLoaded: 0,\n            documentsLoaded: 0\n        };\n    }\n    /**\n     * Registers functions to listen to bundle loading progress events.\n     * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur\n     *   each time a Firestore document is loaded from the bundle.\n     * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the\n     *   error, and there should be no more updates after this.\n     * @param complete - Called when the loading task is complete.\n     */    onProgress(t, e, n) {\n        this._progressObserver = {\n            next: t,\n            error: e,\n            complete: n\n        };\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.\n     *\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */    catch(t) {\n        return this._taskCompletionResolver.promise.catch(t);\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.\n     *\n     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.\n     *   The update will always have its `taskState` set to `\"Success\"`.\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */    then(t, e) {\n        return this._taskCompletionResolver.promise.then(t, e);\n    }\n    /**\n     * Notifies all observers that bundle loading has completed, with a provided\n     * `LoadBundleTaskProgress` object.\n     *\n     * @private\n     */    _completeWith(t) {\n        this._updateProgress(t), this._progressObserver.complete && this._progressObserver.complete(), \n        this._taskCompletionResolver.resolve(t);\n    }\n    /**\n     * Notifies all observers that bundle loading has failed, with a provided\n     * `Error` as the reason.\n     *\n     * @private\n     */    _failWith(t) {\n        this._lastProgress.taskState = \"Error\", this._progressObserver.next && this._progressObserver.next(this._lastProgress), \n        this._progressObserver.error && this._progressObserver.error(t), this._taskCompletionResolver.reject(t);\n    }\n    /**\n     * Notifies a progress update of loading a bundle.\n     * @param progress - The new progress.\n     *\n     * @private\n     */    _updateProgress(t) {\n        this._lastProgress = t, this._progressObserver.next && this._progressObserver.next(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** DOMException error code constants. */ const Pc = -1;\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\nclass Vc extends dc {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, n), \n        /**\n         * Whether it's a {@link Firestore} or Firestore Lite instance.\n         */\n        this.type = \"firestore\", this._queue = new Ac, this._persistenceKey = \"name\" in t ? t.name : \"[DEFAULT]\";\n    }\n    _terminate() {\n        return this._firestoreClient || \n        // The client must be initialized to ensure that all subsequent API\n        // usage throws an exception.\n        Cc(this), this._firestoreClient.terminate();\n    }\n}\n\n/**\n * Initializes a new instance of {@link Firestore} with the provided settings.\n * Can only be called before any other function, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will\n * be associated.\n * @param settings - A settings object to configure the {@link Firestore} instance.\n * @returns A newly initialized {@link Firestore} instance.\n */ function vc(t, e) {\n    const n = _getProvider(t, \"firestore\");\n    if (n.isInitialized()) {\n        const t = n.getImmediate(), s = n.getOptions();\n        if (deepEqual(s, e)) return t;\n        throw new Q(G.FAILED_PRECONDITION, \"initializeFirestore() has already been called with different options. To avoid this error, call initializeFirestore() with the same options as when it was originally called, or call getFirestore() to return the already initialized instance.\");\n    }\n    if (void 0 !== e.cacheSizeBytes && -1 !== e.cacheSizeBytes && e.cacheSizeBytes < 1048576) throw new Q(G.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n    return n.initialize({\n        options: e\n    });\n}\n\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The {@link Firestore} instance of the provided app.\n */ function Sc(e = getApp()) {\n    return _getProvider(e, \"firestore\").getImmediate();\n}\n\n/**\n * @internal\n */ function Dc(t) {\n    return t._firestoreClient || Cc(t), t._firestoreClient.verifyNotTerminated(), t._firestoreClient;\n}\n\nfunction Cc(t) {\n    var e;\n    const n = t._freezeSettings(), s = function(t, e, n, s) {\n        return new Vt(t, e, n, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams);\n    }(t._databaseId, (null === (e = t._app) || void 0 === e ? void 0 : e.options.appId) || \"\", t._persistenceKey, n);\n    t._firestoreClient = new $a(t._authCredentials, t._appCheckCredentials, t._queue, s);\n}\n\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * Must be called before any other functions (other than\n * {@link initializeFirestore}, {@link getFirestore} or\n * {@link clearIndexedDbPersistence}.\n *\n * If this fails, `enableIndexedDbPersistence()` will reject the promise it\n * returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A `Promise` that represents successfully enabling persistent storage.\n */ function xc(t, e) {\n    qc(t = hc(t, Vc));\n    const n = Dc(t), s = t._freezeSettings(), i = new xa;\n    return kc(n, i, new Da(i, s.cacheSizeBytes, null == e ? void 0 : e.forceOwnership));\n}\n\n/**\n * Attempts to enable multi-tab persistent storage, if possible. If enabled\n * across all tabs, all operations share access to local persistence, including\n * shared execution of queries and latency-compensated local document updates\n * across all connected instances.\n *\n * If this fails, `enableMultiTabIndexedDbPersistence()` will reject the promise\n * it returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab and\n *     multi-tab is not enabled.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @returns A `Promise` that represents successfully enabling persistent\n * storage.\n */ function Nc(t) {\n    qc(t = hc(t, Vc));\n    const e = Dc(t), n = t._freezeSettings(), s = new xa;\n    return kc(e, s, new Ca(s, n.cacheSizeBytes));\n}\n\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */ function kc(t, e, n) {\n    const s = new j;\n    return t.asyncQueue.enqueue((async () => {\n        try {\n            await Ba(t, n), await La(t, e), s.resolve();\n        } catch (t) {\n            if (!\n            /**\n * Decides whether the provided error allows us to gracefully disable\n * persistence (as opposed to crashing the client).\n */\n            function(t) {\n                if (\"FirebaseError\" === t.name) return t.code === G.FAILED_PRECONDITION || t.code === G.UNIMPLEMENTED;\n                if (\"undefined\" != typeof DOMException && t instanceof DOMException) \n                // There are a few known circumstances where we can open IndexedDb but\n                // trying to read/write will fail (e.g. quota exceeded). For\n                // well-understood cases, we attempt to detect these and then gracefully\n                // fall back to memory persistence.\n                // NOTE: Rather than continue to add to this list, we could decide to\n                // always fall back, with the risk that we might accidentally hide errors\n                // representing actual SDK bugs.\n                // When the browser is out of quota we could get either quota exceeded\n                // or an aborted error depending on whether the error happened during\n                // schema migration.\n                return 22 === t.code || 20 === t.code || \n                // Firefox Private Browsing mode disables IndexedDb and returns\n                // INVALID_STATE for any usage.\n                11 === t.code;\n                return !0;\n            }\n            /**\n * Clears the persistent storage. This includes pending writes and cached\n * documents.\n *\n * Must be called while the {@link Firestore} instance is not started (after the app is\n * terminated or when the app is first initialized). On startup, this function\n * must be called before other functions (other than {@link\n * initializeFirestore} or {@link getFirestore})). If the {@link Firestore}\n * instance is still running, the promise will be rejected with the error code\n * of `failed-precondition`.\n *\n * Note: `clearIndexedDbPersistence()` is primarily intended to help write\n * reliable tests that use Cloud Firestore. It uses an efficient mechanism for\n * dropping existing data but does not attempt to securely overwrite or\n * otherwise make cached data unrecoverable. For applications that are sensitive\n * to the disclosure of cached data in between user sessions, we strongly\n * recommend not enabling persistence at all.\n *\n * @param firestore - The {@link Firestore} instance to clear persistence for.\n * @returns A `Promise` that is resolved when the persistent storage is\n * cleared. Otherwise, the promise is rejected with an error.\n */ (t)) throw t;\n            console.warn(\"Error enabling offline persistence. Falling back to persistence disabled: \" + t), \n            s.reject(t);\n        }\n    })).then((() => s.promise));\n}\n\nfunction Mc(t) {\n    if (t._initialized && !t._terminated) throw new Q(G.FAILED_PRECONDITION, \"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.\");\n    const e = new j;\n    return t._queue.enqueueAndForgetEvenWhileRestricted((async () => {\n        try {\n            await async function(t) {\n                if (!Ii.vt()) return Promise.resolve();\n                const e = t + \"main\";\n                await Ii.delete(e);\n            }(Yr(t._databaseId, t._persistenceKey)), e.resolve();\n        } catch (t) {\n            e.reject(t);\n        }\n    })), e.promise;\n}\n\n/**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned promise resolves immediately if there are no outstanding writes.\n * Otherwise, the promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` promises are rejected during user\n * changes.\n *\n * @returns A `Promise` which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */ function Oc(t) {\n    return function(t) {\n        const e = new j;\n        return t.asyncQueue.enqueueAndForget((async () => oa(await ja(t), e))), e.promise;\n    }(Dc(t = hc(t, Vc)));\n}\n\n/**\n * Re-enables use of the network for this {@link Firestore} instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A `Promise` that is resolved once the network has been enabled.\n */ function Fc(t) {\n    return za(Dc(t = hc(t, Vc)));\n}\n\n/**\n * Disables network usage for this instance. It can be re-enabled via {@link\n * enableNetwork}. While the network is disabled, any snapshot listeners,\n * `getDoc()` or `getDocs()` calls will return results from cache, and any write\n * operations will be queued until the network is restored.\n *\n * @returns A `Promise` that is resolved once the network has been disabled.\n */ function $c(t) {\n    return Ha(Dc(t = hc(t, Vc)));\n}\n\n/**\n * Terminates the provided {@link Firestore} instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` function\n * may be used. Any other function will throw a `FirestoreError`.\n *\n * To restart after termination, create a new instance of FirebaseFirestore with\n * {@link getFirestore}.\n *\n * Termination does not cancel any pending writes, and any promises that are\n * awaiting a response from the server will not be resolved. If you have\n * persistence enabled, the next time you start this instance, it will resume\n * sending these writes to the server.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all\n * of its resources or in combination with `clearIndexedDbPersistence()` to\n * ensure that all local state is destroyed between test runs.\n *\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function Bc(t) {\n    return _removeServiceInstance(t.app, \"firestore\"), t._delete();\n}\n\n/**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The {@link Firestore} instance to load bundles for.\n * @param bundleData - An object representing the bundle to be loaded. Valid\n * objects are `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @returns A `LoadBundleTask` object, which notifies callers with progress\n * updates, and completion or error events. It can be used as a\n * `Promise<LoadBundleTaskProgress>`.\n */ function Lc(t, e) {\n    const n = Dc(t = hc(t, Vc)), s = new bc;\n    return nc(n, t._databaseId, e, s), s;\n}\n\n/**\n * Reads a Firestore {@link Query} from local cache, identified by the given\n * name.\n *\n * The named queries are packaged  into bundles on the server side (along\n * with resulting documents), and loaded to local cache using `loadBundle`. Once\n * in local cache, use this method to extract a {@link Query} by name.\n *\n * @param firestore - The {@link Firestore} instance to read the query from.\n * @param name - The name of the query.\n * @returns A `Promise` that is resolved with the Query or `null`.\n */ function Uc(t, e) {\n    return sc(Dc(t = hc(t, Vc)), e).then((e => e ? new mc(t, null, e.query) : null));\n}\n\nfunction qc(t) {\n    if (t._initialized || t._terminated) throw new Q(G.FAILED_PRECONDITION, \"Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nclass Kc {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new Q(G.INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new mt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Gc() {\n    return new Kc(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Qc {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Qc(pt.fromBase64String(t));\n        } catch (t) {\n            throw new Q(G.INVALID_ARGUMENT, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Qc(pt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class jc {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Wc {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new Q(G.INVALID_ARGUMENT, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new Q(G.INVALID_ARGUMENT, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return rt(this._lat, t._lat) || rt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const zc = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Hc {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new xn(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Cn(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Jc {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new xn(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Yc(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw L();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Xc {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, s, i, r) {\n        this.settings = t, this.databaseId = e, this.M = n, this.ignoreUndefinedProperties = s, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === i && this.tc(), this.fieldTransforms = i || [], this.fieldMask = r || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get ec() {\n        return this.settings.ec;\n    }\n    /** Returns a new context with the specified settings overwritten. */    nc(t) {\n        return new Xc(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.M, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    sc(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), s = this.nc({\n            path: n,\n            ic: !1\n        });\n        return s.rc(t), s;\n    }\n    oc(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), s = this.nc({\n            path: n,\n            ic: !1\n        });\n        return s.tc(), s;\n    }\n    uc(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.nc({\n            path: void 0,\n            ic: !0\n        });\n    }\n    ac(t) {\n        return yh(t, this.settings.methodName, this.settings.cc || !1, this.path, this.settings.hc);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    tc() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.rc(this.path.get(t));\n    }\n    rc(t) {\n        if (0 === t.length) throw this.ac(\"Document fields must not be empty\");\n        if (Yc(this.ec) && zc.test(t)) throw this.ac('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Zc {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.M = n || jo(t);\n    }\n    /** Creates a new top-level parse context. */    lc(t, e, n, s = !1) {\n        return new Xc({\n            ec: t,\n            methodName: e,\n            hc: n,\n            path: mt.emptyPath(),\n            ic: !1,\n            cc: s\n        }, this.databaseId, this.M, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction th(t) {\n    const e = t._freezeSettings(), n = jo(t._databaseId);\n    return new Zc(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function eh(t, e, n, s, i, r = {}) {\n    const o = t.lc(r.merge || r.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, i);\n    _h(\"Data must be an object, but it was:\", o, s);\n    const u = fh(s, o);\n    let a, c;\n    if (r.merge) a = new gt(o.fieldMask), c = o.fieldTransforms; else if (r.mergeFields) {\n        const t = [];\n        for (const s of r.mergeFields) {\n            const i = wh(e, s, n);\n            if (!o.contains(i)) throw new Q(G.INVALID_ARGUMENT, `Field '${i}' is specified in your field mask but missing from your input data.`);\n            ph(t, i) || t.push(i);\n        }\n        a = new gt(t), c = o.fieldTransforms.filter((t => a.covers(t.field)));\n    } else a = null, c = o.fieldTransforms;\n    return new Hc(new te(u), a, c);\n}\n\nclass nh extends jc {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.ec) throw 1 /* Update */ === t.ec ? t.ac(`${this._methodName}() can only appear at the top level of your update data`) : t.ac(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof nh;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function sh(t, e, n) {\n    return new Xc({\n        ec: 3 /* Argument */ ,\n        hc: e.settings.hc,\n        methodName: t._methodName,\n        ic: n\n    }, e.databaseId, e.M, e.ignoreUndefinedProperties);\n}\n\nclass ih extends jc {\n    _toFieldTransform(t) {\n        return new In(t.path, new fn);\n    }\n    isEqual(t) {\n        return t instanceof ih;\n    }\n}\n\nclass rh extends jc {\n    constructor(t, e) {\n        super(t), this.fc = e;\n    }\n    _toFieldTransform(t) {\n        const e = sh(this, t, \n        /*array=*/ !0), n = this.fc.map((t => lh(t, e))), s = new dn(n);\n        return new In(t.path, s);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass oh extends jc {\n    constructor(t, e) {\n        super(t), this.fc = e;\n    }\n    _toFieldTransform(t) {\n        const e = sh(this, t, \n        /*array=*/ !0), n = this.fc.map((t => lh(t, e))), s = new wn(n);\n        return new In(t.path, s);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass uh extends jc {\n    constructor(t, e) {\n        super(t), this.dc = e;\n    }\n    _toFieldTransform(t) {\n        const e = new gn(t.M, un(t.M, this.dc));\n        return new In(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function ah(t, e, n, s) {\n    const i = t.lc(1 /* Update */ , e, n);\n    _h(\"Data must be an object, but it was:\", i, s);\n    const r = [], o = te.empty();\n    lt(s, ((t, s) => {\n        const u = gh(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                s = getModularInstance(s);\n        const a = i.oc(u);\n        if (s instanceof nh) \n        // Add it to the field mask, but don't add anything to updateData.\n        r.push(u); else {\n            const t = lh(s, a);\n            null != t && (r.push(u), o.set(u, t));\n        }\n    }));\n    const u = new gt(r);\n    return new Jc(o, u, i.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function ch(t, e, n, s, i, r) {\n    const o = t.lc(1 /* Update */ , e, n), u = [ wh(e, s, n) ], a = [ i ];\n    if (r.length % 2 != 0) throw new Q(G.INVALID_ARGUMENT, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < r.length; t += 2) u.push(wh(e, r[t])), a.push(r[t + 1]);\n    const c = [], h = te.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!ph(c, u[t])) {\n        const e = u[t];\n        let n = a[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = getModularInstance(n);\n        const s = o.oc(e);\n        if (n instanceof nh) \n        // Add it to the field mask, but don't add anything to updateData.\n        c.push(e); else {\n            const t = lh(n, s);\n            null != t && (c.push(e), h.set(e, t));\n        }\n    }\n    const l = new gt(c);\n    return new Jc(h, l, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function hh(t, e, n, s = !1) {\n    return lh(n, t.lc(s ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function lh(t, e) {\n    if (dh(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = getModularInstance(t))) return _h(\"Unsupported field value:\", e, t), fh(t, e);\n    if (t instanceof jc) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Yc(e.ec)) throw e.ac(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ac(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ic && 4 /* ArrayArgument */ !== e.ec) throw e.ac(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let s = 0;\n            for (const i of t) {\n                let t = lh(i, e.uc(s));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), s++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = getModularInstance(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return un(e.M, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = at.fromDate(t);\n            return {\n                timestampValue: fs(e.M, n)\n            };\n        }\n        if (t instanceof at) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new at(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: fs(e.M, n)\n            };\n        }\n        if (t instanceof Wc) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Qc) return {\n            bytesValue: ds(e.M, t._byteString)\n        };\n        if (t instanceof wc) {\n            const n = e.databaseId, s = t.firestore._databaseId;\n            if (!s.isEqual(n)) throw e.ac(`Document reference is for database ${s.projectId}/${s.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: ms(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ac(`Unsupported field value: ${cc(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction fh(t, e) {\n    const n = {};\n    return ft(t) ? \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path) : lt(t, ((t, s) => {\n        const i = lh(s, e.sc(t));\n        null != i && (n[t] = i);\n    })), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction dh(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof at || t instanceof Wc || t instanceof Qc || t instanceof wc || t instanceof jc);\n}\n\nfunction _h(t, e, n) {\n    if (!dh(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const s = cc(n);\n        throw \"an object\" === s ? e.ac(t + \" a custom object\") : e.ac(t + \" \" + s);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function wh(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = getModularInstance(e)) instanceof Kc) return e._internalPath;\n    if (\"string\" == typeof e) return gh(t, e);\n    throw yh(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const mh = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function gh(t, e, n) {\n    if (e.search(mh) >= 0) throw yh(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Kc(...e.split(\".\"))._internalPath;\n    } catch (s) {\n        throw yh(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction yh(t, e, n, s, i) {\n    const r = s && !s.isEmpty(), o = void 0 !== i;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let a = \"\";\n    return (r || o) && (a += \" (found\", r && (a += ` in field ${s}`), o && (a += ` in document ${i}`), \n    a += \")\"), new Q(G.INVALID_ARGUMENT, u + t + a);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function ph(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Ih {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, s, i) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = s, \n        this._converter = i;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new wc(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new Th(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(Eh(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class Th extends Ih {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function Eh(t, e) {\n    return \"string\" == typeof e ? gh(t, e) : e instanceof Kc ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Metadata about a snapshot, describing the state of the snapshot.\n */ class Ah {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this.hasPendingWrites = t, this.fromCache = e;\n    }\n    /**\n     * Returns true if this `SnapshotMetadata` is equal to the provided one.\n     *\n     * @param other - The `SnapshotMetadata` to compare against.\n     * @returns true if this `SnapshotMetadata` is equal to the provided one.\n     */    isEqual(t) {\n        return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;\n    }\n}\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Rh extends Ih {\n    /** @hideconstructor protected */\n    constructor(t, e, n, s, i, r) {\n        super(t, e, n, s, r), this._firestore = t, this._firestoreImpl = t, this.metadata = i;\n    }\n    /**\n     * Returns whether or not the data exists. True if the document exists.\n     */    exists() {\n        return super.exists();\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * By default, `serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document or `undefined` if\n     * the document doesn't exist.\n     */    data(t = {}) {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const e = new bh(this._firestore, this._userDataWriter, this._key, this._document, this.metadata, \n                /* converter= */ null);\n                return this._converter.fromFirestore(e, t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value, t.serverTimestamps);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * By default, a `serverTimestamp()` that has not yet been set to\n     * its final value will be returned as `null`. You can override this by\n     * passing an options object.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @param options - An options object to configure how the field is retrieved\n     * from the snapshot (for example the desired behavior for server timestamps\n     * that have not yet been set to their final value).\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t, e = {}) {\n        if (this._document) {\n            const n = this._document.data.field(Eh(\"DocumentSnapshot.get\", t));\n            if (null !== n) return this._userDataWriter.convertValue(n, e.serverTimestamps);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class bh extends Rh {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * By default, `serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @override\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document.\n     */\n    data(t = {}) {\n        return super.data(t);\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class Ph {\n    /** @hideconstructor */\n    constructor(t, e, n, s) {\n        this._firestore = t, this._userDataWriter = e, this._snapshot = s, this.metadata = new Ah(s.hasPendingWrites, s.fromCache), \n        this.query = n;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        const t = [];\n        return this.forEach((e => t.push(e))), t;\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this._snapshot.docs.size;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.size;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._snapshot.docs.forEach((n => {\n            t.call(e, new bh(this._firestore, this._userDataWriter, n.key, n, new Ah(this._snapshot.mutatedKeys.has(n.key), this._snapshot.fromCache), this.query.converter));\n        }));\n    }\n    /**\n     * Returns an array of the documents changes since the last snapshot. If this\n     * is the first snapshot, all documents will be in the list as 'added'\n     * changes.\n     *\n     * @param options - `SnapshotListenOptions` that control whether metadata-only\n     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger\n     * snapshot events.\n     */    docChanges(t = {}) {\n        const e = !!t.includeMetadataChanges;\n        if (e && this._snapshot.excludesMetadataChanges) throw new Q(G.INVALID_ARGUMENT, \"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().\");\n        return this._cachedChanges && this._cachedChangesIncludeMetadataChanges === e || (this._cachedChanges = \n        /** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */\n        function(t, e) {\n            if (t._snapshot.oldDocs.isEmpty()) {\n                let e = 0;\n                return t._snapshot.docChanges.map((n => ({\n                    type: \"added\",\n                    doc: new bh(t._firestore, t._userDataWriter, n.doc.key, n.doc, new Ah(t._snapshot.mutatedKeys.has(n.doc.key), t._snapshot.fromCache), t.query.converter),\n                    oldIndex: -1,\n                    newIndex: e++\n                })));\n            }\n            {\n                // A `DocumentSet` that is updated incrementally as changes are applied to use\n                // to lookup the index of a document.\n                let n = t._snapshot.oldDocs;\n                return t._snapshot.docChanges.filter((t => e || 3 /* Metadata */ !== t.type)).map((e => {\n                    const s = new bh(t._firestore, t._userDataWriter, e.doc.key, e.doc, new Ah(t._snapshot.mutatedKeys.has(e.doc.key), t._snapshot.fromCache), t.query.converter);\n                    let i = -1, r = -1;\n                    return 0 /* Added */ !== e.type && (i = n.indexOf(e.doc.key), n = n.delete(e.doc.key)), \n                    1 /* Removed */ !== e.type && (n = n.add(e.doc), r = n.indexOf(e.doc.key)), {\n                        type: Vh(e.type),\n                        doc: s,\n                        oldIndex: i,\n                        newIndex: r\n                    };\n                }));\n            }\n        }(this, e), this._cachedChangesIncludeMetadataChanges = e), this._cachedChanges;\n    }\n}\n\nfunction Vh(t) {\n    switch (t) {\n      case 0 /* Added */ :\n        return \"added\";\n\n      case 2 /* Modified */ :\n      case 3 /* Metadata */ :\n        return \"modified\";\n\n      case 1 /* Removed */ :\n        return \"removed\";\n\n      default:\n        return L();\n    }\n}\n\n// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot\n// metadata\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function vh(t, e) {\n    return t instanceof Rh && e instanceof Rh ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof Ph && e instanceof Ph && (t._firestore === e._firestore && Ec(t.query, e.query) && t.metadata.isEqual(e.metadata) && t._snapshot.isEqual(e._snapshot));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Sh(t) {\n    if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new Q(G.UNIMPLEMENTED, \"limitToLast() queries require specifying at least one orderBy() clause\");\n}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class Dh {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function Ch(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass xh extends Dh {\n    constructor(t, e, n) {\n        super(), this._c = t, this.wc = e, this.mc = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = th(t.firestore), n = function(t, e, n, s, i, r, o) {\n            let u;\n            if (i.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === r || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === r) throw new Q(G.INVALID_ARGUMENT, `Invalid Query. You can't perform '${r}' queries on documentId().`);\n                if (\"in\" /* IN */ === r || \"not-in\" /* NOT_IN */ === r) {\n                    Wh(o, r);\n                    const e = [];\n                    for (const n of o) e.push(jh(s, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = jh(s, t, o);\n            } else \"in\" /* IN */ !== r && \"not-in\" /* NOT_IN */ !== r && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== r || Wh(o, r), \n            u = hh(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === r || \"not-in\" /* NOT_IN */ === r);\n            const a = Ve.create(i, r, u);\n            return function(t, e) {\n                if (e.S()) {\n                    const n = je(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new Q(G.INVALID_ARGUMENT, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const s = Qe(t);\n                    null !== s && zh(t, e.field, s);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new Q(G.INVALID_ARGUMENT, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new Q(G.INVALID_ARGUMENT, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, a), a;\n        }(t._query, \"where\", e, t.firestore._databaseId, this._c, this.wc, this.mc);\n        return new mc(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new Ue(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function Nh(t, e, n) {\n    const s = e, i = Eh(\"where\", t);\n    return new xh(i, s, n);\n}\n\nclass kh extends Dh {\n    constructor(t, e) {\n        super(), this._c = t, this.gc = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new Q(G.INVALID_ARGUMENT, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new Q(G.INVALID_ARGUMENT, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const s = new Fe(e, n);\n            return function(t, e) {\n                if (null === Qe(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = je(t);\n                    null !== n && zh(t, n, e.field);\n                }\n            }(t, s), s;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._c, this.gc);\n        return new mc(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new Ue(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function Mh(t, e = \"asc\") {\n    const n = e, s = Eh(\"orderBy\", t);\n    return new kh(s, n);\n}\n\nclass Oh extends Dh {\n    constructor(t, e, n) {\n        super(), this.type = t, this.yc = e, this.Ic = n;\n    }\n    _apply(t) {\n        return new mc(t.firestore, t.converter, Je(t._query, this.yc, this.Ic));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function Fh(t) {\n    return lc(\"limit\", t), new Oh(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function $h(t) {\n    return lc(\"limitToLast\", t), new Oh(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass Bh extends Dh {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Tc = e, this.Ec = n;\n    }\n    _apply(t) {\n        const e = Qh(t, this.type, this.Tc, this.Ec);\n        return new mc(t.firestore, t.converter, function(t, e) {\n            return new Ue(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Lh(...t) {\n    return new Bh(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Uh(...t) {\n    return new Bh(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass qh extends Dh {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Tc = e, this.Ec = n;\n    }\n    _apply(t) {\n        const e = Qh(t, this.type, this.Tc, this.Ec);\n        return new mc(t.firestore, t.converter, function(t, e) {\n            return new Ue(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Kh(...t) {\n    return new qh(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Gh(...t) {\n    return new qh(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Qh(t, e, n, s) {\n    if (n[0] = getModularInstance(n[0]), n[0] instanceof Ih) return function(t, e, n, s, i) {\n        if (!s) throw new Q(G.NOT_FOUND, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const r = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of ze(t)) if (n.field.isKeyField()) r.push(qt(e, s.key)); else {\n            const t = s.data.field(n.field);\n            if (Rt(t)) throw new Q(G.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new Q(G.INVALID_ARGUMENT, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            r.push(t);\n        }\n        return new Oe(r, i);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, s);\n    {\n        const i = th(t.firestore);\n        return function(t, e, n, s, i, r) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (i.length > o.length) throw new Q(G.INVALID_ARGUMENT, `Too many arguments provided to ${s}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let r = 0; r < i.length; r++) {\n                const a = i[r];\n                if (o[r].field.isKeyField()) {\n                    if (\"string\" != typeof a) throw new Q(G.INVALID_ARGUMENT, `Invalid query. Expected a string for document ID in ${s}(), but got a ${typeof a}`);\n                    if (!We(t) && -1 !== a.indexOf(\"/\")) throw new Q(G.INVALID_ARGUMENT, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${s}() must be a plain document ID, but '${a}' contains a slash.`);\n                    const n = t.path.child(_t.fromString(a));\n                    if (!xt.isDocumentKey(n)) throw new Q(G.INVALID_ARGUMENT, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${s}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const i = new xt(n);\n                    u.push(qt(e, i));\n                } else {\n                    const t = hh(n, s, a);\n                    u.push(t);\n                }\n            }\n            return new Oe(u, r);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, i, e, n, s);\n    }\n}\n\nfunction jh(t, e, n) {\n    if (\"string\" == typeof (n = getModularInstance(n))) {\n        if (\"\" === n) throw new Q(G.INVALID_ARGUMENT, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!We(e) && -1 !== n.indexOf(\"/\")) throw new Q(G.INVALID_ARGUMENT, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const s = e.path.child(_t.fromString(n));\n        if (!xt.isDocumentKey(s)) throw new Q(G.INVALID_ARGUMENT, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${s}' is not because it has an odd number of segments (${s.length}).`);\n        return qt(t, new xt(s));\n    }\n    if (n instanceof wc) return qt(t, n._key);\n    throw new Q(G.INVALID_ARGUMENT, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${cc(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Wh(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new Q(G.INVALID_ARGUMENT, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new Q(G.INVALID_ARGUMENT, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction zh(t, e, n) {\n    if (!n.isEqual(e)) throw new Q(G.INVALID_ARGUMENT, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Hh = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\nclass Jh {\n    convertValue(t, e = \"none\") {\n        switch (Mt(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return Et(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(At(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw L();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return lt(t.fields, ((t, s) => {\n            n[t] = this.convertValue(s, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Wc(Et(t.latitude), Et(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = bt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Pt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Tt(t);\n        return new at(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = _t.fromString(t);\n        U(Ks(n));\n        const s = new vt(n.get(1), n.get(3)), i = new xt(n.popFirst(5));\n        return s.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        F(`Document ${i} contains a document reference within a different database (${s.projectId}/${s.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        i;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */ function Yh(t, e, n) {\n    let s;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return s = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    s;\n}\n\nclass Xh extends Jh {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Qc(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new wc(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Zh {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = th(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const s = tl(t, this._firestore), i = Yh(s.converter, e, n), r = eh(this._dataReader, \"WriteBatch.set\", s._key, i, null !== s.converter, n);\n        return this._mutations.push(r.toMutation(s._key, An.none())), this;\n    }\n    update(t, e, n, ...s) {\n        this._verifyNotCommitted();\n        const i = tl(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let r;\n        return r = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Kc ? ch(this._dataReader, \"WriteBatch.update\", i._key, e, n, s) : ah(this._dataReader, \"WriteBatch.update\", i._key, e), \n        this._mutations.push(r.toMutation(i._key, An.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = tl(t, this._firestore);\n        return this._mutations = this._mutations.concat(new On(e._key, An.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new Q(G.FAILED_PRECONDITION, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction tl(t, e) {\n    if ((t = getModularInstance(t)).firestore !== e) throw new Q(G.INVALID_ARGUMENT, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n// legacy SDK.\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Reads the document referred to by this `DocumentReference`.\n *\n * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting\n * for data from the server, but it may return cached data or fail if you are\n * offline and the server cannot be reached. To specify this behavior, invoke\n * {@link getDocFromCache} or {@link getDocFromServer}.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nfunction el(t) {\n    t = hc(t, wc);\n    const e = hc(t.firestore, Vc);\n    return Ya(Dc(e), t._key).then((n => wl(e, t, n)));\n}\n\nclass nl extends Jh {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Qc(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new wc(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ function sl(t) {\n    t = hc(t, wc);\n    const e = hc(t.firestore, Vc), n = Dc(e), s = new nl(e);\n    return Ja(n, t._key).then((n => new Rh(e, s, t._key, n, new Ah(null !== n && n.hasLocalMutations, \n    /* fromCache= */ !0), t.converter)));\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from the server.\n * Returns an error if the network is not available.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ function il(t) {\n    t = hc(t, wc);\n    const e = hc(t.firestore, Vc);\n    return Ya(Dc(e), t._key, {\n        source: \"server\"\n    }).then((n => wl(e, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot`.\n *\n * Note: `getDocs()` attempts to provide up-to-date data when possible by\n * waiting for data from the server, but it may return cached data or fail if\n * you are offline and the server cannot be reached. To specify this behavior,\n * invoke {@link getDocsFromCache} or {@link getDocsFromServer}.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function rl(t) {\n    t = hc(t, mc);\n    const e = hc(t.firestore, Vc), n = Dc(e), s = new nl(e);\n    return Sh(t._query), Za(n, t._query).then((n => new Ph(e, s, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function ol(t) {\n    t = hc(t, mc);\n    const e = hc(t.firestore, Vc), n = Dc(e), s = new nl(e);\n    return Xa(n, t._query).then((n => new Ph(e, s, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from the\n * server. Returns an error if the network is not available.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function ul(t) {\n    t = hc(t, mc);\n    const e = hc(t.firestore, Vc), n = Dc(e), s = new nl(e);\n    return Za(n, t._query, {\n        source: \"server\"\n    }).then((n => new Ph(e, s, t, n)));\n}\n\nfunction al(t, e, n) {\n    t = hc(t, wc);\n    const s = hc(t.firestore, Vc), i = Yh(t.converter, e, n);\n    return _l(s, [ eh(th(s), \"setDoc\", t._key, i, null !== t.converter, n).toMutation(t._key, An.none()) ]);\n}\n\nfunction cl(t, e, n, ...s) {\n    t = hc(t, wc);\n    const i = hc(t.firestore, Vc), r = th(i);\n    let o;\n    o = \"string\" == typeof (\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    e = getModularInstance(e)) || e instanceof Kc ? ch(r, \"updateDoc\", t._key, e, n, s) : ah(r, \"updateDoc\", t._key, e);\n    return _l(i, [ o.toMutation(t._key, An.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * @param reference - A reference to the document to delete.\n * @returns A Promise resolved once the document has been successfully\n * deleted from the backend (note that it won't resolve while you're offline).\n */ function hl(t) {\n    return _l(hc(t.firestore, Vc), [ new On(t._key, An.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend (Note that it\n * won't resolve while you're offline).\n */ function ll(t, e) {\n    const n = hc(t.firestore, Vc), s = Ic(t), i = Yh(t.converter, e);\n    return _l(n, [ eh(th(t.firestore), \"addDoc\", s._key, i, null !== t.converter, {}).toMutation(s._key, An.exists(!1)) ]).then((() => s));\n}\n\nfunction fl(t, ...e) {\n    var n, s, i;\n    t = getModularInstance(t);\n    let r = {\n        includeMetadataChanges: !1\n    }, o = 0;\n    \"object\" != typeof e[o] || Rc(e[o]) || (r = e[o], o++);\n    const u = {\n        includeMetadataChanges: r.includeMetadataChanges\n    };\n    if (Rc(e[o])) {\n        const t = e[o];\n        e[o] = null === (n = t.next) || void 0 === n ? void 0 : n.bind(t), e[o + 1] = null === (s = t.error) || void 0 === s ? void 0 : s.bind(t), \n        e[o + 2] = null === (i = t.complete) || void 0 === i ? void 0 : i.bind(t);\n    }\n    let a, c, h;\n    if (t instanceof wc) c = hc(t.firestore, Vc), h = Ke(t._key.path), a = {\n        next: n => {\n            e[o] && e[o](wl(c, t, n));\n        },\n        error: e[o + 1],\n        complete: e[o + 2]\n    }; else {\n        const n = hc(t, mc);\n        c = hc(n.firestore, Vc), h = n._query;\n        const s = new nl(c);\n        a = {\n            next: t => {\n                e[o] && e[o](new Ph(c, s, n, t));\n            },\n            error: e[o + 1],\n            complete: e[o + 2]\n        }, Sh(t._query);\n    }\n    return function(t, e, n, s) {\n        const i = new ka(s), r = new Lu(e, i, n);\n        return t.asyncQueue.enqueueAndForget((async () => Mu(await Wa(t), r))), () => {\n            i.Aa(), t.asyncQueue.enqueueAndForget((async () => Ou(await Wa(t), r)));\n        };\n    }(Dc(c), h, u, a);\n}\n\nfunction dl(t, e) {\n    return tc(Dc(t = hc(t, Vc)), Rc(e) ? e : {\n        next: e\n    });\n}\n\n/**\n * Locally writes `mutations` on the async queue.\n * @internal\n */ function _l(t, e) {\n    return function(t, e) {\n        const n = new j;\n        return t.asyncQueue.enqueueAndForget((async () => ta(await ja(t), e, n))), n.promise;\n    }(Dc(t), e);\n}\n\n/**\n * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`\n * to a {@link DocumentSnapshot}.\n */ function wl(t, e, n) {\n    const s = n.docs.get(e._key), i = new nl(t);\n    return new Rh(t, i, e._key, s, new Ah(n.hasPendingWrites, n.fromCache), e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ class ml extends class {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = th(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = tl(t, this._firestore), n = new Xh(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return L();\n            const s = t[0];\n            if (s.isFoundDocument()) return new Ih(this._firestore, n, s.key, s, e.converter);\n            if (s.isNoDocument()) return new Ih(this._firestore, n, e._key, null, e.converter);\n            throw L();\n        }));\n    }\n    set(t, e, n) {\n        const s = tl(t, this._firestore), i = Yh(s.converter, e, n), r = eh(this._dataReader, \"Transaction.set\", s._key, i, null !== s.converter, n);\n        return this._transaction.set(s._key, r), this;\n    }\n    update(t, e, n, ...s) {\n        const i = tl(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let r;\n        return r = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Kc ? ch(this._dataReader, \"Transaction.update\", i._key, e, n, s) : ah(this._dataReader, \"Transaction.update\", i._key, e), \n        this._transaction.update(i._key, r), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = tl(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n} {\n    // This class implements the same logic as the Transaction API in the Lite SDK\n    // but is subclassed in order to return its own DocumentSnapshot types.\n    /** @hideconstructor */\n    constructor(t, e) {\n        super(t, e), this._firestore = t;\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = tl(t, this._firestore), n = new nl(this._firestore);\n        return super.get(t).then((t => new Rh(this._firestore, n, e._key, t._document, new Ah(\n        /* hasPendingWrites= */ !1, \n        /* fromCache= */ !1), e.converter)));\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function gl(t, e, n) {\n    t = hc(t, Vc);\n    const s = Object.assign(Object.assign({}, Hh), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new Q(G.INVALID_ARGUMENT, \"Max attempts must be at least 1\");\n    }(s);\n    return ec(Dc(t), (n => e(new ml(t, n))), s);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function yl() {\n    return new nh(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function pl() {\n    return new ih(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Il(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new rh(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Tl(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new oh(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function El(t) {\n    return new uh(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single {@link WriteBatch}\n * is 500.\n *\n * Unlike transactions, write batches are persisted offline and therefore are\n * preferable when you don't need to condition your writes on read data.\n *\n * @returns A {@link WriteBatch} that can be used to atomically execute multiple\n * writes.\n */ function Al(t) {\n    return Dc(t = hc(t, Vc)), new Zh(t, (e => _l(t, e)));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Rl(t, e) {\n    Dc(t = hc(t, Vc));\n    const n = \"string\" == typeof e ? function(t) {\n        try {\n            return JSON.parse(t);\n        } catch (t) {\n            throw new Q(G.INVALID_ARGUMENT, \"Failed to parse JSON:\" + t.message);\n        }\n    }(e) : e, s = [];\n    // PORTING NOTE: We don't return an error if the user has not enabled\n    // persistence since `enableIndexeddbPersistence()` can fail on the Web.\n    if (Array.isArray(n.indexes)) for (const t of n.indexes) {\n        const e = bl(t, \"collectionGroup\"), n = [];\n        if (Array.isArray(t.fields)) for (const e of t.fields) {\n            const t = gh(\"setIndexConfiguration\", bl(e, \"fieldPath\"));\n            \"CONTAINS\" === e.arrayConfig ? n.push(new oe(t, 2 /* CONTAINS */)) : \"ASCENDING\" === e.order ? n.push(new oe(t, 0 /* ASCENDING */)) : \"DESCENDING\" === e.order && n.push(new oe(t, 1 /* DESCENDING */));\n        }\n        s.push(new se(se.UNKNOWN_ID, e, n, ue.empty()));\n    }\n    // TODO(indexing): Configure indexes\n        return Promise.resolve();\n}\n\nfunction bl(t, e) {\n    if (\"string\" != typeof t[e]) throw new Q(G.INVALID_ARGUMENT, \"Missing string value for: \" + e);\n    return t[e];\n}\n\n/**\n * Cloud Firestore\n *\n * @packageDocumentation\n */ !function(t, e = !0) {\n    !function(t) {\n        x = t;\n    }(SDK_VERSION), _registerComponent(new Component(\"firestore\", ((t, {options: n}) => {\n        const s = t.getProvider(\"app\").getImmediate(), i = new Vc(s, new J(t.getProvider(\"auth-internal\")), new tt(t.getProvider(\"app-check-internal\")));\n        return n = Object.assign({\n            useFetchStreams: e\n        }, n), i._setSettings(n), i;\n    }), \"PUBLIC\")), registerVersion(D, \"3.4.9\", t), \n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n    registerVersion(D, \"3.4.9\", \"esm2017\");\n}();\n\nexport { Jh as AbstractUserDataWriter, Qc as Bytes, Pc as CACHE_SIZE_UNLIMITED, gc as CollectionReference, wc as DocumentReference, Rh as DocumentSnapshot, Kc as FieldPath, jc as FieldValue, Vc as Firestore, Q as FirestoreError, Wc as GeoPoint, bc as LoadBundleTask, mc as Query, Dh as QueryConstraint, bh as QueryDocumentSnapshot, Ph as QuerySnapshot, Ah as SnapshotMetadata, at as Timestamp, ml as Transaction, Zh as WriteBatch, vt as _DatabaseId, xt as _DocumentKey, et as _EmptyAppCheckTokenProvider, z as _EmptyAuthCredentialsProvider, mt as _FieldPath, hc as _cast, q as _debugAssert, yt as _isBase64Available, $ as _logWarn, Rl as _setIndexConfiguration, oc as _validateIsNotUsedTogether, ll as addDoc, Tl as arrayRemove, Il as arrayUnion, Mc as clearIndexedDbPersistence, yc as collection, pc as collectionGroup, _c as connectFirestoreEmulator, hl as deleteDoc, yl as deleteField, $c as disableNetwork, Ic as doc, Gc as documentId, xc as enableIndexedDbPersistence, Nc as enableMultiTabIndexedDbPersistence, Fc as enableNetwork, Gh as endAt, Kh as endBefore, Dc as ensureFirestoreConfigured, _l as executeWrite, el as getDoc, sl as getDocFromCache, il as getDocFromServer, rl as getDocs, ol as getDocsFromCache, ul as getDocsFromServer, Sc as getFirestore, El as increment, vc as initializeFirestore, Fh as limit, $h as limitToLast, Lc as loadBundle, Uc as namedQuery, fl as onSnapshot, dl as onSnapshotsInSync, Mh as orderBy, Ch as query, Ec as queryEqual, Tc as refEqual, gl as runTransaction, pl as serverTimestamp, al as setDoc, M as setLogLevel, vh as snapshotEqual, Uh as startAfter, Lh as startAt, Bc as terminate, cl as updateDoc, Oc as waitForPendingWrites, Nh as where, Al as writeBatch };\n//# sourceMappingURL=index.esm2017.js.map\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, doc, setDoc, getDoc } from \"firebase/firestore\";\r\nimport { getAuth, createUserWithEmailAndPassword, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCr7_Es7xBQzlXHejZukEr1ovanvYYo_Z4\",\r\n    authDomain: \"historyorsomething-9.firebaseapp.com\",\r\n    projectId: \"historyorsomething-9\",\r\n    storageBucket: \"historyorsomething-9.appspot.com\",\r\n    messagingSenderId: \"603241360494\",\r\n    appId: \"1:603241360494:web:90f27fa38c0b46fecd4a7f\"\r\n};\r\n// init firebase app\r\ninitializeApp(firebaseConfig);\r\n// init services\r\nconst db = getFirestore();\r\n// collection ref\r\nconst colRef = collection(db, \"quizes\");\r\nlet auth = getAuth();\r\nexport class Server {\r\n    constructor() {\r\n        this.db = getFirestore();\r\n        this.userData = {};\r\n    }\r\n    test() {\r\n        console.log(\"database function working!\");\r\n    }\r\n    // Log in User\r\n    loginUser(email, password) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let returnValue = { success: false, message: \"\", data: {} };\r\n            auth = getAuth();\r\n            try {\r\n                const userCred = yield signInWithEmailAndPassword(auth, email, password);\r\n                if (userCred) {\r\n                    try {\r\n                        returnValue.data = yield this.getData(\"users\", userCred.user.uid);\r\n                        Server.userLogged = true;\r\n                    }\r\n                    catch (error) {\r\n                    }\r\n                    Server.id = userCred.user.uid;\r\n                    console.log(Server.id);\r\n                    returnValue.success = true;\r\n                    this.userData = returnValue.data;\r\n                }\r\n            }\r\n            catch (error) {\r\n                returnValue.message = error.message;\r\n            }\r\n            return returnValue;\r\n        });\r\n    }\r\n    // Sign out User\r\n    logoutUser() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let success = false;\r\n            const value = yield signOut(auth).then(() => {\r\n                Server.userLogged = true;\r\n                success = true;\r\n                return success;\r\n            });\r\n            if (value == true) {\r\n                auth = null;\r\n            }\r\n            console.log(value);\r\n            return success;\r\n        });\r\n    }\r\n    // Check user Auth\r\n    checkUserAuth() {\r\n        if (auth != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    signUpUser(email, password) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let returnValue = { success: false, message: \"\", data: {} };\r\n            auth = getAuth();\r\n            try {\r\n                const userCred = yield createUserWithEmailAndPassword(auth, email, password);\r\n                let id = userCred.user.uid;\r\n                if (userCred) {\r\n                    try {\r\n                        yield this.setNewDoc(id);\r\n                        try {\r\n                            returnValue.data = yield this.getData(\"users\", id);\r\n                        }\r\n                        catch (error) {\r\n                        }\r\n                        returnValue.success = true;\r\n                    }\r\n                    catch (error) {\r\n                        returnValue.message = error.message;\r\n                    }\r\n                }\r\n            }\r\n            catch (error) {\r\n                returnValue.message = error.message;\r\n            }\r\n            return returnValue;\r\n        });\r\n    }\r\n    //Creates a new user document => Working\r\n    setNewDoc(id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let success = false;\r\n            try {\r\n                yield setDoc(doc(db, \"users\", id), {\r\n                    score: 1,\r\n                    id: id\r\n                });\r\n                success = true;\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n                return false;\r\n            }\r\n            return success;\r\n        });\r\n    }\r\n    getData(path, id) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            //const colRef = collection(db, path);\r\n            const docRef = doc(db, path, id);\r\n            let test = [];\r\n            try {\r\n                const snapshot = yield getDoc(docRef);\r\n                test = snapshot.data();\r\n            }\r\n            catch (e) {\r\n                console.log(e);\r\n            }\r\n            // try{\r\n            //     const snapshot: QuerySnapshot<any> = await getDocs(colRef);\r\n            //     test = [];\r\n            //     snapshot.docs.map((doc) => {\r\n            //         test.push({...doc.data()});\r\n            //     });\r\n            // }catch(e){\r\n            //     console.log(e);\r\n            // }\r\n            return test;\r\n        });\r\n    }\r\n}\r\nServer.id = \"\";\r\nServer.userLogged = false;\r\n/*\r\n// queries\r\nconst q = query(colRef,\r\n    where(\"type\", \"==\", \"multiple choice\"),\r\n    orderBy('question', 'desc'));\r\n\r\n// get real time collection data\r\nonSnapshot(q, (snapshot) => {\r\n    let quizes = [];\r\n    snapshot.docs.forEach((doc) => {\r\n        quizes.push({...doc.data(), id: doc.id});\r\n    })\r\n    console.log(quizes);\r\n})\r\n\r\n// add documents\r\nconst addBookForm = document.querySelector('.add');\r\naddBookForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    addDoc(colRef, {\r\n        question: (addBookForm as any).question.value,\r\n        choice1: (addBookForm as any).choice1.value,\r\n        choice2: (addBookForm as any).choice2.value,\r\n        choice3: (addBookForm as any).choice3.value,\r\n        choice4: (addBookForm as any).choice4.value,\r\n        type: (addBookForm as any).type.value,\r\n    })\r\n        .then(() => {\r\n            (addBookForm as any).reset();\r\n        })\r\n})\r\n\r\n// deleting documents\r\nconst deleteBookForm  = document.querySelector(\".delete\");\r\ndeleteBookForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const docRef = doc(db, \"quizes\", (deleteBookForm as any).id.value);\r\n\r\n    deleteDoc(docRef)\r\n        .then(() => {\r\n            (deleteBookForm as any).reset();\r\n        })\r\n})\r\n\r\n// updating documents\r\nconst updateForm  = document.querySelector(\".update\");\r\nupdateForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const docRef = doc(db, \"quizes\", (updateForm as any).id.value);\r\n\r\n    updateDoc(docRef, {\r\n        type: \"multiple choice\"\r\n    })\r\n        .then(() => {\r\n            console.log(\"updated\");\r\n        })\r\n})\r\n\r\n\r\n// signup user\r\nconst signup  = document.querySelector(\".signup\");\r\nsignup.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const email = (signup as any).email.value;\r\n    const password = (signup as any).password.value;\r\n\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n        .then((cred) => {\r\n            (db as any).collection(\"users\").doc(cred.user.uid).set({\r\n                score: 1\r\n            })\r\n                .then(() => {\r\n                    console.log(\"doc success\");\r\n                });\r\n            //setDoc(doc(db, \"/users\", cred.user.uid), {score: 0})\r\n\r\n\r\n            console.log('user created: ', cred.user);\r\n            (signup as any).reset();\r\n        })\r\n        .catch((err) => console.log(err.message));\r\n})\r\n\r\n// get a single document\r\n\r\nconst docRef = doc(db, \"quizes\", 'KCh33HQ9tIPrp1tOqSuZ');\r\n\r\nonSnapshot(docRef, (doc) => {\r\n    console.log(doc.data(), doc.id);\r\n})\r\n\r\n//logging in and out\r\nconst logoutButton = document.querySelector(\".logout\")\r\nlogoutButton.addEventListener(\"click\", () => {\r\n    signOut(auth)\r\n        .then(() => {\r\n            console.log(\"the user signed out\");\r\n        })\r\n        .catch((err) => console.log(err.message))\r\n});\r\n\r\n\r\nconst loginForm = document.querySelector(\".login\")\r\nloginForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const email = (loginForm as any).email.value;\r\n    const password = (loginForm as any).password.value;\r\n\r\n    signInWithEmailAndPassword(auth, email, password)\r\n        .then((cred) => {\r\n            console.log(\"user logged in: \", cred.user)\r\n        })\r\n        .catch((err) => console.log(err.message))\r\n})*/\r\n//# sourceMappingURL=server-client.js.map"],"names":["stringToByteArray$1","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","Deferred","constructor","reject","resolve","promise","Promise","wrapCallback","callback","value","catch","getUA","navigator","isMobileCordova","window","test","isBrowserExtension","runtime","chrome","browser","undefined","id","isReactNative","isElectron","indexOf","isIE","ua","isUWP","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","self","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","_a","message","FirebaseError","code","customData","super","name","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","replaceTemplate","fullMessage","isEmpty","obj","hasOwnProperty","call","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","querystring","querystringParams","params","entries","forEach","arrayVal","encodeURIComponent","querystringDecode","split","token","decodeURIComponent","extractQuerystring","url","queryStart","fragmentStart","substring","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","observers","unsubscribes","observerCount","task","finalized","then","next","forEachObserver","observer","complete","nextOrObserver","methods","method","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","fn","sendOne","err","getModularInstance","_delegate","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","prodErrorMap","_DEFAULT_AUTH_ERROR_FACTORY","logClient","_logError","msg","args","logLevel","_fail","authOrCode","rest","createErrorInternal","_createError","fullParams","slice","appName","_errorFactory","_assert","assertion","debugFail","failure","debugAssert","instanceCache","Map","_getInstance","cls","Function","instance","get","set","_getCurrentUrl","location","href","_getCurrentScheme","protocol","Delay","shortDelay","longDelay","isMobile","onLine","Math","min","_emulatorUrl","config","path","emulator","startsWith","FetchProvider","static","fetchImpl","headersImpl","responseImpl","fetch","Headers","Response","SERVER_ERROR_MAP","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","auth","tenantId","assign","async","_performApiRequest","customErrorMap","_performFetchWithErrorHandling","body","JSON","stringify","query","apiKey","headers","_getAdditionalHeaders","languageCode","_getFinalTarget","apiHost","referrerPolicy","fetchFn","_canInitEmulator","errorMap","networkTimeout","NetworkTimeout","response","race","clearNetworkTimeout","json","_makeTaggedError","ok","errorMessage","serverErrorCode","serverErrorMessage","authError","toLowerCase","_errorWithCustomMessage","_performSignInRequest","serverResponse","_serverResponse","host","base","apiScheme","timer","setTimeout","clearTimeout","errorParams","email","phoneNumber","_tokenResponse","utcTimestampToDateString","utcTimestamp","date","Date","Number","isNaN","getTime","toUTCString","secondsStringToMilliseconds","seconds","_parseToken","algorithm","payload","signature","decoded","parse","_logoutIfInvalidated","user","bypassAuthState","isUserInvalidated","currentUser","signOut","ProactiveRefresh","isRunning","timerId","errorBackoff","_start","schedule","_stop","getInterval","wasError","interval","stsTokenManager","expirationTime","now","max","iteration","getIdToken","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","creationTime","_copy","metadata","toJSON","_reloadWithoutSaving","idToken","getAccountInfo","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","map","providerId","provider","uid","rawId","displayName","photoURL","photoUrl","providerData","original","newData","filter","o","some","n","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","localId","emailVerified","StsTokenManager","refreshToken","accessToken","isExpired","updateFromServerResponse","expiresIn","parsedToken","exp","iat","_tokenExpiresIn","updateTokensAndExpiration","forceRefresh","refresh","clearRefreshToken","oldToken","tokenApiHost","access_token","expires_in","refresh_token","requestStsToken","expiresInSec","object","manager","_assign","_clone","_performRefresh","assertStringOrUndefined","UserImpl","opt","proactiveRefresh","reloadUserInfo","reloadListener","getToken","_persistUserIfCurrent","_notifyListenersIfCurrent","getIdTokenResult","userInternal","claims","auth_time","firebase","signInProvider","authTime","issuedAtTime","signInSecondFactor","reload","userInfo","_onReload","_startProactiveRefresh","_stopProactiveRefresh","tokensRefreshed","deleteAccount","_redirectEventId","_b","_c","_d","_e","_f","_g","_h","plainObjectTokenManager","fromJSON","idTokenResponse","InMemoryPersistence","type","storage","_addListener","_key","_listener","_removeListener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","setCurrentUser","_set","blob","_get","_fromJSON","removeCurrentUser","_remove","savePersistenceForRedirect","newPersistence","getCurrentUser","delete","persistenceHierarchy","availablePersistences","all","_isAvailable","selectedPersistence","userToMigrate","migrationHierarchy","_shouldAllowMigration","_getBrowserName","userAgent","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","re","matches","match","_isIOS","_isMobileBrowser","_getClientVersion","clientPlatform","frameworks","reportedPlatform","reportedFrameworks","AuthMiddlewareQueue","queue","pushCallback","onAbort","wrappedCallback","index","nextUser","onAbortStack","beforeStateCallback","reverse","originalMessage","AuthImpl","app","heartbeatServiceProvider","emulatorConfig","operations","authStateSubscription","Subscription","idTokenSubscription","beforeStateQueue","redirectUser","isProactiveRefreshEnabled","_isInitialized","_deleted","_initializationPromise","_popupRedirectResolver","lastNotifiedUid","settings","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","_initializeWithPersistence","popupRedirectResolver","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","assertedPersistence","_currentUser","_updateCurrentUser","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","redirectUserEventId","storedUserEventId","tryRedirectSignIn","directlySetCurrentUser","runMiddleware","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","redirectResolver","_completeRedirectFn","_setRedirectUser","useDeviceLanguage","navigatorLanguage","languages","language","_getUserLanguage","userExtern","skipBeforeStateCallbacks","notifyAuthListeners","redirectPersistenceManager","setPersistence","_getPersistence","_updateErrorMap","onAuthStateChanged","completed","registerStateListener","beforeAuthStateChanged","onIdTokenChanged","redirectManager","resolver","_redirectPersistence","currentUid","subscription","cb","addObserver","action","_logFramework","framework","sort","_getFrameworks","options","appId","heartbeatsHeader","getImmediate","optional","getHeartbeatsHeader","_castAuth","AuthCredential","signInMethod","_getIdTokenResponse","_auth","_linkToIdToken","_idToken","_getReauthenticationResolver","EmailAuthCredential","_email","_password","_tenantId","password","oobCode","_fromEmailAndPassword","_fromEmailAndCode","signInWithPassword","returnSecureToken","signInWithEmailLink$1","updateEmailPassword","signInWithEmailLinkForLinking","signInWithIdp","OAuthCredential","arguments","pendingToken","cred","nonce","oauthToken","oauthTokenSecret","secret","buildRequest","autoCreate","requestUri","postBody","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","PhoneAuthCredential","verificationId","verificationCode","temporaryProof","signInWithPhoneNumber$1","_makeVerificationRequest","linkWithPhoneNumber$1","operation","verifyPhoneNumberForExisting","sessionInfo","ActionCodeURL","actionLink","searchParams","mode","parseMode","continueUrl","link","doubleDeepLink","iOSDeepLink","parseDeepLink","EmailAuthProvider","PROVIDER_ID","emailLink","actionCodeUrl","parseLink","EMAIL_PASSWORD_SIGN_IN_METHOD","EMAIL_LINK_SIGN_IN_METHOD","FederatedAuthProvider","defaultLanguageCode","customParameters","setDefaultLanguage","setCustomParameters","customOAuthParameters","getCustomParameters","BaseOAuthProvider","scopes","addScope","scope","getScopes","FacebookAuthProvider","_fromParams","FACEBOOK_SIGN_IN_METHOD","userCredential","credentialFromTaggedObject","tokenResponse","oauthAccessToken","credential","GoogleAuthProvider","GOOGLE_SIGN_IN_METHOD","oauthIdToken","GithubAuthProvider","GITHUB_SIGN_IN_METHOD","TwitterAuthProvider","TWITTER_SIGN_IN_METHOD","UserCredentialImpl","operationType","_fromIdTokenResponse","providerIdForResponse","_updateTokensIfNecessary","MultiFactorError","_processCredentialSavingMfaContextIfNecessary","_fromErrorAndOperation","_signInWithCredential","createUserWithEmailAndPassword","authInternal","signUp","signInWithEmailAndPassword","signInWithCredential","WeakMap","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","storageRetriever","setItem","removeItem","getItem","BrowserLocalPersistence","localStorage","event","poll","onStorageEvent","listeners","localCache","pollTimer","safariLocalStorageNotSynced","_iframeCannotSyncWebStorage","top","_isIframe","fallbackToPolling","forAllChangedKeys","newValue","oldValue","_oldValue","notifyListeners","detachListener","stopPolling","storedValue","triggerListeners","document","documentMode","listener","from","startPolling","setInterval","StorageEvent","clearInterval","attachListener","addEventListener","removeEventListener","Set","add","size","browserLocalPersistence","BrowserSessionPersistence","sessionStorage","browserSessionPersistence","Receiver","eventTarget","handlersMap","handleEvent","existingInstance","receivers","find","receiver","isListeningto","newInstance","messageEvent","eventId","eventType","handlers","ports","postMessage","status","promises","handler","origin","fulfilled","reason","_allSettled","_subscribe","eventHandler","_unsubscribe","_generateEventId","prefix","digits","random","floor","Sender","target","removeMessageHandler","messageChannel","port1","onMessage","timeout","MessageChannel","completionTimer","start","ackTimer","port2","finally","_window","_isWorker","DB_NAME","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","toPromise","getObjectStore","db","isReadWrite","transaction","objectStore","_openDatabase","createObjectStore","keyPath","objectStoreNames","contains","_deleteDatabase","_putObject","put","_deleteObject","IndexedDBLocalPersistence","pendingWrites","sender","serviceWorkerReceiverAvailable","activeServiceWorker","_workerInitializationPromise","initializeServiceWorkerMessaging","op","numAttempts","_openDb","initializeReceiver","initializeSender","_origin","keyProcessed","_poll","_data","serviceWorker","ready","active","_getActiveServiceWorker","results","_send","controller","write","_withPendingWrite","_withRetries","notifyServiceWorker","getObject","getAllRequest","getAll","keysInResult","fbase_key","localKey","has","indexedDBLocalPersistence","_generateCallbackName","PhoneAuthProvider","verifyPhoneNumber","phoneOptions","applicationVerifier","verifier","recaptchaToken","verify","phoneInfoOptions","session","startEnrollPhoneMfa","phoneEnrollmentInfo","phoneSessionInfo","mfaEnrollmentId","multiFactorHint","multiFactorUid","startSignInPhoneMfa","mfaPendingCredential","phoneSignInInfo","phoneResponseInfo","sendPhoneVerificationCode","_reset","_verifyPhoneNumber","_fromVerification","_fromTokenResponse","PHONE_SIGN_IN_METHOD","IdpCredential","_buildIdpRequest","sessionId","returnIdpCredential","_signIn","_reauth","parsed","sub","_forOperation","_reauthenticate","_link","_link$1","AbstractPopupRedirectOperation","pendingPromise","eventManager","execute","onExecution","registerConsumer","urlResponse","getIdpTask","onError","unregisterAndCleanUp","unregisterConsumer","cleanUp","_POLL_WINDOW_CLOSE_TIMEOUT","PopupOperation","authWindow","pollId","currentPopupAction","cancel","_openPopup","associatedEvent","_originValidation","_isIframeWebStorageSupported","isSupported","pollUserCancellation","closed","redirectOutcomeMap","RedirectAction","readyOutcome","pendingRedirectKey","resolverPersistence","hasPendingRedirect","_getAndClearPendingRedirectStatus","onAuthEvent","_redirectUserForId","_getRedirectResult","resolverExtern","resolverOverride","_withDefaultResolver","AuthEventManager","cachedEventUids","consumers","queuedRedirectEvent","hasHandledPotentialRedirect","lastProcessedEventTime","authEventConsumer","isEventForConsumer","sendToConsumer","saveEventToCache","onEvent","hasEventBeenHandled","handled","consumer","isNullRedirectEvent","isRedirectEvent","eventIdMatches","clear","eventUid","v","IP_ADDRESS_REGEX","HTTP_REGEX","matchDomain","expected","currentUrl","hostname","URL","ceUrl","escapedDomainPattern","RegExp","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","H","hint","r","L","CP","cachedGApiLoader","_loadGapi","loadGapiIframe","gapi","load","iframes","getContext","ontimeout","Iframe","cbName","el","createElement","setAttribute","onload","charset","getElementsByTagName","appendChild","loadGapi","PING_TIMEOUT","IFRAME_ATTRIBUTES","style","position","width","height","tabindex","EID_FROM_APIHOST","getIframeUrl","eid","fw","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","AuthPopup","_getRedirectUrl","authType","redirectUrl","additionalParams","tid","paramsDict","getHandlerBase","WEB_STORAGE_SUPPORT_KEY","browserPopupRedirectResolver","eventManagers","originValidationPromises","screen","availHeight","toString","left","availWidth","scrollbars","optionsString","reduce","accum","standalone","_isIOSStandalone","click","createEvent","initMouseEvent","dispatchEvent","openAsNewWindowIOS","newWin","focus","_open","initAndGetManager","iframe","context","where","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","restyle","setHideOnLeave","networkError","networkErrorTimer","clearTimerAndResolve","ping","_openIframe","register","iframeEvent","authEvent","send","authorizedDomains","_getProjectConfig","domain","_validateOrigin","version","AuthInterop","internalListeners","getUid","assertAuthConfigured","addAuthTokenListener","unsubscribe","updateProactiveRefresh","removeAuthTokenListener","getAuth","isInitialized","deps","initialOptions","getOptions","initialize","initializeAuth","container","getProvider","authInstance","hierarchy","_initializeAuthInstance","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","getVersionForPlatform","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","IDBTransaction","transformCachableValue","func","IDBDatabase","IDBCursor","advance","continue","continuePrimaryKey","apply","unwrap","storeNames","tx","done","unlisten","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","getProviders","component","getComponent","isVersionServiceProvider","library","logString","name$o","version$1","logger","PLATFORM_LOG_STRING","_apps","_components","_addComponent","addComponent","debug","_registerComponent","componentName","values","_getProvider","heartbeatController","triggerHeartbeat","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","val","isDeleted","SDK_VERSION","initializeApp","rawConfig","existingApp","newApp","getApp","DEFAULT_ENTRY_NAME","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","openDB","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","computeKey","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","heartbeatEntry","hb","dates","countBytes","pop","extractHeartbeatsForHeader","headerString","toISOString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","Component","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setMultipleInstances","setServiceProps","props","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","setComponent","isComponentEager","instanceDeferred","clearInstance","services","INTERNAL","_delete","isComponentSet","opts","onInit","existingCallbacks","invokeOnInitCallbacks","callbacks","ComponentContainer","providers","addOrOverwriteComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","Logger","_logLevel","_logHandler","_userLogHandler","TypeError","setLogLevel","logHandler","userLogHandler","log","info","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","defineProperty","enumerable","g","globalThis","commonjsGlobal","esm","goog","l","aa","ba","ea","fa","ha","ia","unshift","q","ja","Z","Vb","f","h","la","na","M","da","ma","qa","concat","ra","sa","x","ta","trim","exec","w","va","wa","xa","ya","za","Aa","Ca","Na","Ha","y","Ia","Ja","Ka","La","Ma","Oa","Pa","Qa","parseFloat","Sa","Ga","Ra","parseInt","Ua","Va","z","defaultPrevented","A","relatedTarget","button","screenY","screenX","clientY","clientX","metaKey","shiftKey","altKey","ctrlKey","state","pointerId","pointerType","changedTouches","srcElement","nodeName","fromElement","toElement","pageX","pageY","Wa","preventDefault","returnValue","B","Xa","Ya","src","capture","ca","Za","$a","bb","splice","ab","fb","once","gb","N","ib","jb","mb","kb","attachEvent","lb","addListener","removeListener","O","nb","ob","detachEvent","pb","C","P","I","D","qb","rb","sb","tb","Ab","vb","j","wb","reset","yb","zb","Db","Bb","Cb","Eb","Fb","S","Gb","Hb","m","Ib","E","Jb","Kb","Lb","Mb","F","Pb","Rb","Sb","Tb","Ub","STAT_EVENT","stat","J","K","Wb","NO_ERROR","xb","TIMEOUT","Xb","Yb","Zb","$b","cc","OPEN","ac","bc","dc","X","V","ec","W","Y","$","U","fc","XMLHttpRequest","gc","hc","ic","jc","kc","lc","mc","nc","G","Nb","qc","Ba","tc","vc","sc","wc","rc","substr","xc","eb","pc","uc","abort","yc","zc","Ac","Bc","Cc","ka","Q","Da","Ea","getResponseHeader","Dc","R","oa","Ec","Fc","Gc","Hc","Ic","Kc","T","Jc","Lc","ga","oc","TextDecoder","decode","stream","Ob","Qb","Mc","Oc","Pc","Qc","Rc","Sc","Tc","dd","Zc","Uc","$c","abs","decodeURI","encodeURI","cd","Vc","Wc","Xc","Yc","Nc","ed","gd","hd","PerformanceNavigationTiming","performance","getEntriesByType","nextHopProtocol","jd","kd","ld","md","od","onabort","pd","qd","readyState","rd","responseType","responseText","statusText","onreadystatechange","ud","td","sd","credentials","cache","Request","arrayBuffer","Ta","ReadableStream","getReader","text","Uint8Array","setRequestHeader","append","getAllResponseHeaders","vd","wd","xd","yd","pa","zd","Cd","Dd","Ed","Fa","Ad","mozResponseArrayBuffer","Gd","Fd","Hd","internalChannelParams","Id","xmlHttpFactory","supportsCrossDomainXhr","concurrentRequestLimit","fastHandshake","forceLongPolling","detectBufferingProxy","Jd","Kd","sendBeacon","Image","Ld","Md","Qd","Pd","round","Od","Rd","Nd","nd","ad","bd","port","Sd","Td","messageUrlParams","messageHeaders","clientProtocolHeaderRequired","initMessageHeaders","messageContentType","httpHeadersOverwriteParam","sendRawJson","httpSessionIdParam","Ud","__sm__","Vd","toUpperCase","FormData","withCredentials","Bd","__data__","createWebChannel","HTTP_ERROR","COMPLETE","EventType","CLOSE","MESSAGE","listen","listenOnce","getLastError","getLastErrorCode","getStatus","getResponseJson","getResponseText","createWebChannelTransport","getStatEventTarget","ErrorCode","Event","Stat","ub","PROXY","NOPROXY","FetchXmlHttpFactory","WebChannel","XhrIo","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","invalidateToken","enqueueRetryable","shutdown","getAuthHeaderValueForFirstParty","tt","appCheck","addTokenListener","removeTokenListener","nt","previousValue","sequenceNumberHandler","writeSequenceNumber","st","crypto","msCrypto","getRandomValues","it","rt","ot","every","at","nanoseconds","fromMillis","toDate","toMillis","_compareTo","padStart","ct","timestamp","compareTo","toMicroseconds","toTimestamp","ht","lt","ft","dt","segments","offset","len","comparator","child","limit","construct","popFirst","popLast","firstSegment","lastSegment","isPrefixOf","isImmediateParentOf","toArray","_t","canonicalString","wt","mt","isValidIdentifier","isKeyField","gt","fields","covers","pt","binaryString","Symbol","iterator","toBase64","toUint8Array","approximateByteSize","EMPTY_BYTE_STRING","It","Tt","nanos","Et","At","fromBase64String","fromUint8Array","Rt","mapValue","__type__","stringValue","bt","__previous_value__","Pt","__local_write_time__","timestampValue","Vt","databaseId","persistenceKey","ssl","autoDetectLongPolling","useFetchStreams","vt","projectId","database","isDefaultDatabase","St","Dt","xt","fromString","emptyPath","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","Nt","Mt","Ht","Ot","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","arrayValue","Ft","$t","Bt","Lt","Ut","fromName","Kt","Gt","Qt","jt","Wt","zt","te","field","getFieldsMap","setAll","applyChanges","clone","ee","ne","documentType","readTime","documentState","empty","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","ce","he","documentKey","largestBatchId","le","fe","root","EMPTY","insert","copy","BLACK","remove","right","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","de","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","we","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","me","unionWith","iter","ye","orderBy","filters","startAt","endAt","pe","Ie","dir","inclusive","Ee","$e","Le","Ae","isDocumentKey","Ve","ve","xe","Ne","ke","Me","Se","De","Ce","nullValue","Oe","Fe","Be","Ue","explicitOrderBy","limitType","Ke","ze","je","Qe","keyField","He","Ye","Xe","Ze","Te","tn","nn","sn","rn","on","un","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Ct","an","cn","dn","_n","wn","mn","ln","yn","hn","gn","elements","pn","En","transformResults","An","updateTime","exists","isNone","Rn","bn","Pn","Cn","kn","fieldTransforms","xn","precondition","Nn","Vn","Mn","Dn","vn","transform","Sn","Tn","fieldMask","On","Fn","$n","count","Bn","Ln","qn","Kn","mapKeyFn","equalsFn","inner","innerSize","Gn","Qn","jn","Wn","zn","Hn","Jn","Yn","Xn","Zn","ts","snapshotVersion","targetChanges","targetMismatches","documentUpdates","resolvedLimboDocuments","es","createSynthesizedTargetChangeForCurrentChange","resumeToken","current","addedDocuments","modifiedDocuments","removedDocuments","ns","removedTargetIds","ss","targetId","is","targetIds","cause","rs","as","et","os","us","ut","forEachTarget","removeTarget","newNoDocument","yt","purpose","getRemoteKeysForTarget","cs","asc","desc","hs","in","ls","fs","ds","_s","ws","fromTimestamp","ms","gs","Ks","ys","ps","As","Is","Es","Rs","Cs","documents","xs","structuredQuery","parent","collectionId","allDescendants","unaryFilter","$s","fieldFilter","Fs","compositeFilter","direction","Os","before","Ns","Ts","Ms","Bs","qe","Us","Ls","fieldPath","fromServerFormat","NaN","qs","fieldPaths","yi","nextCallback","catchCallback","isDone","callbackAttached","wrapFailure","wrapSuccess","wrapUserFunction","waitFor","Ai","Di","batchId","localWriteTime","baseMutations","mutations","applyToRemoteDocument","mutationResults","applyToLocalView","applyToLocalDocumentSet","Ci","batch","commitVersion","docVersions","xi","mutation","getKey","Ni","sequenceNumber","lastLimboFreeSnapshotVersion","withSequenceNumber","withResumeToken","withLastLimboFreeSnapshotVersion","ki","Jt","Ki","Je","Yi","Zt","se","ie","oe","ue","ae","ar","cr","addToCollectionParentIndex","getCollectionParents","getEntries","addFieldIndex","deleteFieldIndex","getDocumentsMatchingTarget","getIndexType","getFieldIndexes","getNextCollectionGroupToUpdate","getMinOffset","updateCollectionGroup","updateIndexEntries","gr","cacheSizeCollectionThreshold","percentileToCollect","maximumSequenceNumbersToCollect","DEFAULT_COLLECTION_PERCENTILE","DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT","DEFAULT","DISABLED","br","Dr","Xr","indexManager","getAllMutationBatchesAffectingDocumentKey","getEntry","Gs","getAllMutationBatchesAffectingDocumentKeys","Qs","js","We","Ws","zs","getAllFromCollection","getAllMutationBatchesAffectingQuery","newInvalidDocument","Zr","fromCache","Hs","Js","docChanges","doc","to","Xs","Zs","ti","ei","ni","Ge","si","ii","ri","eo","oi","ui","ai","ci","hi","getRemoteDocumentCache","getTargetCache","getBundleCache","li","getIndexManager","getMutationQueue","fi","setIndexManager","collectGarbage","runTransaction","collect","so","getAllMutationBatches","di","removedBatchIds","addedBatchIds","ro","getLastRemoteSnapshotVersion","ao","getNextMutationBatchAfterBatchId","ho","referenceDelegate","lo","getTargetData","getMatchingKeysForTargetId","wo","en","_i","yo","pi","getBundleMetadata","saveBundleMetadata","createTime","getNamedQuery","saveNamedQuery","bundledQuery","po","overlays","Ii","getOverlay","saveOverlays","Xt","removeOverlaysForBatchId","getOverlaysForCollection","getOverlaysForCollectionGroup","Io","Ti","To","Ei","Ri","addReference","bi","removeReference","Pi","Vi","vi","Si","containsKey","Eo","checkEmpty","addMutationBatch","lookupMutationBatch","Mi","getHighestUnacknowledgedBatchId","POSITIVE_INFINITY","Oi","removeMutationBatch","Fi","markPotentiallyOrphaned","performConsistencyCheck","Ao","$i","docs","addEntry","removeEntry","getAllFromCollectionGroup","Bi","newChangeBuffer","Ro","getSize","changes","changesApplied","assertNotApplied","getFromCache","getAllFromCache","bo","Li","lastRemoteSnapshotVersion","highestTargetId","Ui","qi","targetCount","getHighestSequenceNumber","allocateTargetId","setTargetsMetadata","addTargetData","updateTargetData","removeTargetData","removeTargets","removeMatchingKeysForTargetId","getTargetCount","addMatchingKeys","removeMatchingKeys","Po","Gi","Qi","started","setDatabaseDeletedListener","setNetworkEnabled","getDocumentOverlayCache","Vo","ji","Wi","raiseOnCommittedEvent","zi","or","onCommittedListeners","addOnCommittedListener","currentSequenceNumber","vo","Hi","Ji","Xi","fromPath","Zi","updateLimboDocument","Oo","activeTargetIds","nr","sr","er","updateTimeMs","$o","Ur","qr","onlineStateHandler","addPendingMutation","updateMutationState","addLocalQueryTarget","updateQueryState","removeLocalQueryTarget","isLocalQueryTarget","clearQueryState","getAllActiveQueryTargets","isActiveQueryTarget","handleUserChange","setOnlineState","notifyBundleLoaded","Bo","Kr","Lo","Gr","Qr","jr","Wr","zr","Hr","Uo","BatchGetDocuments","Commit","RunQuery","qo","Jr","Yr","no","io","oo","Ko","databaseInfo","uo","co","fo","_o","forwardChannelRequestTimeoutMs","Qo","jo","Wo","mo","enqueueAfterDelay","skipDelay","zo","So","authCredentialsProvider","appCheckCredentialsProvider","Do","Co","xo","No","ko","Mo","Fo","Go","enqueueAndForget","Ho","targetChange","targetChangeType","documentChange","newFoundDocument","documentDelete","documentRemove","Vs","addTarget","ks","labels","Jo","Yo","Xo","lastStreamToken","Zo","streamToken","Ds","writeResults","commitTime","tu","eu","nu","writes","update","updateMask","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","vs","authCredentials","appCheckCredentials","su","iu","terminate","asyncQueue","ru","ou","uu","au","cu","hu","lu","fu","localStore","datastore","remoteSyncer","du","_u","wu","mu","gu","yu","Pu","pu","rejectListen","applyRemoteEvent","Vu","Iu","Tu","Eu","applySuccessfulWrite","Au","Un","rejectFailedWrite","Ru","verifyOperationInProgress","handleCredentialChange","stop","vu","targetTimeMs","removalCallback","timerHandle","handleDelayElapsed","Su","Du","keyedMap","sortedSet","Cu","track","xu","oldDocs","mutatedKeys","syncStateChanged","excludesMetadataChanges","emptySet","Nu","ku","queries","onlineState","bu","Fu","Bu","$u","Lu","includeMetadataChanges","fromInitialDocuments","Qu","ju","Wu","Uu","qu","Ku","Gu","zu","Hu","Ju","Yu","snapshot","Xu","Zu","view","remoteStore","sharedClientState","maxConcurrentLimboResolutions","isPrimaryClient","trackRemovals","Ys","synchronizeTabs","gcScheduler","initialUser","createDatastore","createRemoteStore","createEventManager","syncEngine","createSyncEngine","muted","clientId","authCredentialListener","appCheckCredentialListener","setCredentialChangeListener","setAppCheckTokenChangeListener","verifyNotTerminated","isShuttingDown","enterRestrictedMode","enqueueAndForgetEvenWhileRestricted","onlineComponents","offlineComponents","getConfiguration","onListen","onUnlisten","Ou","source","Mu","ignoreUndefinedProperties","cacheSizeBytes","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","_persistenceKey","_settings","_settingsFrozen","_databaseId","_app","_initialized","_terminated","_terminateTask","_setSettings","client","sessionIndex","iamToken","_getSettings","_freezeSettings","_terminate","converter","firestore","_path","withConverter","_query","visibilityState","enqueue","stack","createAndSchedule","_queue","_firestoreClient","_internalPath","_byteString","_methodName","isFinite","_lat","_long","toMutation","yh","methodName","th","eh","merge","mergeFields","fh","wh","ph","lh","dh","_toFieldTransform","fromDate","getPrototypeOf","gh","mh","search","Ih","_firestore","_userDataWriter","_document","_converter","ref","Th","fromFirestore","convertValue","Eh","Ah","Rh","_firestoreImpl","bh","serverTimestamps","nl","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","_l","__awaiter","thisArg","_arguments","generator","step","rejected","storageBucket","messagingSenderId","Server","userData","loginUser","userCred","getData","userLogged","logoutUser","checkUserAuth","signUpUser","setNewDoc","toFirestore","Yh","none","score","docRef","wl"],"sourceRoot":""}